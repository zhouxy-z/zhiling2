{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/friend/FriendHelpItem.ts"],"names":["FriendHelpItem","Button","Color","Component","Input","Label","Slider","Sprite","UITransform","path","sp","MsgTypeSend","Session","PlayerData","ResMgr","quality_color","SelectHeroPanel","CfgMgr","StdCommonType","ToFixed","Tips","GameSet","help_num","quality","addBtn","spine","lock","lv","unlockNode","cost_num","progress","cost_consumeNum","cost_hasNum","confirmBtn","left","right","income_num","lockNode","unlock_cost","unlockBtn","tips","cfgData","select_fee","maxCount","minCount","all_unlock_coun","role","time","dt","touchIndex","touchTime","pos","unlock_cost_num","info","complete","hasLoad","$loadSub","loadSub","thisObj","Promise","resolve","reject","onLoad","node","getChildByPath","getComponent","Skeleton","on","EventType","TOUCH_END","onSelsectHero","onSlider","onDel","onAdd","TOUCH_START","onTouchStart","onConfirmBtn","onUnlockBtn","setData","data","clearInterval","setInterval","updateLayer","bind","assistInfo","slot","is_lock","islock","active","assist_roles_slots","_cost_num","_daily_income","cfg","GetCommon","Friend","color","fromHEX","CostRangeMin","CostRangeMax","setRole","usage_fee","daily_income","string","shownum","lockCost","daily_assist_count","enabled","updateCostProgress","type","SetAssistRoleRequest","role_id","fee","Send","roles","iterator","GetRoles","is_assisting","push","SelectHelp","setHeroIcon","length","role_data","id","std","GetRole","scale","Scale","setScale","skeletonData","LoadResAbSub","join","Prefab","SkeletonData","setAnimation","level","event","e","Show","feeData","SetAssistRoleUsageFeeRequest","Math","floor","size","contentSize","setContentSize","width","hasitem","roleInfo","currency","GetMoneyName","unlockData","UnlockAssistRoleSlotRequest","new_slot_count","index","clearTime"],"mappings":";;;uRAYaA,c;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAZJC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,S,OAAAA,S;AAAuBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,K,OAAAA,K;AAAaC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,M,OAAAA,M;AAAwCC,MAAAA,W,OAAAA,W;AAAgCC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,E,OAAAA,E;;AAChJC,MAAAA,W,iBAAAA,W;;AACAC,MAAAA,O,iBAAAA,O;;AACFC,MAAAA,U;;AAEEC,MAAAA,M,iBAAAA,M;AAA0DC,MAAAA,a,iBAAAA,a;;AAC1DC,MAAAA,e,iBAAAA,e;;AACaC,MAAAA,M,iBAAAA,M;AAAQC,MAAAA,a,iBAAAA,a;;AACdC,MAAAA,O,iBAAAA,O;;AACPC,MAAAA,I,iBAAAA,I;;AACAC,MAAAA,O,kBAAAA,O;;;;;;;;;gCAEIrB,c,GAAN,MAAMA,cAAN,SAA6BG,SAA7B,CAAuC;AAAA;AAAA;AAAA,eAElCmB,QAFkC;AAAA,eAIlCC,OAJkC;AAAA,eAKlCC,MALkC;AAAA,eAMlCC,KANkC;AAAA,eAOlCC,IAPkC;AAAA,eAQlCC,EARkC;AAAA,eAUlCC,UAVkC;AAAA,eAWlCC,QAXkC;AAAA,eAYlCvB,MAZkC;AAAA,eAalCwB,QAbkC;AAAA,eAclCC,eAdkC;AAAA,eAelCC,WAfkC;AAAA,eAgBlCC,UAhBkC;AAAA,eAiBlCC,IAjBkC;AAAA,eAkBlCC,KAlBkC;AAAA,eAmBlCC,UAnBkC;AAAA,eAqBlCC,QArBkC;AAAA,eAsBlCC,WAtBkC;AAAA,eAuBlCC,SAvBkC;AAAA,eAwBlCC,IAxBkC;AA0B1C;AA1B0C,eA2BlCC,OA3BkC;AAAA,eA4BlCC,UA5BkC,GA4BrB,CA5BqB;AAAA,eA6BlCC,QA7BkC,GA6BvB,CA7BuB;AAAA,eA8BlCC,QA9BkC,GA8BvB,CA9BuB;AAAA,eA+BlCC,eA/BkC,GA+BhB,CA/BgB;AAAA,eAgClCC,IAhCkC;AAAA,eAiClCC,IAjCkC;AAAA,eAkClCC,EAlCkC,GAkCrB,IAlCqB;AAAA,eAmClCC,UAnCkC,GAmCrB,CAnCqB;AAAA,eAoClCC,SApCkC,GAoCtB,CApCsB;AAAA,eAqClCC,GArCkC;AAAA,eAsClCC,eAtCkC,GAsCR,CAtCQ;AAAA,eAuClCC,IAvCkC;AAAA,eAyChCC,QAzCgC;AAAA,eA0ChCC,OA1CgC,GA0CtB,KA1CsB;AAAA,eA2ChCC,QA3CgC;AAAA;;AA6CrB,YAAPC,OAAO,GAAG;AACpB,cAAI,KAAKD,QAAT,EAAmB,OAAO,KAAKA,QAAZ;AACnB,cAAIE,OAAO,GAAG,IAAd;AACA,eAAKF,QAAL,GAAgB,IAAIG,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7CH,YAAAA,OAAO,CAACJ,QAAR,GAAmBM,OAAnB;AACH,WAFe,CAAhB;AAGA,iBAAO,KAAKJ,QAAZ;AACH;;AAESM,QAAAA,MAAM,GAAS;AAAA;;AACrB;AACA;AACA,eAAKxC,QAAL,GAAgB,KAAKyC,IAAL,CAAUC,cAAV,CAAyB,kCAAzB,EAA6DC,YAA7D,CAA0E5D,KAA1E,CAAhB;AACA,eAAKkB,OAAL,GAAe,KAAKwC,IAAL,CAAUC,cAAV,CAAyB,oBAAzB,EAA+CC,YAA/C,CAA4D1D,MAA5D,CAAf;AACA,eAAKiB,MAAL,GAAc,KAAKuC,IAAL,CAAUC,cAAV,CAAyB,mBAAzB,CAAd;AACA,eAAKvC,KAAL,GAAa,KAAKsC,IAAL,CAAUC,cAAV,CAAyB,kBAAzB,EAA6CC,YAA7C,CAA0DvD,EAAE,CAACwD,QAA7D,CAAb;AACA,eAAKxC,IAAL,GAAY,KAAKqC,IAAL,CAAUC,cAAV,CAAyB,iBAAzB,CAAZ;AACA,eAAKrC,EAAL,GAAU,KAAKoC,IAAL,CAAUC,cAAV,CAAyB,eAAzB,EAA0CC,YAA1C,CAAuD5D,KAAvD,CAAV;AAEA,eAAKuB,UAAL,GAAkB,KAAKmC,IAAL,CAAUC,cAAV,CAAyB,kBAAzB,CAAlB;AACA,eAAKnC,QAAL,GAAgB,KAAKkC,IAAL,CAAUC,cAAV,CAAyB,mDAAzB,EAA8EC,YAA9E,CAA2F5D,KAA3F,CAAhB;AACA,eAAK+B,UAAL,GAAkB,KAAK2B,IAAL,CAAUC,cAAV,CAAyB,qDAAzB,EAAgFC,YAAhF,CAA6F5D,KAA7F,CAAlB;AACA,eAAKC,MAAL,GAAc,KAAKyD,IAAL,CAAUC,cAAV,CAAyB,+BAAzB,EAA0DC,YAA1D,CAAuE3D,MAAvE,CAAd;AACA,eAAKwB,QAAL,GAAgB,KAAKiC,IAAL,CAAUC,cAAV,CAAyB,wCAAzB,CAAhB;AACA,eAAK/B,UAAL,GAAkB,KAAK8B,IAAL,CAAUC,cAAV,CAAyB,mCAAzB,EAA8DC,YAA9D,CAA2EhE,MAA3E,CAAlB;AACA,eAAKiC,IAAL,GAAY,KAAK6B,IAAL,CAAUC,cAAV,CAAyB,6BAAzB,CAAZ;AACA,eAAK7B,KAAL,GAAa,KAAK4B,IAAL,CAAUC,cAAV,CAAyB,8BAAzB,CAAb;AAEA,eAAK3B,QAAL,GAAgB,KAAK0B,IAAL,CAAUC,cAAV,CAAyB,gBAAzB,CAAhB;AACA,eAAK1B,WAAL,GAAmB,KAAKyB,IAAL,CAAUC,cAAV,CAAyB,0CAAzB,EAAqEC,YAArE,CAAkF5D,KAAlF,CAAnB;AACA,eAAKkC,SAAL,GAAiB,KAAKwB,IAAL,CAAUC,cAAV,CAAyB,0BAAzB,CAAjB;AACA,eAAKxB,IAAL,GAAY,KAAKuB,IAAL,CAAUC,cAAV,CAAyB,qBAAzB,CAAZ,CAtBqB,CAwBrB;;AACA,eAAKD,IAAL,CAAUC,cAAV,CAAyB,YAAzB,EAAuCG,EAAvC,CAA0C/D,KAAK,CAACgE,SAAN,CAAgBC,SAA1D,EAAqE,KAAKC,aAA1E,EAAyF,IAAzF;AACA,eAAKhE,MAAL,CAAYyD,IAAZ,CAAiBI,EAAjB,CAAoB,OAApB,EAA6B,KAAKI,QAAlC,EAA4C,IAA5C;AACA,eAAKrC,IAAL,CAAUiC,EAAV,CAAa/D,KAAK,CAACgE,SAAN,CAAgBC,SAA7B,EAAwC,KAAKG,KAA7C,EAAoD,IAApD;AACA,eAAKrC,KAAL,CAAWgC,EAAX,CAAc/D,KAAK,CAACgE,SAAN,CAAgBC,SAA9B,EAAyC,KAAKI,KAA9C,EAAqD,IAArD;AACA,eAAKvC,IAAL,CAAUiC,EAAV,CAAa/D,KAAK,CAACgE,SAAN,CAAgBM,WAA7B,EAA0C,MAAM;AAAE,iBAAKC,YAAL,CAAkB,CAAlB;AAAsB,WAAxE,EAA0E,IAA1E;AACA,eAAKxC,KAAL,CAAWgC,EAAX,CAAc/D,KAAK,CAACgE,SAAN,CAAgBM,WAA9B,EAA2C,MAAM;AAAE,iBAAKC,YAAL,CAAkB,CAAlB;AAAsB,WAAzE,EAA2E,IAA3E;AACA,eAAK1C,UAAL,CAAgB8B,IAAhB,CAAqBI,EAArB,CAAwB,OAAxB,EAAiC,KAAKS,YAAtC,EAAoD,IAApD;AACA,eAAKrC,SAAL,CAAe4B,EAAf,CAAkB,OAAlB,EAA2B,KAAKU,WAAhC,EAA6C,IAA7C;AACA,eAAKtB,OAAL,GAAe,IAAf;AACA,iCAAKD,QAAL;AACH;AAED;;;AACMwB,QAAAA,OAAO,CAACC,IAAD,EAA4H1B,IAA5H,EAAkJ;AAAA;;AAAA;AAC3J,gBAAI,CAAC,KAAI,CAACE,OAAV,EAAmB,MAAM,KAAI,CAACE,OAAX;AACnB,YAAA,KAAI,CAACd,QAAL,GAAgB,CAAhB;AACA,YAAA,KAAI,CAACU,IAAL,GAAYA,IAAZ;;AACA,gBAAI,KAAI,CAACN,IAAT,EAAe;AACXiC,cAAAA,aAAa,CAAC,KAAI,CAACjC,IAAN,CAAb;AACH,aAFD,MAEO;AACH,cAAA,KAAI,CAACA,IAAL,GAAYkC,WAAW,CAAC,KAAI,CAACC,WAAL,CAAiBC,IAAjB,CAAsB,KAAtB,CAAD,EAA8B,EAA9B,CAAvB;AACH;;AACD,YAAA,KAAI,CAAChC,GAAL,GAAW4B,IAAI,CAACK,UAAL,CAAgBC,IAA3B;AACA,gBAAIC,OAAO,GAAGP,IAAI,CAACQ,MAAnB;AACA,YAAA,KAAI,CAAC/D,MAAL,CAAYgE,MAAZ,GAAqBF,OAArB;AACA,YAAA,KAAI,CAAC5D,IAAL,CAAU8D,MAAV,GAAmB,CAACF,OAApB;AACA,YAAA,KAAI,CAAC1D,UAAL,CAAgB4D,MAAhB,GAAyBF,OAAzB;AACA,YAAA,KAAI,CAACjD,QAAL,CAAcmD,MAAd,GAAuB,CAACF,OAAxB;;AACA,gBAAIjC,IAAI,IAAIA,IAAI,CAACoC,kBAAL,GAA0BV,IAAI,CAAClC,eAA3C,EAA4D;AACxD,cAAA,KAAI,CAACL,IAAL,CAAUgD,MAAV,GAAmB,IAAnB;AACA,cAAA,KAAI,CAACjD,SAAL,CAAeiD,MAAf,GAAwB,KAAxB;AACH,aAHD,MAGO;AACH,cAAA,KAAI,CAAChD,IAAL,CAAUgD,MAAV,GAAmB,KAAnB;AACA,cAAA,KAAI,CAACjD,SAAL,CAAeiD,MAAf,GAAwB,IAAxB;AACH;;AAED,YAAA,KAAI,CAAC/D,KAAL,CAAWsC,IAAX,CAAgByB,MAAhB,GAAyB,KAAzB;AACA,gBAAIE,SAAS,GAAG,CAAhB;AACA,gBAAIC,aAAa,GAAG,CAApB;;AACA,gBAAIL,OAAJ,EAAa;AACT,kBAAIM,GAAG,GAAG;AAAA;AAAA,oCAAOC,SAAP,CAAiB;AAAA;AAAA,kDAAcC,MAA/B,CAAV;AAEA,cAAA,KAAI,CAACrE,KAAL,CAAWsC,IAAX,CAAgByB,MAAhB,GAAyB,KAAzB;AACA,cAAA,KAAI,CAACjE,OAAL,CAAawE,KAAb,GAAqB,IAAI7F,KAAJ,GAAY8F,OAAZ,CAAoB;AAAA;AAAA,kDAAc,CAAd,CAApB,CAArB;;AACA,kBAAIjB,IAAI,CAACjC,IAAT,EAAe;AACX,gBAAA,KAAI,CAACF,QAAL,GAAgBgD,GAAG,CAACK,YAAJ,CAAiBlB,IAAI,CAACjC,IAAL,CAAUvB,OAAV,GAAoB,CAArC,CAAhB;AACA,gBAAA,KAAI,CAACoB,QAAL,GAAgBiD,GAAG,CAACM,YAAJ,CAAiBnB,IAAI,CAACjC,IAAL,CAAUvB,OAAV,GAAoB,CAArC,CAAhB;AACA,gBAAA,KAAI,CAACE,KAAL,CAAWsC,IAAX,CAAgByB,MAAhB,GAAyB,IAAzB;;AACA,gBAAA,KAAI,CAACW,OAAL,CAAapB,IAAI,CAACjC,IAAlB;;AACA4C,gBAAAA,SAAS,GAAGX,IAAI,CAACK,UAAL,CAAgBgB,SAA5B;AACAT,gBAAAA,aAAa,GAAGZ,IAAI,CAACK,UAAL,CAAgBiB,YAAhC;AACH,eAPD,MAOO;AACHX,gBAAAA,SAAS,GAAG,CAAZ;AACAC,gBAAAA,aAAa,GAAG,CAAhB;AACH,eAfQ,CAgBT;;;AACA,cAAA,KAAI,CAAC9D,QAAL,CAAcyE,MAAd,GAAuBZ,SAAS,GAAG,EAAnC;AACA,cAAA,KAAI,CAAChD,UAAL,GAAkBgD,SAAlB,CAlBS,CAoBT;;AACA,kBAAIa,OAAO,GAAG;AAAA;AAAA,sCAAQZ,aAAR,EAAuB,CAAvB,CAAd;AACA,cAAA,KAAI,CAACvD,UAAL,CAAgBkE,MAAhB,GAAyBC,OAAzB;AACH,aAvBD,MAuBO;AACH,cAAA,KAAI,CAACjE,WAAL,CAAiBgE,MAAjB,GAA0BvB,IAAI,CAACyB,QAAL,GAAgB,EAA1C;AACA,cAAA,KAAI,CAACpD,eAAL,GAAuB2B,IAAI,CAACyB,QAA5B;AACH;;AACD,YAAA,KAAI,CAAC3D,eAAL,GAAuBkC,IAAI,CAAClC,eAA5B;AAEA,YAAA,KAAI,CAACvB,QAAL,CAAcgF,MAAd,GAAuBvB,IAAI,CAACK,UAAL,CAAgBqB,kBAAhB,GAAqC,EAA5D;AACA,YAAA,KAAI,CAACnG,MAAL,CAAYoG,OAAZ,GAAsB,KAAI,CAAC/D,QAAL,GAAgB,CAAtC;;AACA,YAAA,KAAI,CAACgE,kBAAL;AAzD2J;AA0D9J;;AAGOrC,QAAAA,aAAa,GAAG;AACpB,cAAI,KAAK7C,KAAL,CAAWsC,IAAX,CAAgByB,MAApB,EAA4B;AACxB,gBAAIT,IAAI,GAAG;AACP6B,cAAAA,IAAI,EAAE;AAAA;AAAA,8CAAYC,oBADX;AAEP9B,cAAAA,IAAI,EAAE;AACF+B,gBAAAA,OAAO,EAAE,EADP;AAEFzB,gBAAAA,IAAI,EAAE,KAAKlC,GAFT;AAGF4D,gBAAAA,GAAG,EAAE;AAHH;AAFC,aAAX;AAQA;AAAA;AAAA,oCAAQC,IAAR,CAAajC,IAAb;AACH,WAVD,MAUO,IAAI,KAAKvD,MAAL,CAAYgE,MAAhB,EAAwB;AAC3B,gBAAIyB,KAAwB,GAAG,EAA/B;;AACA,iBAAK,IAAMC,QAAX,IAAuB;AAAA;AAAA,0CAAWC,QAAX,EAAvB,EAA8C;AAC1C,kBAAI,CAACD,QAAQ,CAACE,YAAd,EAA4B;AACxBH,gBAAAA,KAAK,CAACI,IAAN,CAAWH,QAAX;AACH;AACJ;;AACD;AAAA;AAAA,oDAAgBI,UAAhB,CAA2BL,KAA3B,EAAkC,EAAlC,EAAsC,CAAtC,EAAyC,KAAKM,WAAL,CAAiBpC,IAAjB,CAAsB,IAAtB,CAAzC;AACH;AACJ;AAED;;;AACcoC,QAAAA,WAAW,CAACxC,IAAD,EAA0B;AAAA;;AAAA;AAC/C,gBAAIA,IAAI,IAAIA,IAAI,CAACyC,MAAL,GAAc,CAA1B,EAA6B;AACzB,kBAAIC,SAAS,GAAG;AACZb,gBAAAA,IAAI,EAAE;AAAA;AAAA,gDAAYC,oBADN;AAEZ9B,gBAAAA,IAAI,EAAE;AACF+B,kBAAAA,OAAO,EAAE/B,IAAI,CAAC,CAAD,CAAJ,CAAQ2C,EADf;AAEFrC,kBAAAA,IAAI,EAAE,MAAI,CAAClC,GAFT;AAGF4D,kBAAAA,GAAG,EAAE,MAAI,CAACrE;AAHR;AAFM,eAAhB;AAQA;AAAA;AAAA,sCAAQsE,IAAR,CAAaS,SAAb;AACH;AAX8C;AAYlD;;AAEKtB,QAAAA,OAAO,CAACsB,SAAD,EAA6B;AAAA;;AAAA;AACtC,gBAAI,CAACA,SAAL,EAAgB;AAChB,gBAAIE,GAAY,GAAG;AAAA;AAAA,kCAAOC,OAAP,GAAiBH,SAAS,CAACb,IAA3B,CAAnB;AACA,YAAA,MAAI,CAACrF,OAAL,CAAawE,KAAb,GAAqB,IAAI7F,KAAJ,GAAY8F,OAAZ,CAAoB;AAAA;AAAA,gDAAcyB,SAAS,CAAClG,OAAxB,CAApB,CAArB,CAHsC,CAItC;AACA;;AACA,YAAA,MAAI,CAACE,KAAL,CAAWsC,IAAX,CAAgByB,MAAhB,GAAyB,IAAzB;AACA,gBAAIqC,KAAK,GAAGF,GAAG,CAACG,KAAJ,IAAa,CAAzB;;AACA,YAAA,MAAI,CAACrG,KAAL,CAAWsC,IAAX,CAAgBgE,QAAhB,CAAyB,MAAMF,KAA/B,EAAsC,MAAMA,KAA5C;;AACA,YAAA,MAAI,CAACpG,KAAL,CAAWuG,YAAX,SAAgC;AAAA;AAAA,kCAAOC,YAAP,CAAoBxH,IAAI,CAACyH,IAAL,CAAU,cAAV,EAA0BP,GAAG,CAACQ,MAA9B,EAAsCR,GAAG,CAACQ,MAA1C,CAApB,EAAuEzH,EAAE,CAAC0H,YAA1E,CAAhC;;AACA,YAAA,MAAI,CAAC3G,KAAL,CAAW4G,YAAX,CAAwB,CAAxB,UAAmC,IAAnC;;AAEA,YAAA,MAAI,CAAC1G,EAAL,CAAQoC,IAAR,CAAayB,MAAb,GAAsB,IAAtB;AACA,YAAA,MAAI,CAAC7D,EAAL,CAAQ2E,MAAR,GAAiB,OAAOmB,SAAS,CAACa,KAAlC;AACA,YAAA,MAAI,CAACxF,IAAL,GAAY2E,SAAZ;AAdsC;AAezC;;AAGOjD,QAAAA,KAAK,CAAC+D,KAAD,EAAS;AAClB,eAAK7F,UAAL,IAAmB,KAAKE,QAAxB;;AACA,cAAI,KAAKF,UAAL,GAAkB,KAAKE,QAA3B,EAAqC;AACjC,iBAAKF,UAAL,GAAkB,KAAKE,QAAvB;AACH;;AACD,eAAK+D,kBAAL;;AACA,cAAI4B,KAAJ,EAAW;AACP,iBAAKtF,UAAL,GAAkB,CAAlB;AACA,iBAAKC,SAAL,GAAiB,CAAjB;AACH;AACJ;;AAEOuB,QAAAA,KAAK,CAAC8D,KAAD,EAAS;AAClB,eAAK7F,UAAL,IAAmB,KAAKE,QAAxB;;AACA,cAAI,KAAKF,UAAL,GAAkB,KAAKC,QAA3B,EAAqC;AACjC,iBAAKD,UAAL,GAAkB,KAAKC,QAAvB;AACH;;AACD,eAAKgE,kBAAL;;AACA,cAAI4B,KAAJ,EAAW;AACP,iBAAKtF,UAAL,GAAkB,CAAlB;AACA,iBAAKC,SAAL,GAAiB,CAAjB;AACH;AACJ;;AAEOqB,QAAAA,QAAQ,CAACiE,CAAD,EAAa;AACzB,eAAK9F,UAAL,GAAkB,KAAKC,QAAL,GAAgB,KAAKrC,MAAL,CAAYwB,QAA9C;;AACA,cAAI,KAAKY,UAAL,GAAkB,KAAKE,QAA3B,EAAqC;AACjC,iBAAKF,UAAL,GAAkB,KAAKE,QAAvB;AACH;;AACD,eAAKK,UAAL,GAAkB,CAAlB;AACA,eAAKC,SAAL,GAAiB,CAAjB;AACA,eAAKyD,kBAAL;AACH;;AAEO/B,QAAAA,YAAY,GAAG;AACnB,cAAI,CAAC,KAAK9B,IAAN,IAAc,CAAC,KAAKA,IAAL,CAAU4E,EAA7B,EAAiC;AAC7B;AAAA;AAAA,8BAAKe,IAAL,CAAU,OAAV;AACA;AACH;;AACD,cAAIC,OAAO,GAAG;AACV9B,YAAAA,IAAI,EAAE;AAAA;AAAA,4CAAY+B,4BADR;AAEV5D,YAAAA,IAAI,EAAE;AAAE+B,cAAAA,OAAO,EAAE,KAAKhE,IAAL,CAAU4E,EAArB;AAAyBtB,cAAAA,SAAS,EAAE,KAAK1D;AAAzC;AAFI,WAAd;AAIA;AAAA;AAAA,kCAAQsE,IAAR,CAAa0B,OAAb;AACH;;AAEO/B,QAAAA,kBAAkB,GAAG;AACzB,cAAI,KAAKjE,UAAL,IAAmB,CAAvB,EAA0B;AAC1B,eAAKA,UAAL,GAAkBkG,IAAI,CAACC,KAAL,CAAW,KAAKnG,UAAL,GAAkB,GAA7B,IAAoC,GAAtD;AACA,eAAKb,QAAL,CAAcyE,MAAd,GAAuB,KAAK5D,UAAL,GAAkB,EAAzC;;AACA,cAAI,KAAKC,QAAL,IAAiB,CAArB,EAAwB;AACpB,iBAAKrC,MAAL,CAAYwB,QAAZ,GAAuB,CAAvB;AACH,WAFD,MAEO;AACH,iBAAKxB,MAAL,CAAYwB,QAAZ,GAAuB,KAAKY,UAAL,GAAkB,KAAKC,QAA9C;AACH;;AACD,cAAImG,IAAI,GAAG,KAAKxI,MAAL,CAAYyD,IAAZ,CAAiBE,YAAjB,CAA8BzD,WAA9B,EAA2CuI,WAAtD;AACA,eAAKjH,QAAL,CAAcmC,YAAd,CAA2BzD,WAA3B,EAAwCwI,cAAxC,CAAuD,KAAK1I,MAAL,CAAYwB,QAAZ,GAAuBgH,IAAI,CAACG,KAAnF,EAA0F,EAA1F;AACH;;AAEOpE,QAAAA,WAAW,GAAG;AAClB,cAAIqE,OAAO,GAAG;AAAA;AAAA,wCAAWC,QAAX,CAAoBC,QAAlC;;AACA,cAAIF,OAAO,GAAG,KAAK9F,eAAnB,EAAoC;AAChC;AAAA;AAAA,8BAAKqF,IAAL,CAAU;AAAA;AAAA,oCAAQY,YAAR,KAAyB,IAAnC;AACA;AACH;;AACD,cAAIC,UAAU,GAAG;AACb1C,YAAAA,IAAI,EAAE;AAAA;AAAA,4CAAY2C,2BADL;AAEbxE,YAAAA,IAAI,EAAE;AAAEyE,cAAAA,cAAc,EAAE,KAAK3G,eAAL,GAAuB;AAAzC;AAFO,WAAjB;AAIA;AAAA;AAAA,kCAAQmE,IAAR,CAAasC,UAAb;AACH;;AAEO3E,QAAAA,YAAY,CAAC8E,KAAD,EAAgB;AAChC,eAAKxG,UAAL,GAAkBwG,KAAlB;AACH;;AAEOvE,QAAAA,WAAW,GAAG;AAClB,cAAI,KAAKjC,UAAL,IAAmB,CAAvB,EAA0B;AACtB,iBAAKC,SAAL,IAAkB,KAAKF,EAAvB;;AACA,gBAAI,KAAKE,SAAL,IAAkB,GAAtB,EAA2B;AACvB,mBAAKA,SAAL,GAAiB,IAAjB;;AACA,sBAAQ,KAAKD,UAAb;AACI,qBAAK,CAAL;AACI,uBAAKuB,KAAL;AACA;;AACJ,qBAAK,CAAL;AACI,uBAAKC,KAAL;AACA;AANR;AAQH;AACJ;AACJ;;AAEMiF,QAAAA,SAAS,GAAG;AACf1E,UAAAA,aAAa,CAAC,KAAKjC,IAAN,CAAb;AACH;;AA/SyC,O","sourcesContent":["import { Button, Color, Component, EventTouch, Input, Label, Node, Slider, Sprite, SpriteFrame, Toggle, UIOpacity, UITransform, Vec3, instantiate, path, sp, v3 } from \"cc\";\r\nimport { MsgTypeSend } from \"../../MsgType\";\r\nimport { Session } from \"../../net/Session\";\r\nimport PlayerData from \"../roleModule/PlayerData\"\r\n import {SDownlineInfo,SGetAgentInfo,SIncomesInfo,SPlayerData,SPlayerDataRole,SPlayerDataTask,SRoleAssistData,STaskState} from \"../roleModule/PlayerStruct\";\r\nimport { ResMgr, folder_head_card, folder_head_round, folder_icon, quality_color } from \"../../manager/ResMgr\";\r\nimport { SelectHeroPanel } from \"../common/SelectHeroPanel\";\r\nimport { CardQuality, CfgMgr, StdCommonType, StdRole } from \"../../manager/CfgMgr\";\r\nimport { Mathf, ToFixed, formatNumber } from \"../../utils/Utils\";\r\nimport { Tips } from \"../login/Tips\";\r\nimport { GameSet } from \"../GameSet\";\r\n\r\nexport class FriendHelpItem extends Component {\r\n\r\n    private help_num: Label;\r\n\r\n    private quality: Sprite;\r\n    private addBtn: Node;\r\n    private spine: sp.Skeleton;\r\n    private lock: Node;\r\n    private lv: Label;\r\n\r\n    private unlockNode: Node;\r\n    private cost_num: Label;\r\n    private Slider: Slider;\r\n    private progress: Node;\r\n    private cost_consumeNum: Label;\r\n    private cost_hasNum: Label;\r\n    private confirmBtn: Button;\r\n    private left: Node;\r\n    private right: Node\r\n    private income_num: Label;\r\n\r\n    private lockNode: Node;\r\n    private unlock_cost: Label;\r\n    private unlockBtn: Node;\r\n    private tips: Node;\r\n\r\n    //助战配置\r\n    private cfgData\r\n    private select_fee = 0;\r\n    private maxCount = 0;\r\n    private minCount = 0;\r\n    private all_unlock_coun = 0;\r\n    private role: SPlayerDataRole;\r\n    private time: number;\r\n    private dt: number = 0.01;\r\n    private touchIndex = 0;\r\n    private touchTime = 0;\r\n    private pos: number;\r\n    private unlock_cost_num: number = 0;\r\n    private info: SGetAgentInfo;\r\n\r\n    protected complete: Function;\r\n    protected hasLoad = false;\r\n    protected $loadSub: Promise<any>;\r\n\r\n    protected get loadSub() {\r\n        if (this.$loadSub) return this.$loadSub;\r\n        let thisObj = this;\r\n        this.$loadSub = new Promise((resolve, reject) => {\r\n            thisObj.complete = resolve;\r\n        });\r\n        return this.$loadSub;\r\n    }\r\n\r\n    protected onLoad(): void {\r\n        // let tittle = this.node.getChildByPath(\"frame/tittle_bg/tittle\").getComponent(Label);\r\n        // let help = this.node.getChildByPath(\"frame/tittle_bg/lblNode/help\").getComponent(Label);\r\n        this.help_num = this.node.getChildByPath(\"frame/tittle_bg/lblNode/help_num\").getComponent(Label);\r\n        this.quality = this.node.getChildByPath(\"frame/Node/quality\").getComponent(Sprite);\r\n        this.addBtn = this.node.getChildByPath(\"frame/Node/addBtn\");\r\n        this.spine = this.node.getChildByPath(\"frame/Node/spine\").getComponent(sp.Skeleton);\r\n        this.lock = this.node.getChildByPath(\"frame/Node/lock\");\r\n        this.lv = this.node.getChildByPath(\"frame/Node/lv\").getComponent(Label);\r\n\r\n        this.unlockNode = this.node.getChildByPath(\"frame/unlockNode\");\r\n        this.cost_num = this.node.getChildByPath(\"frame/unlockNode/help_cost_bg/bg/cost_bg/cost_num\").getComponent(Label);\r\n        this.income_num = this.node.getChildByPath(\"frame/unlockNode/help_cost_bg/incomeNode/income_num\").getComponent(Label);\r\n        this.Slider = this.node.getChildByPath(\"frame/unlockNode/page1/Slider\").getComponent(Slider);\r\n        this.progress = this.node.getChildByPath(\"frame/unlockNode/page1/Slider/progress\");\r\n        this.confirmBtn = this.node.getChildByPath(\"frame/unlockNode/page1/confirmBtn\").getComponent(Button);\r\n        this.left = this.node.getChildByPath(\"frame/unlockNode/page1/left\");\r\n        this.right = this.node.getChildByPath(\"frame/unlockNode/page1/right\");\r\n\r\n        this.lockNode = this.node.getChildByPath(\"frame/lockNode\");\r\n        this.unlock_cost = this.node.getChildByPath(\"frame/lockNode/bg/incomeNode/unlock_cost\").getComponent(Label);\r\n        this.unlockBtn = this.node.getChildByPath(\"frame/lockNode/unlockBtn\");\r\n        this.tips = this.node.getChildByPath(\"frame/lockNode/tips\");\r\n\r\n        // this.addBtn.on(Input.EventType.TOUCH_START, this.onSelsectHero, this);\r\n        this.node.getChildByPath(\"frame/Node\").on(Input.EventType.TOUCH_END, this.onSelsectHero, this);\r\n        this.Slider.node.on('slide', this.onSlider, this);\r\n        this.left.on(Input.EventType.TOUCH_END, this.onDel, this);\r\n        this.right.on(Input.EventType.TOUCH_END, this.onAdd, this);\r\n        this.left.on(Input.EventType.TOUCH_START, () => { this.onTouchStart(1) }, this);\r\n        this.right.on(Input.EventType.TOUCH_START, () => { this.onTouchStart(2) }, this);\r\n        this.confirmBtn.node.on(\"click\", this.onConfirmBtn, this);\r\n        this.unlockBtn.on(\"click\", this.onUnlockBtn, this);\r\n        this.hasLoad = true;\r\n        this.complete?.();\r\n    }\r\n\r\n    /**好友列表数据 */\r\n    async setData(data: { islock: boolean, lockCost: number, all_unlock_coun: number, assistInfo: SRoleAssistData, role: SPlayerDataRole, }, info?: SGetAgentInfo) {\r\n        if (!this.hasLoad) await this.loadSub;\r\n        this.maxCount = 0;\r\n        this.info = info;\r\n        if (this.time) {\r\n            clearInterval(this.time);\r\n        } else {\r\n            this.time = setInterval(this.updateLayer.bind(this), 20);\r\n        }\r\n        this.pos = data.assistInfo.slot\r\n        let is_lock = data.islock\r\n        this.addBtn.active = is_lock;\r\n        this.lock.active = !is_lock\r\n        this.unlockNode.active = is_lock\r\n        this.lockNode.active = !is_lock\r\n        if (info && info.assist_roles_slots < data.all_unlock_coun) {\r\n            this.tips.active = true;\r\n            this.unlockBtn.active = false;\r\n        } else {\r\n            this.tips.active = false;\r\n            this.unlockBtn.active = true;\r\n        }\r\n\r\n        this.spine.node.active = false;\r\n        let _cost_num = 0;\r\n        let _daily_income = 0;\r\n        if (is_lock) {\r\n            let cfg = CfgMgr.GetCommon(StdCommonType.Friend);\r\n\r\n            this.spine.node.active = false;\r\n            this.quality.color = new Color().fromHEX(quality_color[0]);\r\n            if (data.role) {\r\n                this.minCount = cfg.CostRangeMin[data.role.quality - 1];\r\n                this.maxCount = cfg.CostRangeMax[data.role.quality - 1];\r\n                this.spine.node.active = true;\r\n                this.setRole(data.role)\r\n                _cost_num = data.assistInfo.usage_fee;\r\n                _daily_income = data.assistInfo.daily_income;\r\n            } else {\r\n                _cost_num = 0;\r\n                _daily_income = 0;\r\n            }\r\n            //助战费用配置\r\n            this.cost_num.string = _cost_num + \"\";\r\n            this.select_fee = _cost_num;\r\n\r\n            //今日收益\r\n            let shownum = ToFixed(_daily_income, 2);\r\n            this.income_num.string = shownum;\r\n        } else {\r\n            this.unlock_cost.string = data.lockCost + \"\";\r\n            this.unlock_cost_num = data.lockCost;\r\n        }\r\n        this.all_unlock_coun = data.all_unlock_coun;\r\n\r\n        this.help_num.string = data.assistInfo.daily_assist_count + \"\";\r\n        this.Slider.enabled = this.maxCount > 0;\r\n        this.updateCostProgress();\r\n    }\r\n\r\n\r\n    private onSelsectHero() {\r\n        if (this.spine.node.active) {\r\n            let data = {\r\n                type: MsgTypeSend.SetAssistRoleRequest,\r\n                data: {\r\n                    role_id: \"\",\r\n                    slot: this.pos,\r\n                    fee: 0,\r\n                }\r\n            }\r\n            Session.Send(data);\r\n        } else if (this.addBtn.active) {\r\n            let roles: SPlayerDataRole[] = [];\r\n            for (const iterator of PlayerData.GetRoles()) {\r\n                if (!iterator.is_assisting) {\r\n                    roles.push(iterator);\r\n                }\r\n            }\r\n            SelectHeroPanel.SelectHelp(roles, [], 1, this.setHeroIcon.bind(this));\r\n        }\r\n    }\r\n\r\n    /**设置助战英雄 */\r\n    private async setHeroIcon(data: SPlayerDataRole[]) {\r\n        if (data && data.length > 0) {\r\n            let role_data = {\r\n                type: MsgTypeSend.SetAssistRoleRequest,\r\n                data: {\r\n                    role_id: data[0].id,\r\n                    slot: this.pos,\r\n                    fee: this.select_fee,\r\n                }\r\n            }\r\n            Session.Send(role_data);\r\n        }\r\n    }\r\n\r\n    async setRole(role_data: SPlayerDataRole) {\r\n        if (!role_data) return;\r\n        let std: StdRole = CfgMgr.GetRole()[role_data.type];\r\n        this.quality.color = new Color().fromHEX(quality_color[role_data.quality]);\r\n        // this.spine.node.off(Input.EventType.TOUCH_START);\r\n        // this.spine.node.on(Input.EventType.TOUCH_START, this.onResetHero, this);\r\n        this.spine.node.active = true;\r\n        let scale = std.Scale || 1;\r\n        this.spine.node.setScale(0.4 * scale, 0.4 * scale);\r\n        this.spine.skeletonData = await ResMgr.LoadResAbSub(path.join(\"spine/role_p\", std.Prefab, std.Prefab), sp.SkeletonData);\r\n        this.spine.setAnimation(0, `Idle`, true);\r\n\r\n        this.lv.node.active = true;\r\n        this.lv.string = \"Lv\" + role_data.level;\r\n        this.role = role_data;\r\n    }\r\n\r\n\r\n    private onDel(event?) {\r\n        this.select_fee -= this.minCount;\r\n        if (this.select_fee < this.minCount) {\r\n            this.select_fee = this.minCount;\r\n        }\r\n        this.updateCostProgress();\r\n        if (event) {\r\n            this.touchIndex = 0;\r\n            this.touchTime = 0;\r\n        }\r\n    }\r\n\r\n    private onAdd(event?) {\r\n        this.select_fee += this.minCount;\r\n        if (this.select_fee > this.maxCount) {\r\n            this.select_fee = this.maxCount;\r\n        }\r\n        this.updateCostProgress();\r\n        if (event) {\r\n            this.touchIndex = 0;\r\n            this.touchTime = 0;\r\n        }\r\n    }\r\n\r\n    private onSlider(e?: Slider) {\r\n        this.select_fee = this.maxCount * this.Slider.progress;\r\n        if (this.select_fee < this.minCount) {\r\n            this.select_fee = this.minCount;\r\n        }\r\n        this.touchIndex = 0;\r\n        this.touchTime = 0;\r\n        this.updateCostProgress();\r\n    }\r\n\r\n    private onConfirmBtn() {\r\n        if (!this.role || !this.role.id) {\r\n            Tips.Show(\"无助战英雄\");\r\n            return;\r\n        }\r\n        let feeData = {\r\n            type: MsgTypeSend.SetAssistRoleUsageFeeRequest,\r\n            data: { role_id: this.role.id, usage_fee: this.select_fee }\r\n        }\r\n        Session.Send(feeData);\r\n    }\r\n\r\n    private updateCostProgress() {\r\n        if (this.select_fee == 0) return\r\n        this.select_fee = Math.floor(this.select_fee * 100) / 100\r\n        this.cost_num.string = this.select_fee + \"\";\r\n        if (this.maxCount == 0) {\r\n            this.Slider.progress = 0\r\n        } else {\r\n            this.Slider.progress = this.select_fee / this.maxCount;\r\n        }\r\n        let size = this.Slider.node.getComponent(UITransform).contentSize;\r\n        this.progress.getComponent(UITransform).setContentSize(this.Slider.progress * size.width, 28);\r\n    }\r\n\r\n    private onUnlockBtn() {\r\n        let hasitem = PlayerData.roleInfo.currency\r\n        if (hasitem < this.unlock_cost_num) {\r\n            Tips.Show(GameSet.GetMoneyName() + \"不足\");\r\n            return;\r\n        }\r\n        let unlockData = {\r\n            type: MsgTypeSend.UnlockAssistRoleSlotRequest,\r\n            data: { new_slot_count: this.all_unlock_coun + 1, }\r\n        }\r\n        Session.Send(unlockData);\r\n    }\r\n\r\n    private onTouchStart(index: number) {\r\n        this.touchIndex = index;\r\n    }\r\n\r\n    private updateLayer() {\r\n        if (this.touchIndex != 0) {\r\n            this.touchTime += this.dt;\r\n            if (this.touchTime >= 0.3) {\r\n                this.touchTime = 0.28;\r\n                switch (this.touchIndex) {\r\n                    case 1:\r\n                        this.onDel();\r\n                        break;\r\n                    case 2:\r\n                        this.onAdd();\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public clearTime() {\r\n        clearInterval(this.time);\r\n    }\r\n\r\n}"]}