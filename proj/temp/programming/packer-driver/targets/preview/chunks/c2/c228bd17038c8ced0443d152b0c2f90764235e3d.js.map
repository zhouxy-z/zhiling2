{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/battle/opOutput/Out_DelToHand_2d.ts"],"names":["Out_DelToHand_2d","tween","UITransform","v3","BattleBaseComp","battleLogicMgr","BattleCard","battleDataMgr","start","showCardLayer","active","data","card","creatCard","console","error","exit","reset","layerTrans","getComponent","startPos","convertToWorldSpaceAR","width","cardNode","fromPoolCard","cardCom","addComponent","setData","parent","layer","worldPosition","targetPos","isPlayerA","ownerPlayerId","grid","handGridList","cardData","instId","node","to","easing","call","putCardToPool"],"mappings":";;;kKAUaA,gB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAVEC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,E,OAAAA,E;;AAE1BC,MAAAA,c,iBAAAA,c;;AACAC,MAAAA,c,iBAAAA,c;;AACAC,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,a,iBAAAA,a;;;;;;;;;AAET;AACA;AACA;kCACaP,gB,GAAN,MAAMA,gBAAN;AAAA;AAAA,4CAAkF;AAC3EQ,QAAAA,KAAK,GAAS;AACpB;AAAA;AAAA,gDAAeC,aAAf,CAA6BC,MAA7B,GAAsC,IAAtC;;AACA,cAAI,KAAKC,IAAL,CAAUC,IAAd,EAAoB;AAChB,iBAAKC,SAAL;AACH,WAFD,MAEO;AACHC,YAAAA,OAAO,CAACC,KAAR,CAAc,WAAd;AACA,iBAAKC,IAAL;AACH;AACJ;;AAESC,QAAAA,KAAK,GAAS;AACpB;AAAA;AAAA,gDAAeR,aAAf,CAA6BC,MAA7B,GAAsC,KAAtC;AACH;;AAEOG,QAAAA,SAAS,GAAS;AACtB,cAAIK,UAAuB,GAAG;AAAA;AAAA,gDAAeT,aAAf,CAA6BU,YAA7B,CAA0CjB,WAA1C,CAA9B;AACA,cAAIkB,QAAc,GAAGF,UAAU,CAACG,qBAAX,CAAiClB,EAAE,CAACe,UAAU,CAACI,KAAX,GAAmB,GAApB,EAAyB,CAAzB,EAA4B,CAA5B,CAAnC,CAArB;AACA,cAAIC,QAAc,GAAG;AAAA;AAAA,gDAAeC,YAApC;AACA,cAAIC,OAAmB,GAAGF,QAAQ,CAACJ,YAAT;AAAA;AAAA,2CAAqCI,QAAQ,CAACG,YAAT;AAAA;AAAA,uCAA/D;AACAD,UAAAA,OAAO,CAACE,OAAR,CAAgB,KAAKhB,IAAL,CAAUC,IAA1B;AACAW,UAAAA,QAAQ,CAACK,MAAT,GAAkB;AAAA;AAAA,gDAAenB,aAAjC;AACAc,UAAAA,QAAQ,CAACM,KAAT,GAAiBN,QAAQ,CAACK,MAAT,CAAgBC,KAAjC;AACAN,UAAAA,QAAQ,CAACO,aAAT,GAAyBV,QAAzB;AACAG,UAAAA,QAAQ,CAACb,MAAT,GAAkB,IAAlB;AACA,cAAIqB,SAAJ,CAVsB,CAWtB;;AACA,cAAI;AAAA;AAAA,8CAAcC,SAAd,CAAwB,KAAKC,aAA7B,CAAJ,EAAiD;AAC7C,iBAAK,IAAIC,IAAT,IAAiB;AAAA;AAAA,kDAAeC,YAAhC,EAA8C;AAC1C,kBAAID,IAAI,CAACE,QAAL,IAAiBF,IAAI,CAACE,QAAL,CAAcC,MAAd,IAAwB,KAAK1B,IAAL,CAAUC,IAAV,CAAeyB,MAA5D,EAAoE;AAChEN,gBAAAA,SAAS,GAAGG,IAAI,CAACI,IAAL,CAAUR,aAAtB;AACAI,gBAAAA,IAAI,CAACP,OAAL,CAAa,IAAb;AACA;AACH;AACJ;AAEJ,WATD,MASO;AACHI,YAAAA,SAAS,GAAGb,UAAU,CAACG,qBAAX,CAAiClB,EAAE,CAAC,CAAD,EAAI,CAACe,UAAU,CAACI,KAAZ,GAAoB,GAAxB,EAA6B,CAA7B,CAAnC,CAAZ;AAEH;;AAEDrB,UAAAA,KAAK,CAACwB,OAAO,CAACa,IAAT,CAAL,CACCC,EADD,CACI,GADJ,EACS;AAAET,YAAAA,aAAa,EAAEC;AAAjB,WADT,EACuC;AAAES,YAAAA,MAAM,EAAE;AAAV,WADvC,EAECC,IAFD,CAEM,MAAI;AACN;AAAA;AAAA,kDAAeC,aAAf,CAA6BnB,QAA7B;AACA,iBAAKP,IAAL;AACH,WALD,EAMCR,KAND;AAOH;;AAhDoF,O","sourcesContent":["import { Node, tween, UITransform, v3, Vec3 } from \"cc\";\r\nimport { base } from \"../../../net/proto/proto\";\r\nimport { BattleBaseComp } from \"../BattleBaseComp\";\r\nimport { battleLogicMgr } from \"../BattleLogicMgr\";\r\nimport { BattleCard } from \"../BattleCard\";\r\nimport { battleDataMgr } from \"../BattleDataMgr\";\r\nimport { BattleCardGrid } from \"../BattleCardGrid\";\r\n/**\r\n * 删除区域的卡到手卡\r\n */\r\nexport class Out_DelToHand_2d extends BattleBaseComp<base.IBattleRoomOpOutput_DelToHand> {\r\n    protected start(): void {\r\n        battleLogicMgr.showCardLayer.active = true;\r\n        if (this.data.card) {\r\n            this.creatCard();\r\n        } else {\r\n            console.error(\"删除区域的卡到手卡\");\r\n            this.exit();\r\n        }\r\n    }\r\n\r\n    protected reset(): void {\r\n        battleLogicMgr.showCardLayer.active = false;\r\n    }\r\n\r\n    private creatCard(): void {\r\n        let layerTrans: UITransform = battleLogicMgr.showCardLayer.getComponent(UITransform);\r\n        let startPos: Vec3 = layerTrans.convertToWorldSpaceAR(v3(layerTrans.width * 0.5, 0, 0));\r\n        let cardNode: Node = battleLogicMgr.fromPoolCard;\r\n        let cardCom: BattleCard = cardNode.getComponent(BattleCard) || cardNode.addComponent(BattleCard);\r\n        cardCom.setData(this.data.card);\r\n        cardNode.parent = battleLogicMgr.showCardLayer;\r\n        cardNode.layer = cardNode.parent.layer;\r\n        cardNode.worldPosition = startPos;\r\n        cardNode.active = true;\r\n        let targetPos: Vec3;\r\n        //第一视觉玩家\r\n        if (battleDataMgr.isPlayerA(this.ownerPlayerId)) {\r\n            for (let grid of battleLogicMgr.handGridList) {\r\n                if (grid.cardData && grid.cardData.instId == this.data.card.instId) {\r\n                    targetPos = grid.node.worldPosition;\r\n                    grid.setData(null);\r\n                    break;\r\n                }\r\n            }\r\n            \r\n        } else {\r\n            targetPos = layerTrans.convertToWorldSpaceAR(v3(0, -layerTrans.width * 0.5, 0));\r\n            \r\n        }\r\n\r\n        tween(cardCom.node)\r\n        .to(0.5, { worldPosition: targetPos }, { easing: 'cubicIn' })\r\n        .call(()=>{\r\n            battleLogicMgr.putCardToPool(cardNode);\r\n            this.exit();\r\n        })\r\n        .start();\r\n    }\r\n\r\n    \r\n}"]}