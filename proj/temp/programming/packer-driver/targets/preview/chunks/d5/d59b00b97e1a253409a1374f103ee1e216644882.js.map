{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/trade/TradeModule.ts"],"names":["TradeModule","CfgMgr","Ret","Route","Session","MsgPanel","PlayerData","OrderStateType","BuyPanel","TradeCreateOrderPanel","TradePanel","constructor","on","onItemViewRet","onItemOrder","MarketItemOrderMakePush","onItemOrderPush","onCancelItemOrder","MarketItemOrderCancelledPush","onItemCanelOrderPush","onItemGetMyOrder","onItemExchangesTradeRet","MarketItemOrderTakePush","onItemExchangesTradePush","onCardViewRet","onCardBuyOrder","onCardSellOrder","MarketCardOrderMakePush","onCardOrderPush","onCancelCardOrder","MarketCardOrderCancelledPush","onCardCanelOrderPush","onCardGetMyOrder","onCardExchangesTradeRet","MarketCardOrderTakePush","onCardExchangesTradePush","data","trade_data","decode","console","log","res","code","tradeViewData","iterator","orders","status","cancelled","push","total","length","startId","findIndex","id","ins","onGetViewData","Show","GetErrorCfgByCode","Hide","playerId","player","order","updateMyOrderData","index","item","splice","order_data","SendBuyOrSellType","createdAt","currency","expiresAt","groupNum","itemId","itemType","makerId","orderId","orderType","price","quantity","quantityRemaining","totalPrice","updatedAt","tradeCardViewData","takerId","card","cardClass","cardRarity","goodsGroup"],"mappings":"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","sourcesContent":["import { CfgMgr } from \"../../manager/CfgMgr\";\r\nimport { Ret, Route } from \"../../net/Protocol\";\r\nimport { Session } from \"../../net/Session\";\r\nimport { MsgPanel } from \"../common/MsgPanel\";\r\nimport { PlayerData } from \"../player/PlayerData\";\r\nimport { OrderStateType } from \"../player/PlayerStruct\";\r\nimport { BuyPanel } from \"./BuyPanel\";\r\nimport { TradeCreateOrderPanel } from \"./TradeCreateOrderPanel\";\r\nimport { TradePanel } from \"./TradePanel\";\r\n\r\nexport class TradeModule {\r\n    constructor() {\r\n        //查询订单（道具）\r\n        Session.on(Route[\"market.protocol.searchitemorders\"], this.onItemViewRet, this);\r\n        //上架订单(道具)\r\n        Session.on(Route[\"market.protocol.makeitemorder\"], this.onItemOrder, this);\r\n        //交易行上架（道具）消息推送\r\n        Session.on(Route.MarketItemOrderMakePush, this.onItemOrderPush, this);\r\n        //下架订单（道具）\r\n        Session.on(Route[\"market.protocol.cancelitemorder\"], this.onCancelItemOrder, this);\r\n        //交易行下架订单（道具）消息推送\r\n        Session.on(Route.MarketItemOrderCancelledPush, this.onItemCanelOrderPush, this);\r\n        //查询挂单（自己的订单道具）\r\n        Session.on(Route[\"market.protocol.getmakeritemorders\"], this.onItemGetMyOrder, this)\r\n        //买卖订单（道具）\r\n        Session.on(Route[\"market.protocol.takeitemorder\"], this.onItemExchangesTradeRet, this);\r\n        //交易行买卖（道具）消息推送\r\n        Session.on(Route.MarketItemOrderTakePush, this.onItemExchangesTradePush, this);\r\n\r\n\r\n        //查询订单（卡牌）\r\n        Session.on(Route[\"market.protocol.searchcardorders\"], this.onCardViewRet, this);\r\n        //上架订单(求购卡牌)\r\n        Session.on(Route[\"market.protocol.makecardbuyorder\"], this.onCardBuyOrder, this);\r\n        //上架订单(出售卡牌)\r\n        Session.on(Route[\"market.protocol.makecardsellorder\"], this.onCardSellOrder, this);\r\n        //交易行上架订单（卡牌）消息推送\r\n        Session.on(Route.MarketCardOrderMakePush, this.onCardOrderPush, this);\r\n        //下架订单（卡牌）\r\n        Session.on(Route[\"market.protocol.cancelcardorder\"], this.onCancelCardOrder, this);\r\n        //交易行下架订单（卡牌）消息推送\r\n        Session.on(Route.MarketCardOrderCancelledPush, this.onCardCanelOrderPush, this);\r\n        //查询挂单（自己的订单卡牌）\r\n        Session.on(Route[\"market.protocol.getcardorders\"], this.onCardGetMyOrder, this)\r\n        //买卖订单（卡牌）\r\n        Session.on(Route[\"market.protocol.takecardorder\"], this.onCardExchangesTradeRet, this);\r\n        //交易行买卖订单（卡牌）消息推送\r\n        Session.on(Route.MarketCardOrderTakePush, this.onCardExchangesTradePush, this);\r\n\r\n    }\r\n    /*道具查询订单*/\r\n    private onItemViewRet(data: any) {\r\n        let trade_data = Ret[\"market.protocol.searchitemorders\"].decode(data);\r\n        console.log(\"筛选的交易列表\",trade_data)\r\n        if (trade_data.res.code == 200) {//请求数据成功\r\n            PlayerData.tradeViewData = [];\r\n            for (const iterator of trade_data.orders) {\r\n                if(iterator.status != OrderStateType.cancelled){\r\n                    PlayerData.tradeViewData.push(iterator)\r\n                }\r\n            }\r\n            PlayerData.total = trade_data.total;\r\n            if(trade_data.orders.length > 0){\r\n                if(trade_data.total){\r\n                    PlayerData.startId = [];\r\n                    PlayerData.startId.push(\"\")\r\n                }\r\n                if(PlayerData.startId.findIndex(id => id == trade_data.orders[trade_data.orders.length -1].id) == -1){\r\n                    PlayerData.startId.push(trade_data.orders[trade_data.orders.length -1].id);\r\n                }\r\n                console.log(\"start_id\",PlayerData.startId)\r\n            }\r\n            TradePanel.ins.onGetViewData();\r\n        } else {     \r\n            MsgPanel.Show(CfgMgr.GetErrorCfgByCode(trade_data.res.code))\r\n        }\r\n    }\r\n\r\n    /**道具上架订单 */\r\n    private onItemOrder(data) {\r\n        let trade_data = Ret[\"market.protocol.makeitemorder\"].decode(data);\r\n        console.log(trade_data)\r\n        if (trade_data.res.code == 200) {\r\n            MsgPanel.Show(\"上架成功\")\r\n            TradeCreateOrderPanel.Hide();\r\n        }else{  \r\n            MsgPanel.Show(CfgMgr.GetErrorCfgByCode(trade_data.res.code))\r\n        }\r\n    }\r\n\r\n    /**道具上架订单推送 */\r\n    private onItemOrderPush(data: any){\r\n        let trade_data = Ret.MarketItemOrderMakePush.decode(data);\r\n        console.log(\"道具上架推送\",trade_data)\r\n        if(trade_data.playerId == PlayerData.player.playerId){\r\n            PlayerData.tradeViewData.push(trade_data.order);\r\n            TradePanel.ins.updateMyOrderData();\r\n        }\r\n      \r\n    }\r\n\r\n    /**道具下架订单 */\r\n    private onCancelItemOrder(data) {\r\n        let trade_data = Ret[\"market.protocol.cancelitemorder\"].decode(data);\r\n        console.log(trade_data)\r\n        if (trade_data.res.code == 200) {\r\n            MsgPanel.Show(\"下架成功\")\r\n        }else{  \r\n            MsgPanel.Show(CfgMgr.GetErrorCfgByCode(trade_data.res.code))\r\n        }\r\n    }\r\n\r\n    /**道具下架订单推送 */\r\n    private onItemCanelOrderPush(data: any) {\r\n        let trade_data = Ret.MarketItemOrderCancelledPush.decode(data);\r\n        console.log(trade_data)\r\n        if(trade_data.playerId == PlayerData.player.playerId){\r\n            let index = PlayerData.tradeViewData.findIndex(item=>item.id == trade_data.order.id)\r\n            if(index != -1){\r\n                PlayerData.tradeViewData.splice(index, 1);\r\n                TradePanel.ins.updateMyOrderData();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**道具获取自己的订单列表 */\r\n    private onItemGetMyOrder(data) {\r\n        let trade_data = Ret[\"market.protocol.getmakeritemorders\"].decode(data);\r\n        console.log(\"获取自己的订单列表\",trade_data)\r\n        if (trade_data.res.code == 200) {\r\n            PlayerData.tradeViewData = [];\r\n            for (const iterator of trade_data.orders) {\r\n                if(iterator.status != OrderStateType.cancelled){     \r\n                    if(PlayerData.tradeViewData.findIndex(order_data =>order_data.id == iterator.id) == -1){\r\n                        PlayerData.tradeViewData.push(iterator)\r\n                    }\r\n                }\r\n            }\r\n            TradePanel.ins.updateMyOrderData();\r\n        }  else {     \r\n            MsgPanel.Show(CfgMgr.GetErrorCfgByCode(trade_data.res.code))\r\n        }\r\n    }\r\n\r\n    /**道具交易返回 */\r\n    private onItemExchangesTradeRet(data: any) {\r\n        let trade_data = Ret[\"market.protocol.takeitemorder\"].decode(data);\r\n        console.log(trade_data)\r\n        if(trade_data.res.code == 200){\r\n            BuyPanel.Hide();\r\n            MsgPanel.Show(\"交易成功\")\r\n        }else{\r\n            MsgPanel.Show(CfgMgr.GetErrorCfgByCode(trade_data.res.code))\r\n            BuyPanel.Hide();\r\n            if(trade_data.res.code == 1802){\r\n                TradePanel.ins.SendBuyOrSellType();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**道具交易推送 */\r\n    private onItemExchangesTradePush(data: any){\r\n        let trade_data = Ret.MarketItemOrderTakePush.decode(data);\r\n        console.log(\"交易推送\",trade_data)   \r\n        if(trade_data.playerId == PlayerData.player.playerId){ \r\n            let order = trade_data.order\r\n            for (const iterator of PlayerData.tradeViewData) {\r\n                if(iterator.id == order.id){\r\n                    iterator.createdAt = order.createdAt;\r\n                    iterator.currency = order.currency;\r\n                    iterator.expiresAt = order.expiresAt;\r\n                    iterator.groupNum = order.groupNum;\r\n                    iterator.id = order.id;\r\n                    iterator.itemId = order.itemId;\r\n                    iterator.itemType = order.itemType;\r\n                    iterator.makerId = order.makerId;\r\n                    iterator.orderId = order.orderId;\r\n                    iterator.orderType = order.orderType;\r\n                    iterator.price = order.price;\r\n                    iterator.quantity = order.quantity;\r\n                    iterator.quantityRemaining = order.quantityRemaining;\r\n                    iterator.status = order.status;\r\n                    iterator.totalPrice = order.totalPrice;\r\n                    iterator.updatedAt = order.updatedAt;\r\n                    break;\r\n                }\r\n            }\r\n            TradePanel.ins.onGetViewData();\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    /*卡牌查询订单*/\r\n    private onCardViewRet(data: any) {\r\n        let trade_data = Ret[\"market.protocol.searchcardorders\"].decode(data);\r\n        console.log(\"筛选的交易列表\",trade_data)\r\n        if (trade_data.res.code == 200) {//请求数据成功\r\n            PlayerData.tradeCardViewData = [];\r\n            for (const iterator of trade_data.orders) {\r\n                if(iterator.status != OrderStateType.cancelled){\r\n                    PlayerData.tradeCardViewData.push(iterator)\r\n                }\r\n            }\r\n            PlayerData.total = trade_data.total;\r\n            if(trade_data.orders.length > 0){\r\n                if(trade_data.total){\r\n                    PlayerData.startId = [];\r\n                    PlayerData.startId.push(\"\")\r\n                }\r\n                if(PlayerData.startId.findIndex(id => id == trade_data.orders[trade_data.orders.length -1].id) == -1){\r\n                    PlayerData.startId.push(trade_data.orders[trade_data.orders.length -1].id);\r\n                }\r\n                console.log(\"start_id\",PlayerData.startId)\r\n            }\r\n            TradePanel.ins.onGetViewData();\r\n        } else {     \r\n            MsgPanel.Show(CfgMgr.GetErrorCfgByCode(trade_data.res.code))\r\n        }\r\n    }\r\n\r\n    /**卡牌上架求购返回订单 */\r\n    private onCardBuyOrder(data) {\r\n        let trade_data = Ret[\"market.protocol.makecardbuyorder\"].decode(data);\r\n        console.log(trade_data)\r\n        if (trade_data.res.code == 200) {\r\n            MsgPanel.Show(\"上架成功\")\r\n            TradeCreateOrderPanel.Hide();\r\n        }else if(trade_data.res.code == 1808){\r\n            MsgPanel.Show(CfgMgr.GetErrorCfgByCode(1808000))\r\n        }else{  \r\n            MsgPanel.Show(CfgMgr.GetErrorCfgByCode(trade_data.res.code))\r\n        }\r\n    }\r\n\r\n    /**卡牌上架出售返会订单 */\r\n    private onCardSellOrder(data) {\r\n        let trade_data = Ret[\"market.protocol.makecardsellorder\"].decode(data);\r\n        console.log(trade_data)\r\n        if (trade_data.res.code == 200) {\r\n            MsgPanel.Show(\"上架成功\")\r\n            TradeCreateOrderPanel.Hide();\r\n        }else if(trade_data.res.code == 1808){\r\n            MsgPanel.Show(CfgMgr.GetErrorCfgByCode(1808000))\r\n        }else{  \r\n            MsgPanel.Show(CfgMgr.GetErrorCfgByCode(trade_data.res.code))\r\n        }\r\n    }\r\n\r\n    /**卡牌上架订单推送 */\r\n    private onCardOrderPush(data: any){\r\n        let trade_data = Ret.MarketCardOrderMakePush.decode(data);\r\n        console.log(\"卡牌上架推送\",trade_data)\r\n        if(trade_data.playerId == PlayerData.player.playerId){\r\n            PlayerData.tradeCardViewData.push(trade_data.order);\r\n            TradePanel.ins.updateMyOrderData();\r\n        }\r\n      \r\n    }\r\n\r\n    /**卡牌下架订单 */\r\n    private onCancelCardOrder(data) {\r\n        let trade_data = Ret[\"market.protocol.cancelcardorder\"].decode(data);\r\n        console.log(trade_data)\r\n        if (trade_data.res.code == 200) {\r\n            MsgPanel.Show(\"下架成功\")\r\n        }else{  \r\n            MsgPanel.Show(CfgMgr.GetErrorCfgByCode(trade_data.res.code))\r\n        }\r\n    }\r\n\r\n    /**卡牌下架订单推送 */\r\n    private onCardCanelOrderPush(data: any) {\r\n        let trade_data = Ret.MarketCardOrderCancelledPush.decode(data);\r\n        console.log(trade_data)\r\n        if(trade_data.playerId == PlayerData.player.playerId){\r\n            let index = PlayerData.tradeCardViewData.findIndex(item=>item.id == trade_data.order.id)\r\n            if(index != -1){\r\n                PlayerData.tradeCardViewData.splice(index, 1);\r\n                TradePanel.ins.updateMyOrderData();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**卡牌获取自己的订单列表 */\r\n    private onCardGetMyOrder(data) {\r\n        let trade_data = Ret[\"market.protocol.getcardorders\"].decode(data);\r\n        console.log(\"获取自己的订单列表\",trade_data)\r\n        if (trade_data.res.code == 200) {\r\n            PlayerData.tradeCardViewData = [];\r\n            for (const iterator of trade_data.orders) {\r\n                if(iterator.status != OrderStateType.cancelled){\r\n                    if(PlayerData.tradeCardViewData.findIndex(order_data =>order_data.id == iterator.id) == -1){\r\n                        PlayerData.tradeCardViewData.push(iterator)\r\n                    }\r\n                }\r\n            }\r\n            TradePanel.ins.updateMyOrderData();\r\n        }else{\r\n            MsgPanel.Show(CfgMgr.GetErrorCfgByCode(trade_data.res.code))\r\n        }\r\n    }\r\n\r\n    /**卡牌交易返回 */\r\n    private onCardExchangesTradeRet(data: any) {\r\n        let trade_data = Ret[\"market.protocol.takecardorder\"].decode(data);\r\n        console.log(trade_data)\r\n        if(trade_data.res.code == 200){\r\n            MsgPanel.Show(\"交易成功\")\r\n        }else{\r\n            MsgPanel.Show(CfgMgr.GetErrorCfgByCode(trade_data.res.code))\r\n        }\r\n        BuyPanel.Hide();\r\n    }\r\n\r\n    /**卡牌交易推送 */\r\n    private onCardExchangesTradePush(data: any){\r\n        let trade_data = Ret.MarketCardOrderTakePush.decode(data);\r\n        console.log(\"交易推送\",trade_data)\r\n        if(trade_data.playerId == PlayerData.player.playerId){\r\n            let order = trade_data.order\r\n            for (const iterator of PlayerData.tradeCardViewData) {\r\n                if(iterator.id == order.id){\r\n                    iterator.id = order.id;\r\n                    iterator.orderType = order.orderType;\r\n                    iterator.orderId = order.orderId;\r\n                    iterator.makerId = order.makerId;\r\n                    iterator.takerId = order.takerId;\r\n                    iterator.card = order.card;\r\n                    iterator.cardClass = order.cardClass;\r\n                    iterator.cardRarity =order.cardRarity\r\n                    iterator.goodsGroup =order.goodsGroup\r\n                    iterator.currency = order.currency;\r\n                    iterator.price = order.price;\r\n                    iterator.status = order.status;\r\n                    iterator.createdAt = order.createdAt;\r\n                    iterator.expiresAt = order.expiresAt;\r\n                    iterator.updatedAt = order.updatedAt;\r\n                    break;\r\n                }\r\n            }\r\n            TradePanel.ins.onGetViewData();\r\n        }\r\n    }\r\n}"]}