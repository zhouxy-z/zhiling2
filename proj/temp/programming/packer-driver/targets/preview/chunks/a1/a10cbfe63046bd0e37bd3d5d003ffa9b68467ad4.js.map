{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/fight/SkillUtils.ts"],"names":["SkillUtils","parse","params","obj","str","values","split","type","Number","CfgMgr","TargetTyppe","TryToFindTarget","isMy","attacker","target","data","stdSkill","GetCardSkill","skillId","card","cardData","ConditionParam1","ConditionType","targets","myArea","area","adArea"],"mappings":"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","sourcesContent":["import { Node } from 'cc';\r\nimport { CfgMgr } from '../../manager/CfgMgr';\r\nimport { SceneCard } from './display/SceneCard';\r\nimport { EffectTarget } from './display/TestSkill';\r\nimport proto from '../../net/Protocol';\r\n\r\n/**\r\n * 阵营枚举\r\n */\r\nenum TargetTyppe {\r\n    owner,\r\n    enemy,\r\n    all\r\n}\r\nfunction parse(params: any[]) {\r\n    let obj = {};\r\n    for (let str of params) {\r\n        let values = str.split(\":\");\r\n        let type = Number(values[0]);\r\n        obj[type] = Number(values[1]);\r\n    }\r\n    return obj;\r\n}\r\nexport class SkillUtils {\r\n    static TryToFindTarget(isMy: boolean, attacker: Node, target: EffectTarget, data: proto.base.IBattleRoomOpOutput_EffectSkill) {\r\n        let stdSkill = CfgMgr.GetCardSkill(data.skillId);\r\n        if (!stdSkill) return [];\r\n\r\n        let card = (attacker as SceneCard)?.cardData;\r\n        let obj = parse(stdSkill.ConditionParam1);\r\n        switch (stdSkill.ConditionType) {\r\n\r\n            case \"TerrainRevealed\": //区域翻开触发\r\n                return false;\r\n                /**\r\n                    参数1：0-表示任意区域揭开时触发；1-区域1，2-区域2，3-区域3，4-自身所在区域，\r\n                    参数2：填详细的触发次数/0\r\n                 */\r\n                // if (obj[1] == 4) {\r\n                //     return [mySet.areas[card?.area]];\r\n                // } else if (obj[1] > 0) {\r\n                //     return [mySet.areas[obj[1] - 1]];\r\n                // }\r\n                break;\r\n\r\n            case \"ZoneCardEntered\"://当有卡牌放入时\r\n                /**\r\n                    参数1：0我方，1敌方，2双方；\r\n                    参数2：0表示卡牌自身所在的区域/映射区域，1/2/3表示对应区域，-1表示任意区域；\r\n                    参数3：0=任意方式区域卡牌增加，1=被放置卡牌，2=非被放置卡牌’卡牌效果带来的复制/召唤等‘；\r\n                    参数4：1/2/3表示对应张数时，4表示满卡牌时；（累计达成条件数量）\r\n                    参数5：触发次数\r\n                */\r\n                if (obj[1] == 0) {\r\n                    // 我方区域\r\n                    if (obj[2] == 0) {\r\n                        //自身所在区域\r\n                        target.targets = [target.myArea[card?.area]];\r\n                        target.myArea = target.targets;\r\n                    } else if (obj[2] > 0) {\r\n                        //指定区域\r\n                        target.targets = [target.myArea[obj[2] - 1]];\r\n                        target.myArea = target.targets;\r\n                    }\r\n                } else if (obj[1] == 1) {\r\n                    //敌方\r\n                    if (obj[2] == 0) {\r\n                        //自身所在区域\r\n                        target.targets = [target.adArea[card?.area]];\r\n                        target.adArea = target.targets;\r\n                    } else if (obj[2] > 0) {\r\n                        //指定区域\r\n                        target.targets = [target.adArea[obj[2] - 1]];\r\n                        target.adArea = target.targets;\r\n                    }\r\n                } else if (obj[1] == 2) {\r\n                    //双方\r\n                    if (obj[2] == 0) {\r\n                        //自身所在区域\r\n                        target.targets = [target.myArea[card?.area], target.adArea[card?.area]];\r\n                    } else if (obj[2] > 0) {\r\n                        //指定区域\r\n                        target.targets = [target.myArea[obj[2] - 1], target.adArea[obj[2] - 1]];\r\n                    }\r\n                } else {\r\n                    return false;\r\n                }\r\n                return true;\r\n\r\n            case \"ZoneCardGoing\"://区域卡牌被揭开\r\n                return false;\r\n                /**\r\n                    参数1：是否为自身，0否，1是，2任意；\r\n                    参数2：0我方，1敌方，2双方；\r\n                    参数3：0表示卡牌自身在的区域/映射区域，1/2/3表示对应区域，-1表示任意区域；\r\n                    参数4：1|2|4=费点-1~N|职业0~N|种族0~N，参数4为空时则表示任意卡牌揭示时，‘费点-1，职业0，种族0则表示任意费点、职业、种族’；\r\n                    参数5：触发次数\r\n                 */\r\n                if (obj[1] == 1) {\r\n                    //自身卡牌\r\n                    return [attacker];\r\n                } else if (obj[1] == 0) {\r\n                    //区域\r\n                    if (obj[2] == 0) {\r\n                        //自己区域\r\n                        if (obj[3] == 0) {\r\n                            return [target.myArea[card?.area]];\r\n                        } else if (obj[3] > 0) {\r\n                            return [target.myArea[obj[3]]];\r\n                        }\r\n                    } else if (obj[2] == 1) {\r\n                        //敌方区域\r\n                        if (obj[3] == 0) {\r\n                            return [target.adArea[card?.area]];\r\n                        } else if (obj[3] > 0) {\r\n                            return [target.adArea[obj[3]]];\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case \"ZoneCardDestroyed\"://区域卡牌被删除\r\n                /**\r\n                    参数1：去除方式，0-任意，1-删除，2-丢弃；\r\n                    参数2：是否为自身，0-任意，1-否，2-是；\r\n                    参数3：敌我，0-双方，1-我方，2-敌方；\r\n                    参数4：区域，0-卡牌自身在的区域/映射区域，1/2/3-对应区域，-1-任意区域；\r\n                    参数5：卡牌类型，1|2|4=费点-1~N|职业0~N|种族0~N，当次字段为空时则表示任意卡牌揭示时，费点-1，职业0，种族0则表示任意费点、职业、种族；\r\n                    参数6：触发次数\"\r\n                 */\r\n                return false;\r\n\r\n        }\r\n        return false;\r\n    }\r\n}"]}