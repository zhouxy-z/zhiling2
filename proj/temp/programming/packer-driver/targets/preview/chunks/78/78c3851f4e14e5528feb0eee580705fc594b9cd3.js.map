{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/main/MainPanel.ts"],"names":["MainPanel","Button","Input","Label","Layout","UIOpacity","Vec3","easing","tween","Panel","PlayerData","Session","EventMgr","Evt_Add_Card_Group_update","Evt_Card_Check_By_Name","Evt_Card_Group_Update","Evt_Item_Change","Evt_Main_Panel_Card_Group_Update","Evt_SectionUpdate","Evt_Set_Battle_Card_Group_Update","Second","Utils","AutoScroller","CardGroupItem","MsgPanel","proto","Req","Route","MainUI3D","CfgMgr","LocalStorage","GameSet","CardGroupHead","DateUtils","AudioMgr","AudioDefine","Goto","prefab","creatRoomBtn","userButton","shopButton","battleButton","bottomBtn","leftTopNode","bottomNode","rightTopNode","currencyNode","cardNode","cardBtn","cardGroupScrollView","unsatisfied","cardGoup","unCardGroup","head","matchTime","interval","onLoad","find","node","on","EventType","CLICK","onButton","children","concat","TOUCH_END","active","SetHandle","updateCardGroupItem","bind","onCardGroupSelect","addComponent","btn","setCardGroupItem","updateCardGroupState","updateCurrency","Show","ShowUI","ShowTop","onShow","StopChannel","Channels","channel","Play","Send","checkShowSeasonTips","onSectionUpdate","onHide","Hide","off","flush","startTween","to","position","circOut","start","index","length","element","getChildByName","setScale","getComponent","opacity","scale","parent","updateLayout","name","cardNameList","UpdateDatas","CurFightCardGroup","size","CardGuroupComm","DeckFullSize","CurSeasonData","currentSeasonId","ServerTime","GetCurSeasonEndTime","base","BattleMode","BattleModeRank","Version","$hasLoad","initSub","card_group","SetData","avatarId","data","item","card_group_item","callback","jump","getChildByPath","getData","set","deckId","id","forEach","getSiblingIndex","lab","string","BigNumber","GetItemCount","key","player","playerId","showSeasonTipsDatas","GetObject","SetObject"],"mappings":"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","sourcesContent":["import { Button, CCClass, Event, EventTouch, Input, Label, Layout, Node, PageView, UIOpacity, UITransform, Vec3, _decorator, easing, instantiate, size, tween } from \"cc\";\r\nimport { Panel } from \"../../manager/GameRoot\";\r\nimport { PlayerData } from \"../player/PlayerData\";\r\nimport { Session } from \"../../net/Session\";\r\nimport { EventMgr, Evt_Add_Card_Group_update, Evt_Card_Check_By_Name, Evt_Card_Group_Update, Evt_Item_Change, Evt_Main_Panel_Card_Group_Update, Evt_Match_Complete, Evt_SectionUpdate, Evt_Set_Battle_Card_Group_Update, Evt_Start_Match } from \"../../manager/EventMgr\";\r\nimport { Second, Utils } from \"../../utils/Utils\";\r\nimport { AutoScroller } from \"../../component/AutoScroller\";\r\nimport { CardGroupItem } from \"../cards/CardGroupItem\";\r\nimport { MsgPanel } from \"../common/MsgPanel\";\r\nimport proto, { Req, Route } from \"../../net/Protocol\";\r\nimport { MainUI3D } from \"./MainUI3D\";\r\nimport { CfgMgr } from \"../../manager/CfgMgr\";\r\nimport LocalStorage from \"../../utils/LocalStorage\";\r\nimport { GameSet } from \"../../manager/GameSet\";\r\nimport { CardGroupHead } from \"../cards/CardGroupHead\";\r\nimport { DateUtils } from \"../../utils/DateUtils\";\r\nimport { AudioMgr } from \"../../manager/AudioMgr\";\r\nimport { AudioDefine } from \"../../define/AudioDefine\";\r\nimport { Goto } from \"../../DL\";\r\n\r\nexport class MainPanel extends Panel {\r\n    protected prefab: string = 'prefabs/main/MainPanel';\r\n\r\n    private creatRoomBtn: Button;\r\n    private userButton: Button;\r\n    private shopButton: Button;\r\n    private battleButton: Button;\r\n    private bottomBtn: Node[];\r\n    private leftTopNode: Node[];\r\n    private bottomNode: Node;\r\n    private rightTopNode: Node;\r\n    private currencyNode: Node;\r\n    private cardNode: Node\r\n    private cardBtn: Button;\r\n    private cardGroupScrollView: AutoScroller;\r\n    private unsatisfied: Node;\r\n    private cardGoup: Node;\r\n    private unCardGroup: Node\r\n\r\n    private head: CardGroupHead;\r\n\r\n    private matchTime = 0;\r\n    private interval: any;\r\n\r\n    protected onLoad(): void {\r\n        this.creatRoomBtn = this.find(\"creatRoomBtn\", Button);\r\n        this.creatRoomBtn.node.on(Button.EventType.CLICK, this.onButton, this);\r\n        this.userButton = this.find(\"userButton\", Button);\r\n        this.userButton.node.on(\"click\", this.onButton, this);\r\n        this.shopButton = this.find(\"shopButton\", Button);\r\n        this.shopButton.node.on(\"click\", this.onButton, this);\r\n        this.cardBtn = this.find(\"bottomNode/battleButton/cardBtn\", Button);\r\n        this.cardBtn.node.on(\"click\", this.onButton, this);\r\n        this.battleButton = this.find(\"bottomNode/battleButton\", Button);\r\n        this.battleButton.node.on(\"click\", this.onButton, this);\r\n        this.bottomNode = this.find(\"bottomNode\");\r\n        this.bottomBtn = this.find(\"bottomNode/bottomBtn\").children.concat();\r\n        this.rightTopNode = this.find(\"rightTopNode\");\r\n        this.currencyNode = this.find(\"rightTopNode/currencyNode\");\r\n        this.cardNode = this.find(\"cardNode\");\r\n        this.cardNode.on(Input.EventType.TOUCH_END, () => { this.cardNode.active = false }, this);\r\n        this.cardGroupScrollView = this.find(\"cardNode/bg/cardGroupScrollView\", AutoScroller);\r\n        this.cardGroupScrollView.SetHandle(this.updateCardGroupItem.bind(this));\r\n        this.cardGroupScrollView.node.on('select', this.onCardGroupSelect, this);\r\n        this.unCardGroup = this.find(\"bottomNode/battleButton/cardBtn/cardbgNode\");\r\n        this.cardGoup = this.find(\"bottomNode/battleButton/cardBtn/cardGroupItem\");\r\n        this.cardGoup.addComponent(CardGroupItem)\r\n        this.head = this.find(\"userButton/CardGroupHead\").addComponent(CardGroupHead)\r\n\r\n\r\n        for (const btn of this.bottomBtn) {\r\n            btn.on(\"click\", this.onButton, this);\r\n        }\r\n        this.leftTopNode = this.find(\"leftTopNode\").children.concat()\r\n        for (const btn of this.leftTopNode) {\r\n            btn.on(\"click\", this.onButton, this);\r\n        }\r\n        EventMgr.on(Evt_Set_Battle_Card_Group_Update, this.setCardGroupItem, this);\r\n        EventMgr.on(Evt_Card_Check_By_Name, this.updateCardGroupState, this);\r\n        EventMgr.on(Evt_Card_Group_Update, this.setCardGroupItem, this);\r\n        EventMgr.on(Evt_Add_Card_Group_update, this.setCardGroupItem, this);\r\n        EventMgr.on(Evt_Main_Panel_Card_Group_Update, this.setCardGroupItem, this);\r\n        EventMgr.on(Evt_Item_Change, this.updateCurrency, this)\r\n    }\r\n\r\n    static Show(...args: any[]): Promise<any> {\r\n        return this.ShowUI(...args);\r\n    }\r\n    static ShowTop(...args: any[]): Promise<any> {\r\n        return this.ShowUI(...args);\r\n    }\r\n\r\n    protected onShow(): void {\r\n        AudioMgr.StopChannel(AudioDefine.Channels[\"audio/bgm/*\"].channel);\r\n        AudioMgr.Play(\"audio/bgm/fighting4\", 0, 0.1);\r\n        Session.Send(Route[\"logic.protocol.getplayerdecks\"]);\r\n        MainUI3D.Show(this.node);\r\n        //TopUI.Show();\r\n        this.checkShowSeasonTips();\r\n        EventMgr.on(Evt_SectionUpdate, this.onSectionUpdate, this);\r\n    }\r\n    protected onHide(...args: any[]): void {\r\n        AudioMgr.StopChannel(AudioDefine.Channels[\"audio/bgm/*\"].channel);\r\n        //TopUI.Hide();\r\n        MainUI3D.Hide();\r\n        EventMgr.off(Evt_SectionUpdate, this.onSectionUpdate, this);\r\n    }\r\n\r\n    public flush(...args: any[]): void {\r\n\r\n        this.setCardGroupItem();\r\n        this.startTween();\r\n        this.updateCurrency();\r\n    }\r\n\r\n    private async startTween() {\r\n        tween(this.bottomNode).to(0.6, { position: new Vec3(0, -318) }, { easing: easing.circOut }).start();\r\n\r\n        for (let index = 0; index < this.currencyNode.children.length; index++) {\r\n            const element = this.currencyNode.children[index];\r\n            element.getChildByName(\"icon\").setScale(new Vec3(0, 0, 1))\r\n            element.getChildByName(\"Label\").getComponent(UIOpacity).opacity = 0;\r\n        }\r\n\r\n        this.userButton.node.getComponent(UIOpacity).opacity = 0;\r\n        for (let index = 0; index < this.leftTopNode.length; index++) {\r\n            const element = this.leftTopNode[index];\r\n            element.setScale(new Vec3(0, 0, 1))\r\n        }\r\n\r\n        for (let index = 0; index < this.currencyNode.children.length; index++) {\r\n            const element = this.currencyNode.children[index];\r\n            tween(element.getChildByName(\"icon\"))\r\n                .to(0.3, { scale: new Vec3(1, 1, 1) })\r\n                .start();\r\n\r\n            tween(element.getChildByName(\"Label\").getComponent(UIOpacity))\r\n                .to(0.3, { opacity: 255 })\r\n                .start();\r\n            await Second(0.15)\r\n        }\r\n        // this.currencyNode.getComponent(Layout).updateLayout();\r\n        //TopUI.addChild(this.rightTopNode);\r\n\r\n        tween(this.userButton.node.getComponent(UIOpacity))\r\n            .to(0.05, { opacity: 255 })\r\n            .start();\r\n\r\n        for (let index = 0; index < this.leftTopNode.length; index++) {\r\n            const element = this.leftTopNode[index];\r\n            tween(element)\r\n                .to(0.3, { scale: new Vec3(1, 1, 1) })\r\n                .start();\r\n            await Second(0.11)\r\n        }\r\n        this.leftTopNode[0].parent.getComponent(Layout).updateLayout();\r\n    }\r\n\r\n\r\n    private onButton(btn: Button) {\r\n        let name = btn.node.name;\r\n        switch (name) {\r\n            case \"bagButton\":\r\n                Goto(\"BagPanel\");\r\n                break;\r\n            case \"mailButton\":\r\n                Goto(\"MailPanel\");\r\n                break;\r\n            case \"friendButton\":\r\n                Goto(\"FriendPanel\");\r\n                break;\r\n            case \"creatRoomBtn\":\r\n                Goto(\"RoomPanel\");\r\n                break;\r\n            case \"userButton\":\r\n                // UserInfoPanel.Show();\r\n                break;\r\n            case \"shopButton\":\r\n                Goto(\"ShopPanel\");\r\n                break;\r\n            case \"cardBtn\":\r\n                this.cardNode.active = true;\r\n                if (PlayerData.cardNameList.length > 0) {\r\n                    this.cardGroupScrollView.UpdateDatas(PlayerData.cardNameList)\r\n                } else {\r\n                    Goto(\"CardsPanel\");\r\n                }\r\n                break;\r\n            case \"tradeButton\":\r\n                Goto(\"TradePanel\");\r\n                break;\r\n            case \"battleButton\":\r\n                if (!PlayerData.CurFightCardGroup) {\r\n                    MsgPanel.Show(\"未设置战斗卡组不可对战\")\r\n                    return;\r\n                }\r\n                if (PlayerData.CurFightCardGroup.size < CfgMgr.CardGuroupComm.DeckFullSize) {\r\n                    MsgPanel.Show(`卡组卡牌数量不足${CfgMgr.CardGuroupComm.DeckFullSize}张`);\r\n                    return;\r\n                }\r\n                if (!PlayerData.CurSeasonData || PlayerData.CurSeasonData.currentSeasonId == 0) {\r\n                    MsgPanel.Show(\"暂时没有赛季进行中\");\r\n                    return;\r\n                }\r\n                if (DateUtils.ServerTime > PlayerData.GetCurSeasonEndTime()) {\r\n                    MsgPanel.Show(\"暂时没有赛季已结束\");\r\n                    return;\r\n                }\r\n                Goto(\"VSPanel\", proto.base.BattleMode.BattleModeRank);\r\n                break;\r\n            case \"cardButton\":\r\n                Goto(\"CardsPanel\");\r\n                break;\r\n            case \"levelButton\":\r\n                Goto(\"CardCollectPanel\");\r\n                break;\r\n            case \"settingButton\":\r\n                MsgPanel.Show(GameSet.Version);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    private async setCardGroupItem() {\r\n        if (!this.$hasLoad) await this.initSub;\r\n        if (PlayerData.CurFightCardGroup) {\r\n            this.cardGoup.active = true;\r\n            this.unCardGroup.active = false;\r\n            let card_group = this.cardGoup.getComponent(CardGroupItem);\r\n            if (!card_group) this.cardGoup.addComponent(CardGroupItem);\r\n            card_group.SetData(PlayerData.CurFightCardGroup, true)\r\n            this.head.SetData(PlayerData.CurFightCardGroup.avatarId, false, false)\r\n        } else {\r\n            this.cardGoup.active = false;\r\n            this.unCardGroup.active = true;\r\n        }\r\n    }\r\n\r\n    private updateCardGroupState(data) {\r\n\r\n    }\r\n\r\n\r\n    /**打开设置卡组界面 */\r\n    protected updateCardGroupItem(item: Node, data: proto.base.IDeckAttrs) {\r\n        let card_group_item = item.getComponent(CardGroupItem);\r\n        if (!card_group_item) card_group_item = item.addComponent(CardGroupItem);\r\n        let callback = () => { Goto(\"CardsPanel\", data); this.cardNode.active = false }\r\n        let jump = item.getChildByPath(\"cardNode/jump\").getComponent(Button);\r\n        jump.node.off(Button.EventType.CLICK, callback, this);\r\n        jump.node.on(Button.EventType.CLICK, callback, this);\r\n        card_group_item.SetData(data);\r\n    }\r\n\r\n    /**选择卡组设置出战 */\r\n    protected onCardGroupSelect(index: number, item: Node) {\r\n        let data = item.getComponent(CardGroupItem).getData();\r\n        let set = new Req[\"logic.protocol.setdeckdefault\"]();\r\n        set.deckId = data.id;\r\n        Session.Send(Route[\"logic.protocol.setdeckdefault\"], set);\r\n\r\n        this.cardNode.active = false;\r\n\r\n    }\r\n\r\n\r\n    private updateCurrency() {\r\n        this.currencyNode.children.forEach((node) => {\r\n            let index = node.getSiblingIndex()\r\n            let lab = node.getChildByName(\"Label\").getComponent(Label);\r\n            lab.string = Utils.BigNumber(PlayerData.GetItemCount(index + 1))\r\n        })\r\n    }\r\n\r\n    private onSectionUpdate(): void {\r\n        this.checkShowSeasonTips();\r\n    }\r\n\r\n    /**检测是否显示赛季提示 */\r\n    private checkShowSeasonTips(): void {\r\n        if (!PlayerData.CurSeasonData || PlayerData.CurSeasonData.currentSeasonId == 0) {\r\n            return;\r\n        }\r\n        let key: string = `season_tips_is_show_${PlayerData.player.playerId}`;\r\n        let showSeasonTipsDatas: any = LocalStorage.GetObject(key);\r\n        if (!showSeasonTipsDatas) {\r\n            showSeasonTipsDatas = {};\r\n        }\r\n        if (showSeasonTipsDatas[PlayerData.CurSeasonData.currentSeasonId]) return;\r\n        showSeasonTipsDatas[PlayerData.CurSeasonData.currentSeasonId] = PlayerData.CurSeasonData.currentSeasonId;\r\n        LocalStorage.SetObject(key, showSeasonTipsDatas);\r\n        Goto(\"VSSeasonTipsPanel\");\r\n    }\r\n}"]}