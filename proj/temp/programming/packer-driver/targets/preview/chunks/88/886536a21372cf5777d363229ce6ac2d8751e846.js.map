{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/battle/BattleCompMgr.ts"],"names":["BattleCompMgr","js","GameScene","battleDataMgr","FightData","runCompList","compPool","Map","isRun","addComp","className","type","comps","get","comp","pop","ctor","getClassByName","set","length","console","error","push","removeComp","activateIndex","indexOf","splice","stopComp","index","exit","update","dt","runBattle","battleOpData","getFirstBattlePack","log","BattleRoomOpOutputType","self","exitCall","roomId","round","playerId","changeDataCell","bind","enter","packData","isntance","battleCompMgr"],"mappings":"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","sourcesContent":["import { js } from \"cc\";\r\nimport { GameScene } from \"../fight/GameScene\";\r\nimport { BattleOpData } from \"../player/PlayerStruct\";\r\nimport { BattleBaseComp } from \"./BattleBaseComp\";\r\nimport { battleDataMgr } from \"./BattleDataMgr\";\r\nimport { FightData } from \"../fight/FightData\";\r\n\r\nexport class BattleCompMgr {\r\n    //当前正在运行的脚本列表\r\n    private runCompList: BattleBaseComp<any>[] = [];\r\n    //脚本池子\r\n    private compPool: Map<number, BattleBaseComp<any>[]> = new Map();\r\n\r\n    /**\r\n     * 添加处理战斗包脚本\r\n     * @param className \r\n     * @returns \r\n     */\r\n    public addComp<T extends BattleBaseComp<T>>(className: any, type: number): T {\r\n        let comps: BattleBaseComp<T>[] = this.compPool.get(type) || [];\r\n        let comp: BattleBaseComp<T> = comps.pop();\r\n        if (!comp) {\r\n            let ctor: any = js.getClassByName(className);\r\n            comp = new ctor();\r\n            this.compPool.set(type, comps);\r\n        }\r\n        if (this.runCompList.length > 0) {\r\n            console.error(\"------>激活脚本错误\")\r\n        } else {\r\n            this.runCompList.push(comp);\r\n        }\r\n        return comp as T;\r\n    }\r\n\r\n    /**\r\n     * 移除战斗脚本\r\n     * @param comp \r\n     */\r\n    public removeComp(comp: BattleBaseComp<any>): void {\r\n        let activateIndex: number = this.runCompList.indexOf(comp);\r\n        if (activateIndex > -1) {\r\n            this.runCompList.splice(activateIndex, 1);\r\n        }\r\n        let comps: BattleBaseComp<any>[] = this.compPool.get(comp.type) || [];\r\n        comps.push(comp);\r\n        this.compPool.set(comp.type, comps);\r\n    }\r\n\r\n    /**\r\n     * 停止/终止正在跑的脚本\r\n     */\r\n    public stopComp(): void {\r\n        for (let index = 0; index < this.runCompList.length; index++) {\r\n            let comp = this.runCompList[index];\r\n            // if (checkCondCall(comp.type)) continue;\r\n            comp.exit();\r\n        }\r\n    }\r\n\r\n    private isRun = false;\r\n    public update(dt: number): void {\r\n        for (let comp of this.runCompList) {\r\n            comp.update(dt);\r\n        }\r\n        if (!this.isRun) this.runBattle();\r\n    }\r\n\r\n    /**\r\n     * 跑战斗数据包\r\n     */\r\n    private runBattle(): void {\r\n        let battleOpData: BattleOpData = battleDataMgr.getFirstBattlePack();\r\n        if (battleOpData) {\r\n            console.log(\"*****************************runBattle:\" + battleOpData.type);\r\n            FightData.BattleRoomOpOutputType = battleOpData.type;\r\n            this.isRun = true;\r\n            let self = this;\r\n            let comp: BattleBaseComp<any> = this.addComp(battleOpData.comp, battleOpData.type);\r\n            comp.exitCall = (roomId: string, round: number, playerId: string) => {\r\n                this.removeComp(comp);\r\n                self.isRun = false;\r\n            }\r\n            comp.changeDataCell = battleOpData?.changeDataCell?.bind(battleDataMgr);\r\n            comp.enter(battleOpData.packData, GameScene.isntance, battleOpData.type);\r\n        }\r\n    }\r\n}\r\nexport const battleCompMgr = new BattleCompMgr();"]}