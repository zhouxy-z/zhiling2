{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/shop/ShopLuckyItem.ts"],"names":["ShopLuckyItem","Button","Component","Label","path","Sprite","SpriteFrame","Layout","ResMgr","Session","MsgPanel","EventMgr","Evt_AdvisterUpdate","AutoScroller","ConsumeItem","ConsumeNumFormatType","CfgMgr","ThingTypeName","ItemUtil","PlayerData","AwardItem","Req","Route","bg","titleImg","numLab","yetNumLab","btnLayout","oneBtn","oneAdBtn","oneAdBtnLab","oneFreeNumLab","oneConsumeItem","tenBtn","helpBtn","tenFreeNumLab","tenConsumeItem","oneHundredBtn","oneHundredFreeNumLab","oneHundredConsumeItem","awardList","isInit","std","data","jumpAd","onLoad","node","getChildByName","getComponent","getChildByPath","addComponent","SetHandle","updateAwardItem","bind","on","onAwardItemSelect","numFormatType","ContrastHave","EventType","CLICK","onBtnClick","updateShow","onAdvisterUpdate","update","dt","updateAdCdTime","adId","shopStd","AdTime","activeInHierarchy","updateAddTime","freeX1Count","active","string","item","CreateThing","Item","ConsumeX1ItemId","ConsumeX1Cost","SetData","btn","Show","frequency","CheckThingConsumes","shop_luck_1","convertCount","count","shopIndexId","shopId","skipFree","Send","freeX10Count","needCount","shop_luck_10","shop_luck_100","interactable","ConsumeX100Type","paddingLeft","paddingRight","spacingX","updateLayout","GetShopLuckyData","url","join","LuckyBgRes","LoadResAbSub","res","spriteFrame","LuckyTitleRes","stdPool","GetShopLuckyPool","RewardPools","num","i","Target","length","index","itemType","RewardType","itemId","RewardId","itemNum","RewardNumber","push","GetNumber","UpdateDatas","toString","Math","max","getNumber","doCount","Frequency","awardItem","itemData"],"mappings":"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","sourcesContent":["import { Button, Component, Label, path, Sprite, SpriteFrame, Node, game, Layout } from \"cc\";\r\nimport { ResMgr } from \"../../manager/ResMgr\";\r\nimport { Session } from \"../../net/Session\";\r\nimport { MsgPanel } from \"../common/MsgPanel\";\r\nimport { ShopLuckyBuyPanel } from \"./ShopLuckyBuyPanel\";\r\nimport { EventMgr, Evt_AdvisterUpdate } from \"../../manager/EventMgr\";\r\nimport { AutoScroller } from \"../../component/AutoScroller\";\r\nimport { ConsumeItem, ConsumeNumFormatType } from \"../common/ConsumeItem\";\r\nimport { CfgMgr, StdLuckyShop, StdShopLuckyPool, ThingTypeName } from \"../../manager/CfgMgr\";\r\nimport { ItemUtil } from \"../../utils/ItemUtils\";\r\nimport { PlayerData } from \"../player/PlayerData\";\r\nimport { AwardItem } from \"../common/AwardItem\";\r\nimport proto, { Req, Route } from \"../../net/Protocol\";\r\n\r\n\r\nexport class ShopLuckyItem extends Component {\r\n    private bg: Sprite;\r\n    private titleImg: Sprite;\r\n    private numLab: Label;\r\n    private yetNumLab: Label;\r\n    private btnLayout: Layout;\r\n    private oneBtn: Button;\r\n    private oneAdBtn: Button;\r\n    private oneAdBtnLab: Label;\r\n    private oneFreeNumLab: Label;\r\n    private oneConsumeItem: ConsumeItem;\r\n    private tenBtn: Button;\r\n    private helpBtn: Button;\r\n    private tenFreeNumLab: Label;\r\n    private tenConsumeItem: ConsumeItem;\r\n    private oneHundredBtn: Button;\r\n    private oneHundredFreeNumLab: Label;\r\n    private oneHundredConsumeItem: ConsumeItem;\r\n    private awardList: AutoScroller;\r\n    private isInit: boolean = false;\r\n    private std: StdLuckyShop;\r\n    private data: proto.base.ILuckyContent;\r\n    private jumpAd: Node;\r\n    protected onLoad(): void {\r\n        this.bg = this.node.getChildByName(\"bg\").getComponent(Sprite);\r\n        this.titleImg = this.node.getChildByName(\"titleImg\").getComponent(Sprite);\r\n        this.numLab = this.node.getChildByName(\"numLab\").getComponent(Label);\r\n        this.yetNumLab = this.node.getChildByName(\"yetNumLab\").getComponent(Label);\r\n        this.btnLayout = this.node.getChildByName(\"btnCont\").getComponent(Layout);\r\n        this.oneBtn = this.node.getChildByPath(\"btnCont/oneBtn\").getComponent(Button);\r\n        this.oneFreeNumLab = this.node.getChildByPath(\"btnCont/oneBtn/oneFreeNumLab\").getComponent(Label);\r\n        this.oneConsumeItem = this.node.getChildByPath(\"btnCont/oneBtn/oneConsumeItem\").addComponent(ConsumeItem);\r\n        this.oneAdBtn = this.node.getChildByPath(\"btnCont/oneAdBtn\").getComponent(Button);\r\n        this.jumpAd = this.node.getChildByPath(\"btnCont/oneAdBtn/cont/icon/jumpAd\")\r\n        this.oneAdBtnLab = this.node.getChildByPath(\"btnCont/oneAdBtn/cont/oneAdBtnLab\").getComponent(Label);\r\n        this.tenBtn = this.node.getChildByPath(\"btnCont/tenBtn\").getComponent(Button);\r\n        this.tenFreeNumLab = this.node.getChildByPath(\"btnCont/tenBtn/tenFreeNumLab\").getComponent(Label);\r\n        this.tenConsumeItem = this.node.getChildByPath(\"btnCont/tenBtn/tenConsumeItem\").addComponent(ConsumeItem);\r\n        this.oneHundredBtn = this.node.getChildByPath(\"btnCont/oneHundredBtn\").getComponent(Button);\r\n        this.oneHundredFreeNumLab = this.node.getChildByPath(\"btnCont/oneHundredBtn/oneHundredFreeNumLab\").getComponent(Label);\r\n        this.oneHundredConsumeItem = this.node.getChildByPath(\"btnCont/oneHundredBtn/oneHundredConsumeItem\").addComponent(ConsumeItem);\r\n        this.awardList = this.node.getChildByName(\"awardList\").getComponent(AutoScroller);\r\n        if (!this.awardList) this.awardList = this.node.getChildByName(\"awardList\").addComponent(AutoScroller);\r\n        this.helpBtn = this.node.getChildByName(\"helpBtn\").getComponent(Button);\r\n        this.awardList.SetHandle(this.updateAwardItem.bind(this));\r\n        this.awardList.node.on('select', this.onAwardItemSelect, this);\r\n        this.oneConsumeItem.numFormatType = ConsumeNumFormatType.ContrastHave;\r\n        this.tenConsumeItem.numFormatType = ConsumeNumFormatType.ContrastHave;\r\n        this.oneHundredConsumeItem.numFormatType = ConsumeNumFormatType.ContrastHave;\r\n        this.isInit = true;\r\n        this.tenBtn.node.on(Button.EventType.CLICK, this.onBtnClick, this);\r\n        this.oneBtn.node.on(Button.EventType.CLICK, this.onBtnClick, this);\r\n        this.oneAdBtn.node.on(Button.EventType.CLICK, this.onBtnClick, this);\r\n        this.helpBtn.node.on(Button.EventType.CLICK, this.onBtnClick, this);\r\n        this.oneHundredBtn.node.on(Button.EventType.CLICK, this.onBtnClick, this);\r\n        this.updateShow();\r\n        EventMgr.on(Evt_AdvisterUpdate, this.onAdvisterUpdate, this);\r\n    }\r\n    protected update(dt: number): void {\r\n        this.updateAdCdTime();\r\n    }\r\n    private updateAdCdTime(): void {\r\n        let adId: number = this.std.shopStd.AdTime;\r\n        // if (adId > 0) {\r\n        //     let adData: SAdvister = PlayerData.GetAdvisterData(adId);\r\n        //     let stdAd: StdAdvister = CfgMgr.GetAdvister(adId);\r\n        //     let cd: number = adData.cdEndTime - game.totalTime;\r\n        //     if (cd > 0) {\r\n        //         this.oneAdBtnLab.string = DateUtils.FormatTime(cd / 1000, \"%{mm}:%{ss}\");\r\n        //     } else {\r\n        //         this.oneAdBtnLab.string = `免费(${adData.count}/${stdAd.Max_numb})`;\r\n        //     }\r\n        // }\r\n\r\n    }\r\n    private onAdvisterUpdate(): void {\r\n        if (!this.node.activeInHierarchy) return;\r\n        this.updateAddTime();\r\n    }\r\n    private updateAddTime(): void {\r\n        if (!this.std) return;\r\n        if (this.data && this.data.freeX1Count > 0) {\r\n            this.oneAdBtn.node.active = false;\r\n            this.oneBtn.node.active = true;\r\n            this.oneFreeNumLab.node.active = true;\r\n            this.oneFreeNumLab.string = `免费次数：${this.data.freeX1Count}`;\r\n            this.oneConsumeItem.node.active = false;\r\n        } else {\r\n            let adId: number = this.std.shopStd.AdTime;\r\n            if (adId > 0) {\r\n                // let adData: SAdvister = PlayerData.GetAdvisterData(adId);\r\n                // let stdAd: StdAdvister = CfgMgr.GetAdvister(adId);\r\n                // if (adData.count < 1) {\r\n                //     this.oneAdBtn.node.active = false;\r\n                //     this.oneBtn.node.active = true;\r\n                //     this.oneFreeNumLab.node.active = false;\r\n                //     this.oneConsumeItem.node.active = true;\r\n                //     let item = ItemUtil.CreateThing(this.std.shopStd.ConsumeX1Type[0], this.std.shopStd.ConsumeX1ItemId[0], this.std.shopStd.ConsumeX1Cost[0]);\r\n                //     this.oneConsumeItem.SetData(item);\r\n                // } else {\r\n                //     this.oneAdBtn.node.active = true;\r\n                //     this.jumpAd.active = PlayerData.GetIsActivateRights(StdEquityId.Id_9) || PlayerData.GetIsActivateRights(StdEquityId.Id_10);\r\n                //     this.oneBtn.node.active = false;\r\n                // }\r\n            } else {\r\n                this.oneFreeNumLab.node.active = false;\r\n                this.oneConsumeItem.node.active = true;\r\n                let item = ItemUtil.CreateThing(ThingTypeName.Item, this.std.shopStd.ConsumeX1ItemId[0], this.std.shopStd.ConsumeX1Cost[0]);\r\n                this.oneConsumeItem.SetData(item);\r\n            }\r\n        }\r\n\r\n    }\r\n    private onBtnClick(btn: Button): Promise<void> {\r\n        switch (btn) {\r\n            case this.oneBtn:\r\n                if (!this.data) {\r\n                    MsgPanel.Show(\"商城未开启\");\r\n                    return;\r\n                }\r\n                if (this.data.frequency < 0) {\r\n                    MsgPanel.Show(\"抽卡次数不足\");\r\n                    return;\r\n                }\r\n                if (this.data.freeX1Count < 1) {\r\n                    // if(this.std.shopStd.ConvertToConsumeType && this.std.shopStd.ConvertToConsumeType.length && this.std.shopStd.ConsumeX1Type[0] != this.std.shopStd.ConvertToConsumeType[0]){\r\n                    //     if (!ItemUtil.CheckThingConsumes(this.std.shopStd.ConsumeX1Type, this.std.shopStd.ConsumeX1ItemId, this.std.shopStd.ConsumeX1Cost, false)) {\r\n\r\n                    //         // let count: number = ItemUtil.GetHaveThingNum(this.std.shopStd.ConsumeX1Type[0], this.std.shopStd.ConsumeX1ItemId[0]);\r\n                    //         ShopLuckyBuyPanel.Show(this.std, 1, 1);\r\n                    //         return;\r\n                    //     }  \r\n                    // }else{\r\n                    if (!ItemUtil.CheckThingConsumes(null, this.std.shopStd.ConsumeX1ItemId, this.std.shopStd.ConsumeX1Cost, true)) {\r\n                        return;\r\n                    }\r\n                    // }\r\n\r\n                }\r\n                let shop_luck_1 = new Req[\"shop.protocol.dolucky\"]();\r\n                shop_luck_1.convertCount = 0;\r\n                shop_luck_1.count = 1;\r\n                shop_luck_1.shopIndexId = this.std.shopId;\r\n                shop_luck_1.skipFree = false;\r\n                Session.Send(Route[\"shop.protocol.dolucky\"], shop_luck_1);\r\n                break;\r\n            case this.tenBtn:\r\n                if (!this.data) {\r\n                    MsgPanel.Show(\"商城未开启\");\r\n                    return;\r\n                }\r\n                if (this.data.frequency < 0) {\r\n                    MsgPanel.Show(\"抽卡次数不足\");\r\n                    return;\r\n                }\r\n                if (this.data.freeX10Count < 1) {\r\n                    let needCount: number = this.std.shopStd.ConsumeX1Cost[0] * 10;\r\n                    // if(this.std.shopStd.ConvertToConsumeType && this.std.shopStd.ConvertToConsumeType.length && this.std.shopStd.ConsumeX1Type[0] != this.std.shopStd.ConvertToConsumeType[0]){\r\n                    //     if (!ItemUtil.CheckThingConsumes(this.std.shopStd.ConsumeX1Type, this.std.shopStd.ConsumeX1ItemId, [needCount], false)) {\r\n                    //         // let haveNum: number = ItemUtil.GetHaveThingNum(this.std.shopStd.ConsumeX1Type[0], this.std.shopStd.ConsumeX1ItemId[0]);\r\n                    //         // ShopLuckyBuyPanel.Show(this.std, 10, needCount - haveNum);\r\n                    //         return;\r\n                    //     }\r\n                    // }else{\r\n                    if (!ItemUtil.CheckThingConsumes(null, this.std.shopStd.ConsumeX1ItemId, [needCount], true)) {\r\n                        return;\r\n                    }\r\n                    // }\r\n\r\n                }\r\n                let shop_luck_10 = new Req[\"shop.protocol.dolucky\"]();\r\n                shop_luck_10.convertCount = 0;\r\n                shop_luck_10.count = 10;\r\n                shop_luck_10.shopIndexId = this.std.shopId;\r\n                shop_luck_10.skipFree = false;\r\n                Session.Send(Route[\"shop.protocol.dolucky\"], shop_luck_10);\r\n                break;\r\n            case this.oneHundredBtn:\r\n                if (!this.data) {\r\n                    MsgPanel.Show(\"商城未开启\");\r\n                    return;\r\n                }\r\n                if (this.data.frequency < 0) {\r\n                    MsgPanel.Show(\"抽卡次数不足\");\r\n                    return;\r\n                }\r\n                let needCount: number = this.std.shopStd.ConsumeX1Cost[0] * 100;\r\n                // if(this.std.shopStd.ConvertToConsumeType && this.std.shopStd.ConvertToConsumeType.length && this.std.shopStd.ConsumeX1Type[0] != this.std.shopStd.ConvertToConsumeType[0]){\r\n                //     if (!ItemUtil.CheckThingConsumes(this.std.shopStd.ConsumeX1Type, this.std.shopStd.ConsumeX1ItemId, [needCount], false)) {\r\n                //         // let haveNum: number = ItemUtil.GetHaveThingNum(this.std.shopStd.ConsumeX1Type[0], this.std.shopStd.ConsumeX1ItemId[0]);\r\n                //         // ShopLuckyBuyPanel.Show(this.std, 10, needCount - haveNum);\r\n                //         // return;\r\n                //     }\r\n                // }else{\r\n                if (!ItemUtil.CheckThingConsumes(null, this.std.shopStd.ConsumeX1ItemId, [needCount], true)) {\r\n                    return;\r\n                }\r\n                // }\r\n                let shop_luck_100 = new Req[\"shop.protocol.dolucky\"]();\r\n                shop_luck_100.convertCount = 0;\r\n                shop_luck_100.count = 100;\r\n                shop_luck_100.shopIndexId = this.std.shopId;\r\n                shop_luck_100.skipFree = false;\r\n                Session.Send(Route[\"shop.protocol.dolucky\"], shop_luck_100);\r\n                break;\r\n            case this.helpBtn:\r\n                // let stdPool: StdShopLuckyPool = CfgMgr.GetShopLuckyPool(this.std.shopStd.RewardPools);\r\n                // if (stdPool) {\r\n                //     Tips2.Show(stdPool.Instructions);\r\n                // }\r\n\r\n                break;\r\n            case this.oneAdBtn:\r\n                // let adId: number = this.std.shopStd.AdTime;\r\n                // let adData: SAdvister = PlayerData.GetAdvisterData(adId);\r\n                // if (!adData || adData.count < 1) {\r\n                //     MsgPanel.Show(\"广告已看完\");\r\n                //     return;\r\n                // }\r\n                // if (game.totalTime < adData.cdEndTime) {\r\n                //     MsgPanel.Show(\"冷却中，请稍后！\");\r\n                //     return;\r\n                // }\r\n                this.oneAdBtn.interactable = false;\r\n                // SetNodeGray(this.oneAdBtn.node, true, true);\r\n                // if(PlayerData.GetIsActivateRights(StdEquityId.Id_9) || PlayerData.GetIsActivateRights(StdEquityId.Id_10)){\r\n                //     AdHelper.JumpAd(adId, \"\")\r\n                // }else{\r\n                //     console.log(\"AdHelper---> rewardAdId3:\", GameSet.globalCfg.ad_channel.rewardAdId3);\r\n                //     let action, errorCode, errorMsg;\r\n                //     if (Math.abs(GameSet.globalCfg.ad_channel.rewardAdId3) == 1) {\r\n                //         [action, errorCode, errorMsg] = await AdHelper.rewardAd(getAdcfg().rewardAdId3, adId, \"\");\r\n                //     } else {\r\n                //         [action, errorCode, errorMsg] = await AdHelper.rewardQbAd(getQbAdCfg().rewardAdId3, adId, \"\");\r\n                //     }\r\n                //     if (action == \"onLoadFailed\") {\r\n                //         if (Math.abs(GameSet.globalCfg.ad_channel.rewardAdId3) == 1) {\r\n                //             if (GameSet.globalCfg.ad_channel.rewardAdId3 > 0) GameSet.globalCfg.ad_channel.rewardAdId3 = 2;\r\n                //             Tips.Show(\"广告加载失败，请稍后再试！\");\r\n                //         } else {\r\n                //             if (GameSet.globalCfg.ad_channel.rewardAdId3 > 0) GameSet.globalCfg.ad_channel.rewardAdId3 = 1;\r\n                //             Tips.Show(\"广告展示失败，请稍后再试！\");\r\n                //         }\r\n                //     } else {\r\n                //         // SetNodeGray(this.oneAdBtn.node, false, true);\r\n                //     }\r\n                //     PlayerData.SetAdvisterCd(adId);\r\n                //     this.oneAdBtn.interactable = true;\r\n                // }\r\n                break;\r\n        }\r\n    }\r\n    SetData(std: StdLuckyShop) {\r\n        this.std = std;\r\n        this.updateShow();\r\n\r\n    }\r\n\r\n    private updateShow() {\r\n        if (!this.isInit || !this.std) return;\r\n        if (this.std.shopStd.ConsumeX100Type > 0) {\r\n            this.btnLayout.paddingLeft = 46;\r\n            this.btnLayout.paddingRight = 46;\r\n            this.btnLayout.spacingX = 20;\r\n            this.oneHundredBtn.node.active = true;\r\n            let item = ItemUtil.CreateThing(ThingTypeName.Item, this.std.shopStd.ConsumeX1ItemId[0], this.std.shopStd.ConsumeX1Cost[0] * 100);\r\n            this.oneHundredConsumeItem.SetData(item);\r\n        } else {\r\n            this.btnLayout.paddingLeft = 97;\r\n            this.btnLayout.paddingRight = 97;\r\n            this.btnLayout.spacingX = 60;\r\n            this.oneHundredBtn.node.active = false;\r\n\r\n        }\r\n        this.btnLayout.updateLayout();\r\n        this.data = PlayerData.GetShopLuckyData(this.std.shopId);\r\n\r\n        let url = path.join(\"sheets/shop\", this.std.shopStd.LuckyBgRes, \"spriteFrame\");\r\n        ResMgr.LoadResAbSub(url, SpriteFrame, res => {\r\n            this.bg.spriteFrame = res;\r\n        });\r\n\r\n        url = path.join(\"sheets/shop\", this.std.shopStd.LuckyTitleRes, \"spriteFrame\");\r\n        ResMgr.LoadResAbSub(url, SpriteFrame, res => {\r\n            this.titleImg.spriteFrame = res;\r\n        });\r\n        let stdPool: StdShopLuckyPool = CfgMgr.GetShopLuckyPool(this.std.shopStd.RewardPools);\r\n        let awardList: proto.base.IThing[] = [];\r\n        let num: number = 100;\r\n        if (stdPool) {\r\n            for (let i = 0; i < stdPool.Target.length; i++) {\r\n                let index: number = stdPool.Target[i];\r\n                let itemType = stdPool.RewardType[index];\r\n                let itemId = stdPool.RewardId[index];\r\n                let itemNum = stdPool.RewardNumber[index];\r\n                awardList.push(ItemUtil.CreateThing(itemType, itemId, itemNum));\r\n            }\r\n            num = stdPool.GetNumber;\r\n        }\r\n        this.awardList.UpdateDatas(awardList);\r\n        this.numLab.string = num.toString();\r\n        this.yetNumLab.string = `${Math.max(num - (this.data ? this.data.getNumber : 0))}次`;\r\n        this.numLab.string = `${Math.max(num - (this.data ? this.data.getNumber : 0))}`;\r\n        this.yetNumLab.string = `${Math.max(this.data ? this.data.doCount : 0)}/${this.std.shopStd.Frequency}`;\r\n        this.updateAddTime();\r\n        if (this.data && this.data.freeX10Count > 0) {\r\n            this.tenFreeNumLab.node.active = true;\r\n            this.tenFreeNumLab.string = `免费次数：${this.data.freeX10Count}`;\r\n            this.tenConsumeItem.node.active = false;\r\n        } else {\r\n            this.tenFreeNumLab.node.active = false;\r\n            this.tenConsumeItem.node.active = true;\r\n            let item = ItemUtil.CreateThing(ThingTypeName.Item, this.std.shopStd.ConsumeX1ItemId[0], this.std.shopStd.ConsumeX1Cost[0] * 10);\r\n            this.tenConsumeItem.SetData(item);\r\n        }\r\n\r\n    }\r\n    protected updateAwardItem(item: Node, data: proto.base.IThing) {\r\n        let awardItem = item.getComponent(AwardItem);\r\n        if (!awardItem) awardItem = item.addComponent(AwardItem);\r\n        awardItem.SetData({ itemData: data }, true);\r\n    }\r\n    protected onAwardItemSelect(index: number, item: Node) {\r\n        // console.log(\"onSelect\", index);\r\n        // let data: SThing = item.getComponent(AwardItem).itemData as SThing;\r\n        // ItemTips.Show(data);\r\n    }\r\n}"]}