{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/battle/BattleSettlementPanel.ts"],"names":["BattleSettlementPanel","Button","sp","Panel","Protocol","PlayerData","Session","MainPanel","GameScene","battleDataMgr","ResMgr","MainUI3D","prefab","okBtn","effect","roomId","data","playerAId","onLoad","find","Skeleton","node","on","EventType","CLICK","onBtnClick","onShow","flush","playEffect","onHide","btn","leavePlayerId","length","battleroomleave","server","Send","console","log","Hide","Show","clearBattleData","active","effectName","winnerPlayerId","LoadResAbSub","SkeletonData","res","skeletonData","setAnimation","setCompleteListener","animation"],"mappings":"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","sourcesContent":["import { Node, Button, Label, sp } from \"cc\";\r\nimport { Panel } from \"../../manager/GameRoot\";\r\nimport base from \"../../net/proto/BaseUtils\";\r\nimport { Protocol } from \"../../net/Protocol\";\r\nimport { PlayerData } from \"../player/PlayerData\";\r\nimport { Session } from \"../../net/Session\";\r\nimport { MainPanel } from \"../main/MainPanel\";\r\nimport { GameScene } from \"../fight/GameScene\";\r\nimport { battleDataMgr } from \"./BattleDataMgr\";\r\nimport { ResMgr } from \"../../manager/ResMgr\";\r\nimport { MainUI3D } from \"../main/MainUI3D\";\r\n\r\nexport class BattleSettlementPanel extends Panel{\r\n    protected prefab: string = \"prefabs/battle/BattleSettlementPanel\";\r\n    private okBtn: Button;\r\n    private effect: sp.Skeleton;\r\n    private roomId:string;\r\n    private data: base.BattleRoomOpOutput_Settlement;\r\n    private playerAId: string;\r\n    protected onLoad(): void {\r\n        this.effect = this.find(\"effect\", sp.Skeleton);\r\n        this.okBtn = this.find(\"okBtn\", Button);\r\n        this.okBtn.node.on(Button.EventType.CLICK, this.onBtnClick, this);\r\n    }\r\n    protected onShow(): void {\r\n        \r\n    }\r\n    public flush(roomId:string, playerAId:string, data: base.BattleRoomOpOutput_Settlement): void {\r\n       this.roomId = roomId;\r\n       this.playerAId = playerAId;\r\n       this.data = data;\r\n       this.playEffect();\r\n    }\r\n\r\n    protected onHide(...args: any[]): void {\r\n        \r\n    }\r\n\r\n    private onBtnClick(btn: Button): void {\r\n        switch (btn) {\r\n            case this.okBtn:\r\n                if (!this.data.leavePlayerId || this.data.leavePlayerId.length < 1) {\r\n                    let data = new Protocol.battleroomleave();\r\n                    data.server = PlayerData.server;\r\n                    data.roomId = this.roomId;\r\n                    Session.Send(data);\r\n                    console.log(\"无玩家主动退出房间 发送离开房间---->\")\r\n                }\r\n                this.Hide();\r\n                MainPanel.Show();\r\n                battleDataMgr.clearBattleData();\r\n                GameScene.Hide();\r\n                MainUI3D.Show();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    \r\n    protected playEffect(): void {\r\n        this.okBtn.node.active = false;\r\n        let effectName: string;\r\n        if (this.playerAId == this.data.winnerPlayerId) {\r\n            effectName = \"ui_result_win\";\r\n        } else {\r\n             if (this.playerAId == this.data.leavePlayerId) {\r\n                effectName = \"ui_result_run\";\r\n             } else {\r\n                effectName = \"ui_result_lost\";\r\n             }\r\n        }\r\n        ResMgr.LoadResAbSub(`spine/${effectName}/${effectName}`, sp.SkeletonData, (res: sp.SkeletonData) => {\r\n            this.effect.skeletonData = res;\r\n            this.effect.setAnimation(0, \"show\", false);\r\n            this.effect.setCompleteListener(()=>{\r\n                if (this.effect.animation == \"show\") {\r\n                    this.effect.setAnimation(0, \"loop\", true);\r\n                    this.okBtn.node.active = true;\r\n                }\r\n            });\r\n        });\r\n        \r\n    }\r\n}"]}