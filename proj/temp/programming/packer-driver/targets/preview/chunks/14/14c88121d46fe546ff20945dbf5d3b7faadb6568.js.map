{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/cards/SelectHeroPanel.ts"],"names":["SelectHeroPanel","Input","Label","Sprite","SpriteFrame","Toggle","UIOpacity","Panel","PlayerData","Tips","AutoScroller","Card","CardType","Second","ResMgr","CfgMgr","MsgTypeSend","Session","EventMgr","Evt_UpdateFriendAssistRole","TradeHeroPanel","prefab","navBar","tile","scroller","noneListCont","friends_scroller","my_lbl","friend_lbl","type","limit","callback","isShowFriend","datas","friend_datas","page","page_size","tab","all_select","is_show_role_info","selects","selectsMer","is_jidi","onLoad","CloseBy","find","SetHandle","updateItem","bind","node","on","onSelect","onFrienSelect","EventType","TOUCH_END","onOk","children","forEach","index","setNav","updateRoleData","SelectXiLian","roles","callBack","Show","XiLian","SelectJinHua","JinHua","SelectMerge","Merge","SelectDefense","defend","SelectWork","is_ji_di","Work","SelectHelp","flush","cardType","active","string","onSend","role","data","select","indexOf","isend","push","length","mainRole","element","stds","Get","std","curStd","MainRoleid","quality","RoleQuailty","curRoles","getFanyuOrtherRole","Friend","Trade","sort","a","b","level","UpdateDatas","ScrollToHead","onShow","onHide","getComponent","opacity","Hide","item","card","addComponent","SetData","checkPage","state","getChildByName","stateSprite","spriteFrame","LoadResAbSub","ls","obj","isChecked","friend_ls","f_obj","f_role","undefined","num","i","console","log","cur_limit","Selected","getFanyuMainRole","updateSelectCount","chidlren","child","GetDownlinesRequest","sort_type","filter_type","SearchPlayerID","include_role","Send","assistRoles","iterator","_data","id","role_id","experience","soldier_num","active_skills","passive_skills","is_in_building","building_id","battle_power","skills","is_assisting","is_in_attack_lineup","is_in_defense_lineup","trade_cd"],"mappings":"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","sourcesContent":["import { Input, Label, Node, Sprite, SpriteFrame, Toggle, UIOpacity } from \"cc\";\r\nimport { Panel } from \"../../GameRoot\";\r\nimport PlayerData, {} from \"../roleModule/PlayerData\"\r\n import {SAssistRoleInfo,SDownlineInfo,SGetDownlines,SPlayerDataRole,SRoleAssistData} from \"../roleModule/PlayerStruct\";\r\nimport { Tips } from \"../login/Tips\";\r\nimport { AutoScroller } from \"../../utils/AutoScroller\";\r\nimport { Card, CardType } from \"../home/panel/Card\";\r\nimport { Second } from \"../../utils/Utils\";\r\nimport { ResMgr } from \"../../manager/ResMgr\";\r\nimport { CfgMgr } from \"../../manager/CfgMgr\";\r\nimport { MsgTypeSend } from \"../../MsgType\";\r\nimport { Session } from \"../../net/Session\";\r\nimport { EventMgr, Evt_UpdateFriendAssistRole } from \"../../manager/EventMgr\";\r\nimport { TradeHeroPanel } from \"../trade/TradeHeroPanel\";\r\n\r\nexport class SelectHeroPanel extends Panel {\r\n    protected prefab: string = \"prefabs/panel/SelectHeroPanel\";\r\n\r\n    private navBar: Node;\r\n    protected tile: Label;\r\n    protected scroller: AutoScroller;\r\n    private noneListCont:Node;\r\n    protected friends_scroller: AutoScroller;\r\n    protected my_lbl: Label;\r\n    protected friend_lbl: Label;\r\n    protected type: number = 0;\r\n    protected limit = 0;\r\n    protected callback: Function;\r\n\r\n    protected isShowFriend: boolean;\r\n    protected datas: { role: SPlayerDataRole, select: boolean, isend: boolean }[];\r\n    protected friend_datas: { role: SPlayerDataRole, select: boolean, isend: boolean }[];\r\n    private page: number = 1;\r\n    private page_size: number = 12;\r\n    private tab: number;\r\n    private all_select: number = 0;\r\n    private is_show_role_info: boolean;\r\n    private selects = [];\r\n    private selectsMer = [];\r\n    private is_jidi: boolean;\r\n\r\n    protected onLoad() {\r\n        this.CloseBy(\"mask\");\r\n        this.navBar = this.find(\"frame/navBar\");\r\n        this.tile = this.find(\"tileBar/buildName\", Label);\r\n        this.my_lbl = this.find(\"frame/navBar/btn1/my_lbl\", Label);\r\n        this.friend_lbl = this.find(\"frame/navBar/btn2/friend_lbl\", Label);\r\n        this.noneListCont = this.find(\"noneListCont\");\r\n        this.scroller = this.find(\"ScrollView\", AutoScroller);\r\n        this.scroller.SetHandle(this.updateItem.bind(this));\r\n        this.scroller.node.on('select', this.onSelect, this);\r\n\r\n        this.friends_scroller = this.find(\"friendScrollView\", AutoScroller);\r\n        this.friends_scroller.SetHandle(this.updateItem.bind(this));\r\n        this.friends_scroller.node.on('select', this.onFrienSelect, this);\r\n        this.find(\"okBtn\").on(Input.EventType.TOUCH_END, this.onOk, this);\r\n        this.navBar.children.forEach((node, index) => {\r\n            node.on(Input.EventType.TOUCH_END, () => {\r\n                this.setNav(index)\r\n            })\r\n        })\r\n        this.CloseBy(\"closeBtn\");\r\n        EventMgr.on(Evt_UpdateFriendAssistRole, this.updateRoleData, this);\r\n    }\r\n\r\n    static SelectXiLian(roles: SPlayerDataRole[], selects: SPlayerDataRole[], limit: number, callBack: Function) {\r\n        this.Show(roles, selects, limit, callBack, CardType.XiLian);\r\n    }\r\n    static SelectJinHua(roles: SPlayerDataRole[], selects: SPlayerDataRole[], limit: number, callBack: Function) {\r\n        this.Show(roles, selects, limit, callBack, CardType.JinHua);\r\n    }\r\n    static SelectMerge(roles: SPlayerDataRole[], selects: SPlayerDataRole[], limit: number, callBack: Function) {\r\n        this.Show(roles, selects, limit, callBack, CardType.Merge);\r\n    }\r\n    static SelectDefense(roles: SPlayerDataRole[], selects: SPlayerDataRole[], limit: number, callBack: Function) {\r\n        this.Show(roles, selects, limit, callBack, CardType.defend);\r\n    }\r\n    static SelectWork(roles: SPlayerDataRole[], selects: SPlayerDataRole[], limit: number, callBack: Function, is_ji_di:boolean = false) {\r\n        this.Show(roles, selects, limit, callBack, CardType.Work, false, is_ji_di);\r\n    }\r\n    static SelectHelp(roles: SPlayerDataRole[], selects: SPlayerDataRole[], limit: number, callBack: Function) {\r\n        this.Show(roles, selects, limit, callBack);\r\n    }\r\n\r\n    flush(roles: SPlayerDataRole[], selects: SPlayerDataRole[], limit: number, callBack: Function, cardType: number, isShowFriend?: boolean, is_ji_di?:boolean) {\r\n        this.limit = limit;\r\n        this.callback = callBack;\r\n        this.datas = [];\r\n        this.friend_datas = [];\r\n        this.selectsMer = selects\r\n        this.all_select = 0;\r\n        this.page = 1;\r\n        this.type = cardType;\r\n        this.isShowFriend = isShowFriend;\r\n        this.is_jidi = is_ji_di\r\n        this.navBar.active = isShowFriend;\r\n        this.is_show_role_info = false;\r\n        this.my_lbl.string = \"我的(0/\" + this.limit + \")\"\r\n        this.friend_lbl.string = \"好友(0/\" + this.limit + \")\"\r\n        this.selects = selects;\r\n        if (isShowFriend) {\r\n            this.setNav(0)\r\n            this.onSend();\r\n        }\r\n        for (let role of roles) {\r\n            let data = {\r\n                role: role,\r\n                select: selects.indexOf(role) != -1,\r\n                isend: false\r\n            }\r\n            this.datas.push(data);\r\n        }\r\n        if (cardType == CardType.Merge) {\r\n            this.tile.string = `选择繁育英雄`\r\n            if (selects[0] && selects.length >= 1) {\r\n                let mainRole = null\r\n                this.datas.forEach(element => {\r\n                    if (element.select) mainRole = element.role;\r\n                });\r\n                let stds = CfgMgr.Get(\"role_quality\");\r\n                let std = null\r\n                stds.forEach((curStd) => {\r\n                    if (curStd.MainRoleid == mainRole.type && mainRole.quality + 1 === curStd.RoleQuailty) {\r\n                        std = curStd;\r\n                    }\r\n                })\r\n                let curRoles = PlayerData.getFanyuOrtherRole(mainRole, std);\r\n                this.datas = [];\r\n                for (let role of curRoles) {\r\n                    let data = {\r\n                        role: role,\r\n                        select: selects.indexOf(role) != -1,\r\n                        isend: false\r\n                    }\r\n                    this.datas.push(data);\r\n                }\r\n                // this.datas.sort((a, b) => { return (b.select as any) - (a.select as any) });\r\n            }\r\n        }else if (cardType == CardType.XiLian) {\r\n            this.tile.string = `选择洗练英雄`\r\n        }else if (cardType == CardType.JinHua) {\r\n            this.tile.string = `选择英雄`\r\n        } else if (cardType == CardType.Work) {\r\n            this.tile.string = `选择英雄`\r\n        } else if (cardType == CardType.Friend) {\r\n            this.tile.string = `助战协作`\r\n        } else if (cardType == CardType.Trade) {\r\n            this.tile.string = `选择回收`\r\n            this.is_show_role_info = true;\r\n        } else {\r\n            this.datas.sort((a, b) => { return b.role.quality * 1000 + b.role.level - a.role.quality * 1000 + a.role.level; });\r\n            this.tile.string = `选择出战角色`\r\n        }\r\n        this.scroller.UpdateDatas(this.datas);\r\n        this.noneListCont.active = this.datas && this.datas.length <= 0;\r\n        this.scroller.ScrollToHead();\r\n    }\r\n\r\n    protected onShow(): void {\r\n\r\n\r\n    }\r\n    protected onHide(...args: any[]): void {\r\n        this.scroller.node.getComponent(UIOpacity).opacity = 255;\r\n        this.friends_scroller.node.getComponent(UIOpacity).opacity = 255;\r\n        // if(this.is_show_role_info){\r\n        TradeHeroPanel.Hide();\r\n        // }\r\n    }\r\n\r\n\r\n    protected async updateItem(item: Node, data: { role: SPlayerDataRole, select: boolean, isend: boolean }, index) {\r\n        let card = item.getComponent(Card);\r\n        if (!card) card = item.addComponent(Card);\r\n        if(this.is_jidi){\r\n            card.SetData(data, this.type, this.tab ? (this.tab == 1) : false, null, null, true);\r\n        }else{\r\n            card.SetData(data, this.type, this.tab ? (this.tab == 1) : false);\r\n        }\r\n        if (this.isShowFriend) {\r\n            this.checkPage(data);\r\n        }\r\n        if (this.type == CardType.Merge) {\r\n            let state = item.getChildByName(\"state\");\r\n            let stateSprite = state.getComponent(Sprite);\r\n            state.active = data.select;\r\n            if (data.select) {\r\n                if (this.selects.indexOf(data.role) == 0) stateSprite.spriteFrame = await ResMgr.LoadResAbSub(\"sheets/fanyu/主/spriteFrame\", SpriteFrame);\r\n                else if (this.selects.indexOf(data.role) == 1) stateSprite.spriteFrame = await ResMgr.LoadResAbSub(\"sheets/fanyu/副/spriteFrame\", SpriteFrame);\r\n            }\r\n        }\r\n    }\r\n\r\n    private setNav(index) {\r\n        this.tab = index;\r\n        this.noneListCont.active = false;\r\n        if (index == 0) {\r\n            this.scroller.UpdateDatas(this.datas);\r\n            this.noneListCont.active = this.datas && this.datas.length > 0;\r\n        } else {\r\n            this.friends_scroller.UpdateDatas(this.friend_datas);\r\n            this.noneListCont.active = this.friend_datas && this.friend_datas.length > 0;\r\n        }\r\n        this.scroller.node.active = (index == 0)\r\n        this.friends_scroller.node.active = (index == 1);\r\n    }\r\n\r\n    protected onOk() {\r\n        if (!this.scroller.node.active) {\r\n            this.scroller.node.getComponent(UIOpacity).opacity = 0;\r\n            this.scroller.node.active = true;\r\n        }\r\n        if (this.isShowFriend && !this.friends_scroller.node.active) {\r\n            this.friends_scroller.node.getComponent(UIOpacity).opacity = 0;\r\n            this.friends_scroller.node.active = true;\r\n        }\r\n        let ls = this.scroller.children;\r\n        let selects = [];\r\n        for (let obj of ls) {\r\n            if (obj.getComponent(Toggle).isChecked) {\r\n                let role = this.datas[obj['$$index']].role;\r\n                selects.push(role);\r\n            }\r\n        }\r\n        if (this.type == CardType.Merge) {\r\n            selects = this.selectsMer\r\n        }\r\n\r\n        if (this.isShowFriend) {\r\n            let friend_ls = this.friends_scroller.children;\r\n            for (let f_obj of friend_ls) {\r\n                if (f_obj.getComponent(Toggle).isChecked) {\r\n                    let f_role = this.friend_datas[f_obj['$$index']].role;\r\n                    selects.push(f_role);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.Hide();\r\n        let callback = this.callback;\r\n        this.callback = undefined;\r\n        callback?.(selects);\r\n    }\r\n\r\n    protected async onSelect(index: number, item: Node) {\r\n        if (!this.limit) return;\r\n        await Second(0);\r\n        // let chidlren = this.scroller.children;\r\n        let num = 0;\r\n        // console.log(index);\r\n        this.datas.forEach((data, i) => {\r\n            if (index == i) {\r\n                if(data.select){\r\n                    data.select = false; \r\n                }else{\r\n                    data.select = true \r\n                }\r\n            }\r\n\r\n            if (data.select){\r\n                num++;\r\n            }\r\n        })\r\n        // for (let child of chidlren) {\r\n        //     if (child.getComponent(Toggle).isChecked) {\r\n        //         num++;\r\n        //     }\r\n        // }\r\n        console.log(num);\r\n        if (this.type == CardType.Merge) {\r\n            let cur_limit = this.limit - this.all_select;\r\n            if (num > cur_limit) {\r\n                this.datas[index].select = false;\r\n                item.getComponent(Toggle).isChecked = false;\r\n                Tips.Show(\"只能选择\" + this.limit + \"个\");\r\n            } else {\r\n                let state = item.getChildByName(\"state\");\r\n                let Selected = item.getChildByName(\"ui_breed_Selected\");\r\n                this.scroller.children.forEach((node, i) => {\r\n                    node.getChildByName(`ui_breed_Selected`).active = node.getComponent(Toggle).isChecked;\r\n                    node.getChildByName(`state`).active = node.getComponent(Toggle).isChecked;\r\n                })\r\n                this.datas[index].select = item.getComponent(Toggle).isChecked;\r\n                Selected.active = item.getComponent(Toggle).isChecked;\r\n                //标签 切换可选项\r\n                let stateSprite = state.getComponent(Sprite);\r\n                state.active = item.getComponent(Toggle).isChecked;\r\n                if (num == 1) {\r\n                    let mainRole = null\r\n                    this.datas.forEach(element => {\r\n                        if (element.select) mainRole = element.role;\r\n                    });\r\n                    stateSprite.spriteFrame = await ResMgr.LoadResAbSub(\"sheets/fanyu/主/spriteFrame\", SpriteFrame);\r\n\r\n                    let stds = CfgMgr.Get(\"role_quality\");\r\n                    let std = null\r\n                    stds.forEach((curStd) => {\r\n                        if (mainRole && curStd.MainRoleid == mainRole.type && mainRole.quality + 1 === curStd.RoleQuailty) {\r\n                            std = curStd;\r\n                        }\r\n                    })\r\n                    let curRoles = PlayerData.getFanyuOrtherRole(mainRole, std);\r\n                    SelectHeroPanel.SelectMerge(curRoles, [mainRole], 2, this.callback);\r\n                    this.selectsMer[0] = mainRole;\r\n                    this.selectsMer[1] = null;\r\n                } else if (num == 2) {\r\n                    stateSprite.spriteFrame = await ResMgr.LoadResAbSub(\"sheets/fanyu/副/spriteFrame\", SpriteFrame);\r\n                    if (this.selectsMer[0]) {\r\n                        this.selectsMer[1] = this.datas[index].role;\r\n                    }\r\n                } else {\r\n                    let curRoles = PlayerData.getFanyuMainRole();\r\n                    SelectHeroPanel.SelectMerge(curRoles, [], 2, this.callback);\r\n                    this.selectsMer = []\r\n                }\r\n            }\r\n        } else {\r\n            let cur_limit = this.limit - this.all_select;\r\n            if (num > cur_limit) {\r\n                if (num == 2) {\r\n                    this.datas.forEach((data, i) => {\r\n                        if (i != index)\r\n                            data.select = false;\r\n                    })\r\n                    this.scroller.children.forEach((node, i) => {\r\n                        if (node != item)\r\n                            node.getComponent(Toggle).isChecked = false;\r\n                    })\r\n                    this.datas[index].select = item.getComponent(Toggle).isChecked;\r\n                } else {\r\n                    this.datas[index].select = false;\r\n                    item.getComponent(Toggle).isChecked = false;\r\n                    Tips.Show(\"只能选择\" + this.limit + \"个\");\r\n                }\r\n\r\n            } else {\r\n                this.datas[index].select = item.getComponent(Toggle).isChecked;\r\n                if (item.getComponent(Toggle).isChecked) {\r\n                    this.all_select++;\r\n                    if (this.all_select > this.limit) {\r\n                        this.all_select = this.limit;\r\n                    }\r\n                } else {\r\n                    this.all_select--;\r\n                    if (this.all_select < 0) {\r\n                        this.all_select = 0;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.is_show_role_info) {\r\n            if (item.getComponent(Toggle).isChecked) {\r\n                TradeHeroPanel.Show(this.datas[index].role);\r\n            } else {\r\n                TradeHeroPanel.Hide();\r\n            }\r\n        }\r\n        this.updateSelectCount();\r\n    }\r\n\r\n    protected async onFrienSelect(index: number, item: Node) {\r\n        if (!this.limit) return;\r\n        await Second(0);\r\n        let chidlren = this.friends_scroller.children;\r\n        let num = 0;\r\n        for (let child of chidlren) {\r\n            if (child.getComponent(Toggle).isChecked) {\r\n                num++;\r\n            }\r\n        }\r\n        if (this.type == CardType.Merge) {\r\n            this.friend_datas.forEach((data, i) => {\r\n                if (i != index)\r\n                    data.select = false;\r\n            })\r\n            this.friends_scroller.children.forEach((node, i) => {\r\n                if (node != item)\r\n                    node.getComponent(Toggle).isChecked = false;\r\n            })\r\n            this.friend_datas[index].select = item.getComponent(Toggle).isChecked;\r\n        } else {\r\n            let cur_limit = this.limit - this.all_select;\r\n            if (num > cur_limit) {\r\n                this.friend_datas[index].select = false;\r\n                item.getComponent(Toggle).isChecked = false;\r\n                Tips.Show(\"只能选择\" + this.limit + \"个\");\r\n            } else {\r\n                this.friend_datas[index].select = item.getComponent(Toggle).isChecked;\r\n                if (item.getComponent(Toggle).isChecked) {\r\n                    this.all_select++;\r\n                    if (this.all_select > this.limit) {\r\n                        this.all_select = this.limit;\r\n                    }\r\n                } else {\r\n                    this.all_select--;\r\n                    if (this.all_select < 0) {\r\n                        this.all_select = 0;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.updateSelectCount();\r\n    }\r\n\r\n    private updateSelectCount() {\r\n        this.my_lbl.string = \"我的(\" + this.all_select + \"/\" + this.limit + \")\"\r\n        this.friend_lbl.string = \"好友(\" + this.all_select + \"/\" + this.limit + \")\"\r\n    }\r\n\r\n    private checkPage(data: { role: SPlayerDataRole, select: boolean, isend: boolean }) {\r\n        if (!(data.isend) && this.friend_datas[this.friend_datas.length - 1] == data) {\r\n            data.isend = true;\r\n            this.page++;\r\n            this.onSend();\r\n        }\r\n    }\r\n\r\n    private onSend() {\r\n        let data = {\r\n            type: MsgTypeSend.GetDownlinesRequest,\r\n            data: { page: this.page, page_size: this.page_size, sort_type: 1, filter_type: 0, SearchPlayerID: \"\", include_role: true }\r\n        }\r\n        Session.Send(data);\r\n    }\r\n\r\n    private updateRoleData(data: { assistRoles: SAssistRoleInfo[] }) {\r\n        let datas: SAssistRoleInfo[] = data.assistRoles;\r\n        for (const iterator of datas) {\r\n            if (iterator) {\r\n                let _data = {\r\n                    role: {\r\n                        id: iterator.role_id,\r\n                        type: iterator.type,\r\n                        level: iterator.level,\r\n                        experience: 0,\r\n                        soldier_num: 0,\r\n                        active_skills: [],\r\n                        passive_skills: [],\r\n                        is_in_building: false,\r\n                        building_id: 0,\r\n                        battle_power: iterator.battle_power,\r\n                        quality: iterator.quality,\r\n                        skills: [],\r\n                        is_assisting: true,\r\n                        is_in_attack_lineup: false,\r\n                        is_in_defense_lineup: false,\r\n                        trade_cd: 0,\r\n                    },\r\n                    select: false,\r\n                    isend: false,\r\n                }\r\n                this.friend_datas.push(_data)\r\n            }\r\n        }\r\n        \r\n        this.friends_scroller.UpdateDatas(this.friend_datas);\r\n    }\r\n}\r\n"]}