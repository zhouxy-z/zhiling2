{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/debug/VirtualListExample.ts"],"names":["_decorator","Button","Component","EditBox","Label","Node","Size","PullStateType","VList","ccclass","property","VirtualListExample","type","curList","curCount","start","index","btnList","length","btn","node","on","EventType","CLICK","onBtnClick","setCountBtn","onClick","rollBtn","selectBtn","callBackBtn","panel","active","vList","listNode","getChildByPath","getComponent","updateCell","cell","cellInfo","getChildByName","string","isSelect","selectCell","lastCell","lastInfo","vListPage","vGrid","vPullHead","vPullHeadNode","updatePullHeader","pullInfo","label","state","GO_ON","LET_GO","LOCK","CANCEL","isAction","scheduleOnce","cellCount","vPullFooter","vPullFooterNode","updatePullFooter","nestVHList","subList","multList","getCellName","min","Math","ceil","max","floor","num","random","getCellSize","cellSize","update","deltaTime","name","showIndex","children","element","curPanel","setPanel","Number","countEditBox","scrollToIndex","rollEditBox","selectIndex","selectEditBox"],"mappings":"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","sourcesContent":["import { _decorator, Button, Component, EditBox, Label, Node, Size } from 'cc';\r\nimport { CellInfo, PullMoreInfo, PullStateType, VList } from '../component/VList';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('VirtualListExample')\r\nexport class VirtualListExample extends Component {\r\n    @property({ type: [Button]})\r\n    btnList:Button[] = [];\r\n    @property({ type: Button})\r\n    setCountBtn:Button;\r\n    @property({ type: EditBox})\r\n    countEditBox:EditBox;\r\n    @property({ type: Button})\r\n    rollBtn:Button;\r\n    @property({ type: EditBox})\r\n    rollEditBox:EditBox;\r\n    @property({ type: Button})\r\n    selectBtn:Button;\r\n    @property({ type: EditBox})\r\n    selectEditBox:EditBox;\r\n\r\n    @property({ type: Button})\r\n    callBackBtn:Button;\r\n\r\n    @property({ type: Node})\r\n    panel:Node;\r\n\r\n    @property({ type: Node})\r\n    listNode:Node;\r\n\r\n    private curList:VList;\r\n    private curCount:number;\r\n\r\n    start() {\r\n        for (let index = 0; index < this.btnList.length; index++) {\r\n            const btn = this.btnList[index];\r\n            btn.node.on(Button.EventType.CLICK, this.onBtnClick, this)\r\n        }\r\n        this.setCountBtn.node.on(Button.EventType.CLICK, this.onClick, this);\r\n        this.rollBtn.node.on(Button.EventType.CLICK, this.onClick, this);\r\n        this.selectBtn.node.on(Button.EventType.CLICK, this.onClick, this);\r\n        this.callBackBtn.node.on(Button.EventType.CLICK, this.onBtnClick, this);\r\n        this.panel.active = false;\r\n\r\n        let vList:VList = this.listNode.getChildByPath(\"vList\").getComponent(VList);\r\n        vList.updateCell = (cell: Node, cellInfo: CellInfo)=>{\r\n            cell.getChildByName(\"indexLab\").getComponent(Label).string = cellInfo.index + \"\";\r\n            cell.getChildByName(\"select\").active = cellInfo.isSelect;\r\n        }\r\n        vList.selectCell = (cell: Node, cellInfo: CellInfo, lastCell?: Node, lastInfo?: CellInfo)=>{\r\n            if(cell) cell.getChildByName(\"select\").active = cellInfo.isSelect;\r\n            if(lastCell && lastInfo)lastCell.getChildByName(\"select\").active = lastInfo.isSelect;\r\n        }\r\n\r\n        let vListPage:VList = this.listNode.getChildByPath(\"vListPage\").getComponent(VList);\r\n        vListPage.updateCell = (cell: Node, cellInfo: CellInfo)=>{\r\n            cell.getChildByName(\"indexLab\").getComponent(Label).string = cellInfo.index + \"\";\r\n        }\r\n        \r\n\r\n        let vGrid:VList = this.listNode.getChildByPath(\"vGrid\").getComponent(VList);\r\n        vGrid.updateCell = (cell: Node, cellInfo: CellInfo)=>{\r\n            cell.getChildByName(\"indexLab\").getComponent(Label).string = cellInfo.index + \"\";\r\n            cell.getChildByName(\"select\").active = cellInfo.isSelect;\r\n        }\r\n        vGrid.selectCell = (cell: Node, cellInfo: CellInfo, lastCell?: Node, lastInfo?: CellInfo)=>{\r\n            if(cell)cell.getChildByName(\"select\").active = cellInfo.isSelect;\r\n            if(lastCell && lastInfo)lastCell.getChildByName(\"select\").active = lastInfo.isSelect;\r\n        }\r\n\r\n\r\n        let vPullHead:VList = this.listNode.getChildByPath(\"vPullHead\").getComponent(VList);\r\n        let vPullHeadNode:Node = this.listNode.getChildByPath(\"vPullHead\").getChildByPath(\"view/head\");\r\n        vPullHeadNode.active = false;\r\n        vPullHead.updateCell = (cell: Node, cellInfo: CellInfo)=>{\r\n            cell.getChildByName(\"indexLab\").getComponent(Label).string = cellInfo.index + \"\";\r\n            cell.getChildByName(\"select\").active = cellInfo.isSelect;\r\n        }\r\n        vPullHead.selectCell = (cell: Node, cellInfo: CellInfo, lastCell?: Node, lastInfo?: CellInfo)=>{\r\n            if(cell) cell.getChildByName(\"select\").active = cellInfo.isSelect;\r\n            if(lastCell && lastInfo)lastCell.getChildByName(\"select\").active = lastInfo.isSelect;\r\n        }\r\n\r\n        vPullHead.updatePullHeader = (pullInfo: PullMoreInfo)=>{\r\n            vPullHeadNode.active = true;\r\n            let label = vPullHeadNode.getChildByName(\"lab\").getComponent(Label);\r\n            if (pullInfo.state == PullStateType.GO_ON) {\r\n                label.string = \"↓ 继续下拉\"\r\n            } else if (pullInfo.state == PullStateType.LET_GO) {\r\n                label.string = \"↑ 松开刷新\"\r\n            } else if (pullInfo.state == PullStateType.LOCK) {\r\n                label.string = \"刷新中...\"\r\n            } else if (pullInfo.state == PullStateType.CANCEL) {\r\n                label.string = \"\"\r\n                vPullHeadNode.active = false;\r\n            }\r\n            if(pullInfo.isAction){\r\n                this.scheduleOnce(() => {\r\n                    vPullHead.cellCount = 10;\r\n                    vPullHeadNode.active = false;\r\n                }, 1);\r\n            }\r\n        }\r\n\r\n        let vPullFooter:VList = this.listNode.getChildByPath(\"vPullFooter\").getComponent(VList);\r\n        let vPullFooterNode:Node = this.listNode.getChildByPath(\"vPullFooter\").getChildByPath(\"view/footer\");\r\n        vPullFooterNode.active = false;\r\n        vPullFooter.updateCell = (cell: Node, cellInfo: CellInfo)=>{\r\n            cell.getChildByName(\"indexLab\").getComponent(Label).string = cellInfo.index + \"\";\r\n            cell.getChildByName(\"select\").active = cellInfo.isSelect;\r\n        }\r\n        vPullFooter.selectCell = (cell: Node, cellInfo: CellInfo, lastCell?: Node, lastInfo?: CellInfo)=>{\r\n            if(cell) cell.getChildByName(\"select\").active = cellInfo.isSelect;\r\n            if(lastCell && lastInfo)lastCell.getChildByName(\"select\").active = lastInfo.isSelect;\r\n        }\r\n\r\n        vPullFooter.updatePullFooter = (pullInfo: PullMoreInfo)=>{\r\n            vPullFooterNode.active = true;\r\n            let label = vPullFooterNode.getChildByName(\"lab\").getComponent(Label);\r\n            if (pullInfo.state == PullStateType.GO_ON) {\r\n                label.string = \"↑ 继续上拉\"\r\n            } else if (pullInfo.state == PullStateType.LET_GO) {\r\n                label.string = \"↓ 松开加载更多\"\r\n            } else if (pullInfo.state == PullStateType.LOCK) {\r\n                label.string = \"数据加载中...\"\r\n            } else if (pullInfo.state == PullStateType.CANCEL) {\r\n                label.string = \"\"\r\n                vPullFooterNode.active = false;\r\n            }\r\n            if(pullInfo.isAction){\r\n                this.scheduleOnce(() => {\r\n                    this.curCount++;\r\n                    vPullFooter.cellCount = this.curCount;\r\n                    vPullFooterNode.active = false;\r\n                }, 1);\r\n            }\r\n        }\r\n\r\n        let nestVHList:VList = this.listNode.getChildByPath(\"nestVHList\").getComponent(VList);\r\n        nestVHList.updateCell = (cell: Node, cellInfo: CellInfo)=>{\r\n            cell.getChildByName(\"indexLab\").getComponent(Label).string = cellInfo.index + \"\";\r\n            cell.getChildByName(\"select\").active = cellInfo.isSelect;\r\n            let subList:VList = cell.getChildByName(\"subList\").getComponent(VList);\r\n            subList.updateCell = (cell: Node, cellInfo: CellInfo)=>{\r\n                cell.getChildByName(\"indexLab\").getComponent(Label).string = cellInfo.index + \"\";\r\n            }\r\n            subList.cellCount = 100;\r\n        }\r\n        \r\n\r\n        let multList:VList = this.listNode.getChildByPath(\"multList\").getComponent(VList);\r\n        multList.updateCell = (cell: Node, cellInfo: CellInfo)=>{\r\n            cell.getChildByName(\"indexLab\").getComponent(Label).string = cellInfo.index + \"\";\r\n            cell.getChildByName(\"select\").active = cellInfo.isSelect;\r\n        }\r\n\r\n        multList.getCellName = (index: number) => {\r\n            let min = Math.ceil(1);\r\n            let max = Math.floor(3);\r\n            let num:number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n            return \"multItem\" + num;\r\n        }\r\n\r\n        multList.getCellSize = (cell:Node, index:number) => {\r\n            let min = Math.ceil(60);\r\n            let max = Math.floor(200);\r\n            let num:number = Math.floor(Math.random() * (max - min + 1)) + min;\r\n            let cellSize: Size = new Size(640, 160 + num);\r\n            return cellSize;\r\n        }\r\n        \r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n\r\n    private onBtnClick(btn:Button):void{\r\n        if(btn.node.name == \"callBackBtn\"){\r\n            this.panel.active = false;\r\n            return;\r\n        }\r\n        this.curCount = 0;\r\n        this.panel.active = true;\r\n        let name:string = btn.node.name;\r\n        let showIndex:number = -1;\r\n        for (let index = 0; index < this.listNode.children.length; index++) {\r\n            const element = this.listNode.children[index];\r\n            if (showIndex < 0 && element.name == name) {\r\n                showIndex = index;\r\n            }\r\n            element.active = false;\r\n        }\r\n        let curPanel:Node = this.listNode.children[showIndex];\r\n        curPanel.active = true;\r\n        this.setPanel(curPanel);\r\n    }\r\n\r\n    private onClick(btn:Button):void{\r\n        switch(btn){\r\n            case this.setCountBtn:\r\n                this.curCount = Number(this.countEditBox.string);\r\n                this.curList.cellCount = this.curCount;\r\n                break;\r\n            case this.rollBtn:\r\n                this.curList.scrollToIndex(Number(this.rollEditBox.string));\r\n                break;\r\n            case this.selectBtn:\r\n                this.curList.selectIndex(Number(this.selectEditBox.string));\r\n                break;\r\n        }\r\n    }\r\n\r\n    private setPanel(panel:Node):void{\r\n        this.curList = panel.getComponent(VList);\r\n        this.curCount = 0;\r\n        this.curList.cellCount = 0;\r\n    }\r\n}\r\n\r\n\r\n"]}