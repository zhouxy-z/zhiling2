{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/resources/bag/BagItem.ts"],"names":["BagItem","Component","Input","Label","Sprite","SpriteFrame","Toggle","Vec3","path","PlayerData","CardQuality","CfgMgr","ItemType","StdCommonType","ThingItemId","ThingType","ResMgr","folder_head_card","folder_icon","folder_item","ToFixed","formatNumber","ItemTips","TradeHeroPanel","GameSet","bg","maskBg","icon","mask","num","quality","newIcon","itemName","select","redPoint","data","showSelect","isShowTips","showRedPoint","isShowRoleLock","time_lock","complete","hasLoad","$loadSub","UpdateBagItem","item","bagItem","getComponent","addComponent","SetData","onLoad","node","getChildByName","active","on","EventType","TOUCH_END","onClick","loadSub","thisObj","Promise","resolve","reject","undefined","setItem","setThing","std","Getitem","id","isNew","enabled","name","Items","spriteFrame","LoadResAbSub","join","Icon","Itemtpye","shard","ItemEffect2","Quality","ItemId_1","ItemId_2","ItemId_3","string","count","isHaveRedPoint","Type","ThingTypeItem","ItemEffect3","box","ItemName","thing","scale","type","ThingTypeCurrency","GetMoneyName","currency1std","currency","value","ThingTypeGold","currency2std","ThingTypeEquipment","ThingTypeRole","GetRole","role","Name","role_lock","getChildByPath","time","trade_cd","GetServerTime","lbl_time","show_time","countDown2","d","h","m","s","clearInterval","seconds","setInterval","ThingTypeResource","resource","rock","ItemId_7","seed","ItemId_9","water","ItemId_8","wood","ItemId_6","ThingTypeGemstone","currency3std","ThingTypeGem","currency77std","ItemId_202","keepPre","GetCommon","Gem","KeepPre","ThingTypeMedal","currency74std","ItemId_74","setIsShowNum","isshow","setIsShowSelect","setIsShowTips","setIsShowRedPoint","val","setIsRoleLockShow","e","Show"],"mappings":"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","sourcesContent":["import { Component, EventTouch, Input, Label, Node, Sprite, SpriteFrame, Toggle, Vec3, input, path } from \"cc\";\r\nimport PlayerData, { } from \"../roleModule/PlayerData\"\r\nimport { SPlayerDataItem, SThing } from \"../roleModule/PlayerStruct\";\r\nimport { CardQuality, CfgMgr, ItemType, ResourceName, ResourceType, StdCommonType, StdItem, ThingItemId, ThingType } from \"../../manager/CfgMgr\";\r\nimport { ResMgr, folder_head_card, folder_icon, folder_item } from \"../../manager/ResMgr\";\r\nimport { ToFixed, formatK, formatNumber } from \"../../utils/Utils\";\r\nimport { SaveGameData } from \"../../net/MsgProxy\";\r\nimport { ItemTips } from \"../common/ItemTips\";\r\nimport { TradeHeroPanel } from \"../trade/TradeHeroPanel\";\r\nimport { GameSet } from \"../GameSet\";\r\n\r\nexport class BagItem extends Component {\r\n\r\n    /**\r\n     * 更新背包道具item\r\n     * @param item \r\n     * @param data \r\n     */\r\n    static UpdateBagItem(item: Node, data: SPlayerDataItem | SThing) {\r\n        let bagItem = item.getComponent(BagItem);\r\n        if (!bagItem) bagItem = item.addComponent(BagItem);\r\n        bagItem.SetData(data);\r\n    }\r\n\r\n\r\n    private bg: Sprite;\r\n    private maskBg: Sprite;\r\n    private icon: Sprite;\r\n    private mask: Sprite;\r\n    private num: Label;\r\n    private quality: Sprite\r\n    private newIcon: Node;\r\n    private itemName: Label;\r\n    private select: Node;\r\n    private redPoint: Node;\r\n    private data: SPlayerDataItem | SThing;\r\n\r\n    private showSelect: boolean = true;\r\n    private isShowTips: boolean = false;\r\n    private showRedPoint: boolean = false;\r\n    private isShowRoleLock: boolean = false;\r\n    private time_lock: number;\r\n    protected onLoad(): void {\r\n        this.bg = this.node.getChildByName(\"bg\").getComponent(Sprite);\r\n        this.maskBg = this.node.getChildByName(\"maskbg\").getComponent(Sprite);\r\n        this.icon = this.node.getChildByName(\"icon\").getComponent(Sprite);\r\n        this.mask = this.node.getChildByName(\"mask\").getComponent(Sprite);\r\n        this.num = this.node.getChildByName(\"num\").getComponent(Label);\r\n        this.quality = this.node.getChildByName(\"quality\").getComponent(Sprite);\r\n        this.newIcon = this.node.getChildByName(\"isNew\");\r\n        this.itemName = this.node.getChildByName(\"name\").getComponent(Label);\r\n        this.redPoint = this.node.getChildByName(\"redPoint\");\r\n        this.redPoint.active = false;\r\n        this.select = this.node.getChildByName(\"select\");\r\n        this.node.on(Input.EventType.TOUCH_END, this.onClick, this);\r\n        this.hasLoad = true;\r\n        this.complete?.();\r\n    }\r\n\r\n    protected complete: Function;\r\n    protected hasLoad = false;\r\n    protected $loadSub: Promise<any>;\r\n    protected get loadSub() {\r\n        if (this.$loadSub) return this.$loadSub;\r\n        let thisObj = this;\r\n        this.$loadSub = new Promise((resolve, reject) => {\r\n            thisObj.complete = resolve;\r\n        });\r\n        return this.$loadSub;\r\n    }\r\n\r\n    /**\r\n     * 刷新道具数据\r\n     * @param data \r\n     */\r\n    async SetData(data: SPlayerDataItem | SThing) {\r\n        if (!this.hasLoad) await this.loadSub;\r\n        this.data = data;\r\n        if (data['id'] != undefined) {\r\n            this.setItem(<unknown>data as SPlayerDataItem);\r\n        } else {\r\n            this.setThing(<unknown>data as SThing);\r\n        }\r\n    }\r\n    protected async setItem(data: SPlayerDataItem) {\r\n        let std: StdItem = CfgMgr.Getitem(data.id);\r\n        this.newIcon.active = data.isNew == true;\r\n        data.isNew = false;\r\n        this.node.getComponent(Toggle).enabled = this.showSelect;\r\n        this.node.name = std.Items + \"\";\r\n\r\n        this.icon.spriteFrame = await ResMgr.LoadResAbSub(path.join(folder_item, std.Icon, \"spriteFrame\"), SpriteFrame);\r\n        if (std.Itemtpye == ItemType.shard) {\r\n            this.quality.node.active = true;\r\n            this.quality.spriteFrame = await ResMgr.LoadResAbSub(path.join(folder_icon, \"quality\", CardQuality[std.ItemEffect2], \"spriteFrame\"), SpriteFrame);\r\n            this.bg.spriteFrame = await ResMgr.LoadResAbSub(path.join(folder_icon, \"quality\", CardQuality[std.ItemEffect2] + \"_bag_bg\", \"spriteFrame\"), SpriteFrame);\r\n\r\n            this.maskBg.node.active = true;\r\n            this.maskBg.spriteFrame = await ResMgr.LoadResAbSub(path.join(folder_icon, \"quality\", CardQuality[std.ItemEffect2] + \"_bag_mask_bg\", \"spriteFrame\"), SpriteFrame);\r\n            this.mask.node.active = true;\r\n            this.mask.spriteFrame = await ResMgr.LoadResAbSub(path.join(folder_icon, \"quality\", CardQuality[std.ItemEffect2] + \"_bag_mask\", \"spriteFrame\"), SpriteFrame);\r\n        } else {\r\n            this.maskBg.node.active = false;\r\n            this.quality.node.active = false;\r\n            this.mask.node.active = false;\r\n            if (std.Quality) {\r\n                this.bg.spriteFrame = await ResMgr.LoadResAbSub(path.join(folder_icon, \"quality\", CardQuality[std.Quality] + \"_bag_bg\", \"spriteFrame\"), SpriteFrame);\r\n            } else {\r\n                this.bg.spriteFrame = await ResMgr.LoadResAbSub(path.join(folder_icon, \"quality/defineBg/spriteFrame\"), SpriteFrame);\r\n            }\r\n        }\r\n        if (ThingItemId[data.id]) {\r\n            if (data.id == ThingItemId.ItemId_1 || data.id == ThingItemId.ItemId_2 || data.id == ThingItemId.ItemId_3) {\r\n                this.num.string = ToFixed(data.count, 2);\r\n            } else {\r\n                this.num.string = formatNumber(data.count, 2);\r\n            }\r\n        } else {\r\n            this.num.string = formatNumber(data.count);\r\n        }\r\n        let isHaveRedPoint: boolean = false;\r\n        if (this.showRedPoint) {\r\n            if (std.Type == ThingType.ThingTypeItem) {\r\n                if (std.Itemtpye == ItemType.shard) {\r\n                    isHaveRedPoint = data.count >= std.ItemEffect3;\r\n                } else if (std.Itemtpye == ItemType.box) {\r\n                    isHaveRedPoint = true;\r\n                }\r\n            }\r\n        }\r\n        this.redPoint.active = isHaveRedPoint;\r\n        this.itemName.string = std.ItemName;\r\n    }\r\n    protected async setThing(thing: SThing) {\r\n        this.newIcon.active = false;\r\n        // this.select.active = this.showSelect;\r\n        this.node.getComponent(Toggle).enabled = this.showSelect;\r\n        this.maskBg.node.active = false;\r\n        this.quality.node.active = false;\r\n        this.mask.node.active = false;\r\n        this.icon.node.scale = new Vec3(1, 1, 1);\r\n        switch (thing.type) {\r\n            case ThingType.ThingTypeItem:\r\n                this.setItem({ id: thing.item.id, count: thing.item.count });\r\n                break;\r\n            case ThingType.ThingTypeCurrency:\r\n                this.itemName.string = GameSet.GetMoneyName();//\"彩虹体\";           \r\n                let currency1std: StdItem = CfgMgr.Getitem(ThingItemId.ItemId_1);\r\n                switch (thing.currency.type) {\r\n                    case 0://彩虹体\r\n                        this.num.string = ToFixed(thing.currency.value, 2);\r\n                        currency1std = CfgMgr.Getitem(ThingItemId.ItemId_1);\r\n                        break;\r\n                    case 2://金币\r\n                        this.num.string = ToFixed(thing.currency.value, 2);\r\n                        currency1std = CfgMgr.Getitem(ThingItemId.ItemId_2);\r\n                        break;\r\n                    case 3://原石\r\n                        this.num.string = ToFixed(thing.currency.value, 4);\r\n                        currency1std = CfgMgr.Getitem(ThingItemId.ItemId_3);\r\n                        break;\r\n                }\r\n                this.icon.spriteFrame = await ResMgr.LoadResAbSub(path.join(folder_item, currency1std.Icon, \"spriteFrame\"), SpriteFrame);\r\n                this.bg.spriteFrame = await ResMgr.LoadResAbSub(path.join(folder_icon, \"quality\", CardQuality[currency1std.Quality] + \"_bag_bg\", \"spriteFrame\"), SpriteFrame);\r\n                this.node.name = ThingType[thing.type];\r\n                break;\r\n            case ThingType.ThingTypeGold:\r\n                this.itemName.string = \"金币\";\r\n                let currency2std: StdItem = CfgMgr.Getitem(ThingItemId.ItemId_2);\r\n                switch (thing.currency.type) {\r\n                    case 0://彩虹体\r\n                        this.num.string = ToFixed(thing.currency.value, 2);\r\n                        currency2std = CfgMgr.Getitem(ThingItemId.ItemId_1);\r\n                        break;\r\n                    case 2://金币\r\n                        this.num.string = ToFixed(thing.currency.value, 2);\r\n                        currency2std = CfgMgr.Getitem(ThingItemId.ItemId_2);\r\n                        break;\r\n                    case 3://原石\r\n                        this.num.string = ToFixed(thing.currency.value, 4);\r\n                        currency2std = CfgMgr.Getitem(ThingItemId.ItemId_3);\r\n                        break;\r\n                }\r\n                this.icon.spriteFrame = await ResMgr.LoadResAbSub(path.join(folder_item, currency2std.Icon, \"spriteFrame\"), SpriteFrame);\r\n                this.bg.spriteFrame = await ResMgr.LoadResAbSub(path.join(folder_icon, \"quality\", CardQuality[currency2std.Quality] + \"_bag_bg\", \"spriteFrame\"), SpriteFrame);\r\n                this.node.name = ThingType[thing.type];\r\n                break;\r\n            case ThingType.ThingTypeEquipment:\r\n                this.num.string = \"\";\r\n                this.itemName.string = \"武器\";\r\n                this.icon.node.active = false;\r\n                this.bg.spriteFrame = await ResMgr.LoadResAbSub(path.join(folder_icon, \"quality/defineBg/spriteFrame\"), SpriteFrame);\r\n                this.node.name = ThingType[thing.type];\r\n                break;\r\n            case ThingType.ThingTypeRole:\r\n                // this.node.getComponent(Toggle).enabled = true;\r\n                let std = CfgMgr.GetRole()[thing.role.type];\r\n                this.num.string = thing['count'] || \"1\";\r\n                this.itemName.string = std.Name;\r\n                this.quality.node.active = true;\r\n                this.icon.spriteFrame = await ResMgr.LoadResAbSub(path.join(folder_head_card, std.Icon, \"spriteFrame\"), SpriteFrame);\r\n                this.icon.node.scale = new Vec3(0.8, 0.8, 0.8);\r\n                if (thing.role.quality) {\r\n                    this.bg.spriteFrame = await ResMgr.LoadResAbSub(path.join(folder_icon, \"quality\", CardQuality[thing.role.quality] + \"_bag_bg\", \"spriteFrame\"), SpriteFrame);\r\n                    this.quality.spriteFrame = await ResMgr.LoadResAbSub(path.join(folder_icon, \"quality\", CardQuality[thing.role.quality], \"spriteFrame\"), SpriteFrame);\r\n                } else {\r\n                    this.bg.spriteFrame = await ResMgr.LoadResAbSub(path.join(folder_icon, \"quality/defineBg/spriteFrame\"), SpriteFrame);\r\n                }\r\n                this.node.name = \"role_\" + thing.role.type;\r\n                let role_lock = this.node.getChildByName(\"role_lock\");\r\n                let node = this.node.getChildByPath(\"role_lock/lbl_time\");\r\n                if (role_lock && node) {\r\n                    role_lock.active = false;\r\n                }\r\n                let time = thing.role.trade_cd - PlayerData.GetServerTime();\r\n                if (this.isShowRoleLock && thing.role.trade_cd > 0 && time > 0) {\r\n                    let lbl_time: Label;\r\n                    if (role_lock && node) {\r\n                        role_lock.active = true;\r\n                        lbl_time = node.getComponent(Label);\r\n                        let show_time = PlayerData.countDown2(thing.role.trade_cd);\r\n                        if (show_time.d > 0) {\r\n                            lbl_time.string = show_time.d + \"天\";\r\n                        } else {\r\n                            lbl_time.string = show_time.h + \":\" + show_time.m + \":\" + show_time.s;\r\n                        }\r\n                        if (this.time_lock) {\r\n                            clearInterval(this.time_lock)\r\n                        }\r\n                        let seconds = thing.role.trade_cd - PlayerData.GetServerTime();\r\n                        this.time_lock = setInterval(() => {\r\n                            if (seconds > 0) {\r\n                                seconds -= 1;\r\n                                let time = PlayerData.countDown2(thing.role.trade_cd);\r\n                                if (time.d > 0) {\r\n                                    lbl_time.string = time.d + \"天\";\r\n                                } else {\r\n                                    lbl_time.string = time.h + \":\" + time.m + \":\" + time.s;\r\n                                }\r\n                            } else {\r\n                                role_lock.active = false;\r\n                                clearInterval(this.time_lock);\r\n                            }\r\n                        }, 1000)\r\n                    }\r\n                }\r\n\r\n                break;\r\n            case ThingType.ThingTypeResource:\r\n                if (thing.resource.rock) {\r\n                    this.setItem({ id: ThingItemId.ItemId_7, count: thing.resource.rock });\r\n                } else if (thing.resource.seed) {\r\n                    this.setItem({ id: ThingItemId.ItemId_9, count: thing.resource.seed });\r\n                } else if (thing.resource.water) {\r\n                    this.setItem({ id: ThingItemId.ItemId_8, count: thing.resource.water });\r\n                } else if (thing.resource.wood) {\r\n                    this.setItem({ id: ThingItemId.ItemId_6, count: thing.resource.wood });\r\n                }\r\n                break;\r\n            case ThingType.ThingTypeGemstone:\r\n                this.itemName.string = \"辉耀石\";\r\n                let currency3std: StdItem = CfgMgr.Getitem(ThingItemId.ItemId_3);\r\n                switch (thing.currency.type) {\r\n                    case 0://彩虹体\r\n                        this.num.string = ToFixed(thing.currency.value, 2);\r\n                        currency3std = CfgMgr.Getitem(ThingItemId.ItemId_1);\r\n                        break;\r\n                    case 2://金币\r\n                        this.num.string = ToFixed(thing.currency.value, 2);\r\n                        currency3std = CfgMgr.Getitem(ThingItemId.ItemId_2);\r\n                        break;\r\n                    case 3://原石\r\n                        this.num.string = ToFixed(thing.currency.value, 4);\r\n                        currency3std = CfgMgr.Getitem(ThingItemId.ItemId_3);\r\n                        break;\r\n                }\r\n\r\n                this.icon.spriteFrame = await ResMgr.LoadResAbSub(path.join(folder_item, currency3std.Icon, \"spriteFrame\"), SpriteFrame);\r\n                this.bg.spriteFrame = await ResMgr.LoadResAbSub(path.join(folder_icon, \"quality\", CardQuality[currency3std.Quality] + \"_bag_bg\", \"spriteFrame\"), SpriteFrame);\r\n                this.node.name = ThingType[thing.type];\r\n                break;\r\n            case ThingType.ThingTypeGem:\r\n                this.itemName.string = \"宝石\";\r\n                let currency77std: StdItem = CfgMgr.Getitem(ThingItemId.ItemId_202);\r\n                switch (thing.currency.type) {\r\n                    case 77://世界宝石\r\n                        let keepPre = CfgMgr.GetCommon(StdCommonType.Gem).KeepPre;\r\n                        this.num.string = ToFixed(thing.currency.value, keepPre);\r\n                        break;\r\n                }\r\n\r\n                this.icon.spriteFrame = await ResMgr.LoadResAbSub(path.join(folder_item, currency77std.Icon, \"spriteFrame\"), SpriteFrame);\r\n                this.bg.spriteFrame = await ResMgr.LoadResAbSub(path.join(folder_icon, \"quality\", CardQuality[currency77std.Quality] + \"_bag_bg\", \"spriteFrame\"), SpriteFrame);\r\n                this.node.name = ThingType[thing.type];\r\n                break;\r\n            case ThingType.ThingTypeMedal:\r\n                \r\n                let currency74std: StdItem = CfgMgr.Getitem(ThingItemId.ItemId_74);\r\n                this.itemName.string = currency74std.ItemName;\r\n                switch (thing.currency.type) {\r\n                    case 74://勋章\r\n                        this.num.string = ToFixed(thing.currency.value, 2);\r\n                        break;\r\n                }\r\n\r\n                this.icon.spriteFrame = await ResMgr.LoadResAbSub(path.join(folder_item, currency74std.Icon, \"spriteFrame\"), SpriteFrame);\r\n                this.bg.spriteFrame = await ResMgr.LoadResAbSub(path.join(folder_icon, \"quality\", CardQuality[currency74std.Quality] + \"_bag_bg\", \"spriteFrame\"), SpriteFrame);\r\n                this.node.name = ThingType[thing.type];\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**是否展示道具数量 true展示，false不展示 */\r\n    async setIsShowNum(isshow: boolean) {\r\n        if (!this.hasLoad) await this.loadSub;\r\n        this.num.node.active = isshow;\r\n    }\r\n\r\n    /**是否展示道具选中状态 true展示，false不展示 */\r\n    async setIsShowSelect(isshow: boolean) {\r\n        this.showSelect = isshow;\r\n        this.node.getComponent(Toggle).enabled = this.showSelect;\r\n    }\r\n\r\n    /**是否展示道具tips true展示，false不展示 */\r\n    async setIsShowTips(isshow: boolean) {\r\n        this.isShowTips = isshow;\r\n    }\r\n    setIsShowRedPoint(val: boolean) {\r\n        this.showRedPoint = val;\r\n    }\r\n\r\n    /**是否展示角色倒计时 */\r\n    setIsRoleLockShow(isshow: boolean) {\r\n        this.isShowRoleLock = isshow;\r\n    }\r\n\r\n\r\n    private onClick(e: EventTouch) {\r\n        if (this.isShowTips) {\r\n            if ((this.data as SThing).role) {\r\n                TradeHeroPanel.Show((this.data as SThing).role)\r\n            } else {\r\n                ItemTips.Show(this.data)\r\n            }\r\n        }\r\n    }\r\n}"]}