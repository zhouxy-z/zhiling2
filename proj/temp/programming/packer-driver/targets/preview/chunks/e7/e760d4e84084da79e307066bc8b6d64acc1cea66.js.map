{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/utils/FilmMaker.ts"],"names":["_decorator","Camera","Component","find","Layers","RenderTexture","SpriteFrame","UITransform","v2","Utils","ccclass","property","FilmMaker","caches","camera","queue","current","onLoad","instance","getComponent","update","dt","render","length","param","shift","shoot","Shoot","node","cb","uuid","Promise","resolve","activeInHierarchy","reject","target","p","h","promise","handle","tex","undefined","rect","layers","push","MapChildrenFor","child","layer","Enum","canvas","getPathInHierarchy","split","GetBoundingBoxTo","setPosition","center","x","y","size","contentSize","width","height","initialize","targetTexture","spriteFrame","texture"],"mappings":"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","sourcesContent":["import { _decorator, Camera, Component, find, Layers, Node, Rect, RenderTexture, SpriteFrame, UITransform, v2 } from 'cc';\r\nimport { Utils } from './Utils';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('FilmMaker')\r\nexport class FilmMaker extends Component {\r\n    private static instance: FilmMaker;\r\n    private caches: { [uuid: string]: SpriteFrame } = {};\r\n    private camera: Camera;\r\n    private queue: FilmParam[] = [];\r\n    private current: FilmParam;\r\n\r\n    protected onLoad(): void {\r\n        if (FilmMaker.instance) {\r\n            throw \"FilmUtils instance error!\";\r\n        }\r\n        FilmMaker.instance = this;\r\n        this.camera = this.getComponent(Camera);\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        if (this.current) this.render();\r\n        if (this.queue.length) {\r\n            let param = this.queue.shift();\r\n            this.shoot(param);\r\n        }\r\n    }\r\n\r\n    static async Shoot(node: Node, cb?: (sf: SpriteFrame) => void) {\r\n        if (this.instance.caches[node.uuid]) {\r\n            return Promise.resolve(this.instance.caches[node.uuid]);\r\n        }\r\n        if (!node.activeInHierarchy || !node.getComponent(UITransform)) {\r\n            return Promise.reject();\r\n        }\r\n        if (this.instance.current && this.instance.current.target == node) {\r\n            return this.instance.current.p;\r\n        }\r\n        let queue = this.instance.queue;\r\n        for (let param of queue) {\r\n            if (param.target == node) return param.p;\r\n        }\r\n        let h: Function;\r\n        let promise = new Promise<SpriteFrame>((resolve, reject) => {\r\n            h = resolve;\r\n        })\r\n        let param: FilmParam = {\r\n            cb: cb,\r\n            handle: h,\r\n            tex: undefined,\r\n            rect: undefined,\r\n            target: node,\r\n            layers: {},\r\n            p: promise\r\n        }\r\n        this.instance.queue.push(param);\r\n        return promise;\r\n    }\r\n\r\n    protected shoot(param: FilmParam) {\r\n        let layers = {};\r\n        let target = param.target;\r\n        Utils.MapChildrenFor(target, (child: Node) => {\r\n            layers[child.uuid] = child.layer;\r\n            child.layer = Layers.Enum['SPRITE_FRAME'];\r\n        })\r\n        param.layers = layers;\r\n\r\n        let canvas = find(target.getPathInHierarchy().split(\"/\")[0]);\r\n        param.rect = Utils.GetBoundingBoxTo(target, canvas);\r\n        this.camera.node.setPosition(param.rect.center.x, param.rect.center.y);\r\n        let size = canvas.getComponent(UITransform).contentSize;\r\n        param.rect.center = v2(-size.width / 2, -size.height / 2);\r\n\r\n        param.tex = new RenderTexture();\r\n        param.tex.initialize({ width: size.width, height: size.height });\r\n        this.camera.targetTexture = param.tex;\r\n\r\n        this.current = param;\r\n\r\n    }\r\n\r\n    protected render() {\r\n        if (!this.current) return;\r\n\r\n        let spriteFrame = new SpriteFrame();\r\n        spriteFrame.texture = this.current.tex;\r\n        spriteFrame.rect = this.current.rect;\r\n\r\n        let layers = this.current.layers;\r\n        Utils.MapChildrenFor(this.current.target, (child: Node) => {\r\n            child.layer = layers[child.uuid];\r\n        })\r\n        this.caches[this.current.target.uuid] = spriteFrame;\r\n        this.current.cb && this.current.cb(spriteFrame);\r\n        this.current.handle(spriteFrame);\r\n        this.current.cb = undefined;\r\n        this.current.handle = undefined;\r\n        this.current.rect = undefined;\r\n        this.current.target = undefined;\r\n        this.current.tex = undefined;\r\n        this.current = undefined;\r\n        \r\n    }\r\n\r\n}\r\ntype FilmParam = {\r\n    cb: Function;\r\n    handle: Function;\r\n    tex: RenderTexture;\r\n    rect: Rect;\r\n    target: Node;\r\n    layers: { [uuid: string]: number };\r\n    p: Promise<SpriteFrame>;\r\n}\r\n\r\n"]}