{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/manager/AudioMgr.ts"],"names":["AudioMgr","PoolSound","state","source","stop","node","off","AudioSource","EventType","ENDED","pool","push","CreateSound","url","channel","length","shift","id","stateSeed","oneShot","times","status","Audio_Normal","running","loading","startTick","game","totalTime","Node","director","addPersistRootNode","addComponent","mapChannel","channel_map","ls","split","floder","join","pop","undefined","checkRunning","Audio_Pause","loop","tick","duration","currentTime","Math","max","onAudioEnd","playing","volume","play","sounds","i","splice","on","channel_state","Audio_Mute","pause","is_back_ground","AudioClip","Game","path","ResMgr","init","channelMap","EVENT_HIDE","EVENT_SHOW","Resume","PlayAsync","$Play","Play","maxNum","async","def","oneShotState","Promise","resolve","success","p","reject","LoadResAbSub","then","clip","Stop","Mute","value","k","Pause","less","floor","StopAll","filter","MuteChannel","PauseChannel","ResumeChannel","StopChannel"],"mappings":"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","sourcesContent":["import { AudioClip, AudioSource, Game, Node, assetManager, director, game, path } from \"cc\";\r\nimport { ResMgr } from \"./ResMgr\";\r\n\r\n/**声音定义 */\r\nexport type AudioDefin = {\r\n    readonly url: string;    //声音资源路径\r\n    readonly maxNum: number; //允许此音效同时播放的数量\r\n    readonly channel: number;//所处频道，默认0\r\n}\r\n\r\nlet stateSeed = 0;\r\ntype $AudioState = {\r\n    id: number,         // 唯一id\r\n    source: AudioSource;// 音效资源\r\n    oneShot: boolean,   // 是否播放一次\r\n    times: number,      // 剩余播放次数\r\n    status: number;  // 暂停\r\n    running: boolean;   // 是否正在运行中\r\n    volume: number;\r\n    startTick: number;  // 开始播放的时间,与当前时间和音效时长计算出当前是否已经播放结束\r\n    channel: number;    // 频道分组\r\n    url: string;        // 资源路径\r\n    loading: boolean;   // 是否正在加载中\r\n}\r\nconst Audio_Normal = 0;\r\nconst Audio_Mute = 1; //静音\r\nconst Audio_Pause = 2;//暂停\r\nlet sounds: { [path: string]: $AudioState[] } = {};\r\nlet channel_map: { [url: string]: { channel: number, maxNum: number } } = {}; //预设频道表\r\nlet channel_state: number[] = [];// 频道的状态 1静音，2暂停\r\nlet is_back_ground = false;\r\nlet pool = [];\r\n\r\nfunction PoolSound(state: $AudioState) {\r\n    if (state.source) {\r\n        state.source.stop();\r\n        state.source.node.off(AudioSource.EventType.ENDED);\r\n    }\r\n    pool.push(state);\r\n}\r\nfunction CreateSound(url: string, channel: number) {\r\n    if (pool.length) {\r\n        let state = pool.shift();\r\n        state.id = ++stateSeed;\r\n        state.oneShot = false;\r\n        state.times = 1;\r\n        state.status = Audio_Normal;\r\n        state.running = true;\r\n        state.channel = channel;\r\n        state.url = url;\r\n        state.loading = true;\r\n        state.startTick = game.totalTime / 1000;\r\n        return state;\r\n    } else {\r\n        let node = new Node();\r\n        director.addPersistRootNode(node);\r\n        return {\r\n            id: ++stateSeed,\r\n            source: node.addComponent(AudioSource),\r\n            oneShot: false,\r\n            times: 1,\r\n            status: Audio_Normal,\r\n            running: true,\r\n            channel: channel,\r\n            url: url,\r\n            loading: true,\r\n            startTick: game.totalTime / 1000\r\n        };\r\n    }\r\n}\r\n\r\n/**查询音效url是否在预设频道内 */\r\nfunction mapChannel(url: string) {\r\n    if (channel_map[url]) return channel_map[url];\r\n    let ls = url.split(\"/\");\r\n    while (ls.length) {\r\n        let floder = ls.join(\"/\") + \"/*\";\r\n        if (channel_map[floder]) return channel_map[floder];\r\n        ls.pop();\r\n    }\r\n    return undefined;\r\n}\r\n\r\n/**判断音效是否正在运行 */\r\nfunction checkRunning(state: $AudioState) {\r\n    if (!state.running) return false;\r\n    if (state.loading || state.status == Audio_Pause) return true;\r\n    if (state.times == 0 || state.source.loop) return true;\r\n    let tick = game.totalTime / 1000 - state.startTick;\r\n    if (state.oneShot) {\r\n        if (tick < state.source.duration) return true;\r\n    } else {\r\n        if (tick < state.source.duration - state.source.currentTime + state.source.duration * Math.max(0, state.times - 1))\r\n            return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction onAudioEnd() {\r\n    let state: $AudioState = this;\r\n    if (state.times <= 0) {\r\n        if (!state.source.playing) {\r\n            state.source.volume = state.volume || 1;\r\n            state.source.play();\r\n        }\r\n    } else if (state.times == 1) {\r\n        state.running = false;\r\n        state.status = Audio_Normal;\r\n        state.source.node.off(AudioSource.EventType.ENDED);\r\n        for (let url in sounds) {\r\n            let ls = sounds[url];\r\n            for (let i = 0; i < ls.length; i++) {\r\n                if (ls[i] == state) {\r\n                    ls.splice(i, 1);\r\n                    PoolSound(state);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        if (state.times > 0) state.times--;\r\n        state.source.volume = state.volume || 1;\r\n        state.source.play();\r\n    }\r\n}\r\n\r\nfunction play(state: $AudioState, times: number = 1, volume: number = 1) {\r\n    state.oneShot = times == 1;\r\n    state.source.loop = times <= 0;\r\n    state.times = times;\r\n    state.startTick = game.totalTime / 1000;\r\n    state.running = true;\r\n    state.volume = volume;\r\n    state.status = Audio_Normal;\r\n    if (!state.oneShot || state.source.loop) {\r\n        state.source.node.on(AudioSource.EventType.ENDED, onAudioEnd, state);\r\n    } else {\r\n        state.source.node.off(AudioSource.EventType.ENDED);\r\n    }\r\n    if (state.loading) return;\r\n    state.source.volume = volume;\r\n    state.source.play();\r\n    if (channel_state[state.channel] == Audio_Mute) {\r\n        state.status = Audio_Mute;\r\n        state.source.pause();\r\n    } else if (channel_state[state.channel] == Audio_Pause) {\r\n        state.status = Audio_Pause;\r\n        state.source.pause();\r\n    } else if (is_back_ground) {\r\n        state.source.pause();\r\n    }\r\n}\r\n\r\nexport class AudioMgr {\r\n    /**\r\n     * 初始音效管理器\r\n     * @param channelMap 预设音效频道\r\n     */\r\n    static init(channelMap?: { [url: string]: { channel: number, maxNum: number } }) {\r\n        channel_map = channelMap || {};\r\n        game.on(Game.EVENT_HIDE, () => {\r\n            is_back_ground = true;\r\n            for (let url in sounds) {\r\n                let ls = sounds[url];\r\n                for (let state of ls) {\r\n                    if (!state.loading) state.source.pause();\r\n                }\r\n            }\r\n        }, this);\r\n        game.on(Game.EVENT_SHOW, () => {\r\n            is_back_ground = false;\r\n            for (let url in sounds) {\r\n                let ls = sounds[url];\r\n                for (let state of ls) {\r\n                    if (!state.loading && state.running && state.status == Audio_Normal && !channel_state[state.channel]) {\r\n                        this.Resume(state.id);\r\n                    }\r\n                }\r\n            }\r\n        }, this);\r\n    }\r\n\r\n    /**\r\n     * 异步播放\r\n     * @param audio 音效\r\n     */\r\n    static async PlayAsync(url: string, times: number): Promise<number>;\r\n    static async PlayAsync(url: string, times: number, channel: number): Promise<number>;\r\n    static async PlayAsync(url: string, times: number, channel: number, maxNum: number): Promise<number>;\r\n    static async PlayAsync(audio: AudioDefin): Promise<number>;\r\n    static async PlayAsync(audio: AudioDefin, times: number): Promise<number>;\r\n    static async PlayAsync(...args): Promise<number> {\r\n        let times = args[1];\r\n        if (times == undefined) times = 1;\r\n        if (times <= 0) times = 0;\r\n        return this.$Play(true, args[0], times, args[2], args[3]);\r\n    }\r\n\r\n    /**\r\n     * 同步播放音效\r\n     * @param audio \r\n     */\r\n    static Play(url: string, times: number, volume?: number): number;\r\n    static Play(url: string, times: number, channel: number, volume?: number): number;\r\n    static Play(url: string, times: number, channel: number, maxNum: number, volume?: number): number;\r\n    static Play(audio: AudioDefin, volume?: number): number;\r\n    static Play(audio: AudioDefin, times: number, volume?: number): number;\r\n    static Play(...args): number {\r\n        let times: number, channel: number, maxNum: number, volume: number;\r\n        if (args.length == 2) {\r\n            times = 1;\r\n            volume = args[1];\r\n        } else if (args.length == 3) {\r\n            times = args[1];\r\n            volume = args[2];\r\n        } else if (args.length == 4) {\r\n            times = args[1];\r\n            channel = args[2];\r\n            volume = args[3];\r\n        } else {\r\n            times = args[1];\r\n            channel = args[2];\r\n            maxNum = args[3];\r\n            volume = args[4];\r\n        }\r\n        if (times == undefined) times = 1;\r\n        if (times < 0) times = 0;\r\n        if (volume == undefined) volume = 1;\r\n        return this.$Play(false, args[0], times, channel, maxNum, volume);\r\n    }\r\n\r\n    /**播放音效 */\r\n    private static $Play(async: boolean, url: string | AudioDefin, times?: number, channel?: number, maxNum?: number, volume: number = 1): any {\r\n        if (times == undefined) times = 1;\r\n        if (typeof (url) != \"string\") {\r\n            let def: AudioDefin = url\r\n            url = def.url;\r\n            channel = def.channel;\r\n            maxNum = def.maxNum || 4;\r\n        } else {\r\n            if (channel == undefined) channel = mapChannel(url)?.channel || 0;\r\n            if (maxNum == undefined) maxNum = mapChannel(url)?.maxNum || 4;\r\n        }\r\n        let ls = sounds[url] || [];\r\n        sounds[url] = ls;\r\n        let oneShotState: $AudioState;\r\n        for (let i = 0; i < maxNum; i++) {\r\n            let state = ls[i];\r\n            if (state && !checkRunning(state)) {\r\n                state.id = ++stateSeed;\r\n                play(state, times, volume);\r\n                if (async) return Promise.resolve([state.id, state.source.duration]);\r\n                return state.id;\r\n            } else if (!state) {\r\n                let state = CreateSound(url, channel);\r\n                ls.push(state);\r\n                let success: Function;\r\n                let p = new Promise((resolve, reject) => { success = resolve; });\r\n                play(state, times, volume);\r\n                ResMgr.LoadResAbSub(url, AudioClip).then(clip => {\r\n                    state.source.clip = clip;\r\n                    state.loading = false;\r\n                    if (state.status == Audio_Normal && !channel_state[state.channel]) {\r\n                        state.source.volume = state.volume || 1;\r\n                        state.source.play();\r\n                    }\r\n                    success && success([state.id, state.source.duration]);\r\n                });\r\n                if (async) return p;\r\n                return state.id;\r\n            } else if (state && state.oneShot) oneShotState = state;\r\n        }\r\n        // 非循环音效重头开始播放\r\n        if (oneShotState) {\r\n            this.Stop(oneShotState.id);\r\n            play(oneShotState, times, volume);\r\n            if (async) return Promise.resolve([oneShotState.id, oneShotState.source.duration]);\r\n            return oneShotState.id;\r\n        }\r\n        if (async) return Promise.resolve(undefined);\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * 静音\r\n     * @param url \r\n     */\r\n    static Mute(url: string): void;\r\n    static Mute(id: number): void;\r\n    static Mute(value: string | number) {\r\n        let id: number, url: string;\r\n        if (typeof (value) == \"string\")\r\n            url = value;\r\n        else\r\n            id = value;\r\n        for (let k in sounds) {\r\n            let ls = sounds[k];\r\n            for (let state of ls) {\r\n                if (state.url == url || state.id == id) {\r\n                    state.status = Audio_Mute;\r\n                    if (!state.loading) state.source.pause();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 暂停音效\r\n     * @param id  \r\n     */\r\n    static Pause(url: string): void;\r\n    static Pause(id: number): void\r\n    static Pause(value: string | number) {\r\n        let id: number, url: string;\r\n        if (typeof (value) == \"string\")\r\n            url = value;\r\n        else\r\n            id = value;\r\n        for (let k in sounds) {\r\n            let ls = sounds[k];\r\n            for (let state of ls) {\r\n                if (url == state.url || state.id == id) {\r\n                    state.status = Audio_Pause;\r\n                    if (!state.loading) state.source.pause();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 恢复音效\r\n     * @param id \r\n     */\r\n    static Resume(url: string): void;\r\n    static Resume(id: number): void;\r\n    static Resume(value: string | number) {\r\n        let id: number, url: string;\r\n        if (typeof (value) == \"string\")\r\n            url = value;\r\n        else\r\n            id = value;\r\n        for (let k in sounds) {\r\n            let ls = sounds[k];\r\n            for (let state of ls) {\r\n                if (url == state.url || state.id == id) {\r\n                    if (state.status == Audio_Pause) {\r\n                        state.status = Audio_Normal;\r\n                        if (!state.loading) {\r\n                            state.startTick = (state.source.currentTime || 0) + state.source.duration * Math.max(state.times - 1, 0);\r\n                            if (checkRunning(state)) {\r\n                                state.source.volume = state.volume || 1;\r\n                                state.source.play();\r\n                            }\r\n                        }\r\n                        continue;\r\n                    } else if (checkRunning(state)) {\r\n                        state.status = Audio_Normal;\r\n                        let tick = game.totalTime / 1000 - state.startTick;\r\n                        if (state.times <= 0) {\r\n                            state.source.volume = state.volume || 1;\r\n                            state.source.currentTime = tick % state.source.duration;\r\n                            state.source.play();\r\n                            continue;\r\n                        } else {\r\n                            let less = state.source.currentTime + state.source.duration * Math.max(state.times - 1, 0);\r\n                            if (tick < less) {\r\n                                state.source.volume = state.volume || 1;\r\n                                state.times -= Math.floor(tick / state.source.duration);\r\n                                state.source.currentTime = tick % state.source.duration;\r\n                                state.source.play();\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n                    state.status = Audio_Normal;\r\n                    state.running = false;\r\n                    if (!state.loading) state.source.stop();\r\n                    state.source.node.off(AudioSource.EventType.ENDED);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止音效\r\n     * @param audio \r\n     * @param id \r\n     */\r\n    static Stop(url: string): void;\r\n    static Stop(id: number): void;\r\n    static Stop(value: string | number) {\r\n        let id: number, url: string;\r\n        if (typeof (value) == \"string\")\r\n            url = value;\r\n        else\r\n            id = value;\r\n        for (let k in sounds) {\r\n            let ls = sounds[k];\r\n            for (let i = ls.length - 1; i >= 0; i--) {\r\n                let state = ls[i];\r\n                if (url == state.url || state.id == id) {\r\n                    state.status = Audio_Normal;\r\n                    state.running = false;\r\n                    if (!state.loading) {\r\n                        state.source.stop();\r\n                        state.source.node.off(AudioSource.EventType.ENDED);\r\n                    }\r\n                    ls.splice(i, 1);\r\n                    PoolSound(state);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止所有音效\r\n     */\r\n    static StopAll() {\r\n        for (let url in sounds) {\r\n            sounds[url].filter(state => {\r\n                state.status = Audio_Normal;\r\n                state.running = false;\r\n                if (!state.loading) {\r\n                    state.source.stop();\r\n                    state.source.node.off(AudioSource.EventType.ENDED);\r\n                }\r\n                PoolSound(state);\r\n            })\r\n            sounds[url] = [];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 静音指定频道的音效\r\n     * @param channel \r\n     */\r\n    static MuteChannel(channel: number) {\r\n        channel_state[channel] = Audio_Mute;\r\n        for (let url in sounds) {\r\n            let ls = sounds[url];\r\n            for (let state of ls) {\r\n                if (state.channel == channel) {\r\n                    state.status = Audio_Mute;\r\n                    state.source.pause();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 暂停指定频道的音效\r\n     * @param channel \r\n     */\r\n    static PauseChannel(channel: number) {\r\n        channel_state[channel] = Audio_Pause;\r\n        for (let url in sounds) {\r\n            let ls = sounds[url];\r\n            for (let state of ls) {\r\n                if (state.channel == channel) {\r\n                    state.status = Audio_Pause;\r\n                    state.source.pause();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 恢复指定频道的播放\r\n     * @param channel \r\n     */\r\n    static ResumeChannel(channel: number) {\r\n        channel_state[channel] = Audio_Normal;\r\n        for (let url in sounds) {\r\n            let ls = sounds[url];\r\n            for (let state of ls) {\r\n                if (state.channel == channel) {\r\n                    if (state.status == Audio_Pause) {\r\n                        state.status = Audio_Normal;\r\n                        if(checkRunning(state)){\r\n                            state.source.volume = state.volume || 1;\r\n                            state.source.play();\r\n                        }\r\n                        continue;\r\n                    } else if (checkRunning(state)) {\r\n                        state.status = Audio_Normal;\r\n                        let tick = game.totalTime / 1000 - state.startTick;\r\n                        if (state.times <= 0) {\r\n                            state.source.volume = state.volume || 1;\r\n                            state.source.currentTime = tick % state.source.duration;\r\n                            state.source.play();\r\n                            continue;\r\n                        } else if (tick < state.source.duration * state.times) {\r\n                            state.source.volume = state.volume || 1;\r\n                            state.times -= Math.floor(tick / state.source.duration);\r\n                            state.source.currentTime = tick % state.source.duration;\r\n                            state.source.play();\r\n                            continue;\r\n                        }\r\n                    }\r\n                    state.status = Audio_Normal;\r\n                    state.running = false;\r\n                    state.source.stop();\r\n                    state.source.node.off(AudioSource.EventType.ENDED);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止指定频道的播放\r\n     * @param channel \r\n     */\r\n    static StopChannel(channel: number) {\r\n        channel_state[channel] = Audio_Normal;\r\n        for (let url in sounds) {\r\n            let ls = sounds[url];\r\n            for (let i = ls.length - 1; i >= 0; i--) {\r\n                let state = ls[i];\r\n                if (state.channel == channel) {\r\n                    state.status = Audio_Normal;\r\n                    state.running = false;\r\n                    if (!state.loading) {\r\n                        state.source.stop();\r\n                        state.source.node.off(AudioSource.EventType.ENDED);\r\n                    }\r\n                    ls.splice(i, 1);\r\n                    PoolSound(state);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}