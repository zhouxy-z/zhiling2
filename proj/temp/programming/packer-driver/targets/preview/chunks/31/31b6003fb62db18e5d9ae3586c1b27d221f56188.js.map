{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/vs/VSSectionAwardItem.ts"],"names":["VSSectionAwardItem","Component","Button","Sprite","Label","path","SpriteFrame","Layout","UITransform","UIOpacity","Card","CfgMgr","ThingName","Req","Route","PlayerData","card_quality","folder_item","ResMgr","Session","MsgPanel","EventMgr","Evt_SectionAwardUpdate","DateUtils","starCont","lineCont","awardCont","btn","bg1","bg2","cardBg","card","itemCont","itemIcon","itemNameLab","getImg","sectionCont","sectionIcon","sectionNameImg","canGetEffect","stdPvpLevel","isInit","data","resNum","onLoad","node","getChildByPath","getComponent","addComponent","getChildByName","updateShow","onEnable","on","EventType","CLICK","onBtnClick","onAwardDataUpdate","onDisable","off","rankLevelId","LevelID","seasonData","CurSeasonData","currentRankInfo","rankPoints","LevelPoints","Show","LevelName","ServerTime","GetCurSeasonEndTime","seasonId","currentSeasonId","Send","SetData","updateStar","GetSectionAwardData","updateAward","curNum","LoadResAbSub","join","LevelIcon","res","spriteFrame","LevelNameImg","Star","active","starNum","updateSize","point","index","children","length","StarPoints","line","push","updateLayout","width","bg","iconStr","numStr","thing","things","quality","item","stdItem","Getitem","id","Icon","ItemName","count","LevelRewardTypes","battlecard","LevelRewardIds","LevelRewardNums","string","toString","color","fromHEX","opacity"],"mappings":"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","sourcesContent":["import { Node, Component, Button, Sprite, Label, path, SpriteFrame, Layout, UITransform, UIOpacity } from \"cc\";\r\nimport { Card } from \"../cards/Card\";\r\nimport { CfgMgr, StdItem, StdPvpLevel, ThingName } from \"../../manager/CfgMgr\";\r\nimport proto, { Req, Route } from \"../../net/Protocol\";\r\nimport { PlayerData } from \"../player/PlayerData\";\r\nimport { card_quality, folder_item, ResMgr } from \"../../manager/ResMgr\";\r\nimport { Session } from \"../../net/Session\";\r\nimport { MsgPanel } from \"../common/MsgPanel\";\r\nimport { EventMgr, Evt_SectionAwardUpdate } from \"../../manager/EventMgr\";\r\nimport { DateUtils } from \"../../utils/DateUtils\";\r\n\r\nexport class VSSectionAwardItem extends Component {\r\n    private starCont: Node;\r\n    private lineCont: Node;\r\n    private awardCont: Node;\r\n    private btn: Button;\r\n    private bg1: Node;\r\n    private bg2: Node;\r\n    private cardBg: Sprite;\r\n    private card: Card;\r\n    private itemCont: Node;\r\n    private itemIcon: Sprite;\r\n    private itemNameLab: Label;\r\n    private getImg: Node;\r\n    private sectionCont: Node;\r\n    private sectionIcon: Sprite;\r\n    private sectionNameImg: Sprite;\r\n    private canGetEffect: Node;\r\n    private stdPvpLevel: StdPvpLevel;\r\n    private isInit: boolean = false;\r\n    private data: proto.base.IPlayerRankLevelReward;\r\n    private resNum: number = 0;\r\n    protected onLoad(): void {\r\n        this.starCont = this.node.getChildByPath(\"starCont\");\r\n        this.lineCont = this.node.getChildByPath(\"starCont/lineCont\");\r\n        this.awardCont = this.node.getChildByPath(\"awardCont\");\r\n        this.btn = this.node.getChildByPath(\"awardCont\").getComponent(Button);\r\n        this.bg1 = this.node.getChildByPath(\"awardCont/bg1\");\r\n        this.bg2 = this.node.getChildByPath(\"awardCont/bg2\");\r\n        this.cardBg = this.node.getChildByPath(\"awardCont/cardBg\").getComponent(Sprite);\r\n        this.card = this.node.getChildByPath(\"awardCont/Cards\").addComponent(Card);\r\n        this.itemCont = this.node.getChildByPath(\"awardCont/itemCont\");\r\n        this.itemIcon = this.node.getChildByPath(\"awardCont/itemCont/itemIcon\").getComponent(Sprite);\r\n        this.getImg = this.node.getChildByPath(\"awardCont/getImg\");\r\n        this.canGetEffect = this.node.getChildByPath(\"awardCont/canGetEffect\");\r\n        this.itemNameLab = this.node.getChildByPath(\"awardCont/itemCont/itemNumLab\").getComponent(Label);\r\n        this.sectionCont = this.node.getChildByName(\"sectionCont\");\r\n        this.sectionIcon = this.node.getChildByPath(\"sectionCont/sectionIcon\").getComponent(Sprite);\r\n        this.sectionNameImg = this.node.getChildByPath(\"sectionCont/sectionNameImg\").getComponent(Sprite);\r\n        this.isInit = true;\r\n        if (this.stdPvpLevel) this.updateShow();\r\n    }\r\n\r\n    protected onEnable(): void {\r\n        this.btn.node.on(Button.EventType.CLICK, this.onBtnClick, this);\r\n        EventMgr.on(Evt_SectionAwardUpdate, this.onAwardDataUpdate, this);\r\n    }\r\n\r\n    protected onDisable(): void {\r\n        this.btn.node.off(Button.EventType.CLICK, this.onBtnClick, this);  \r\n        EventMgr.off(Evt_SectionAwardUpdate, this.onAwardDataUpdate, this);  \r\n    }\r\n\r\n    private onAwardDataUpdate(data: proto.base.IPlayerRankLevelReward): void {\r\n        if (data.rankLevelId == this.stdPvpLevel.LevelID) {\r\n            this.updateShow();\r\n        }\r\n    }\r\n\r\n    private onBtnClick(btn: Button): void {\r\n        let seasonData: proto.pb.PlayerPvpInfoPush = PlayerData.CurSeasonData;\r\n        if (seasonData.currentRankInfo.rankPoints < this.stdPvpLevel.LevelPoints) {\r\n            MsgPanel.Show(`达到${this.stdPvpLevel.LevelName}可领取`);\r\n            return;\r\n        }\r\n        if (this.data) {\r\n            MsgPanel.Show(\"奖励已领取\");\r\n            return;\r\n        }\r\n        if (DateUtils.ServerTime > PlayerData.GetCurSeasonEndTime()) {\r\n            MsgPanel.Show(\"暂时没有赛季已结束\");\r\n            return;\r\n        }\r\n\r\n        let data = new Req[\"pvp.protocol.ranklevelrewardclaim\"]();\r\n        data.seasonId = seasonData.currentSeasonId;\r\n        data.rankLevelId = this.stdPvpLevel.LevelID;\r\n        Session.Send(Route[\"pvp.protocol.ranklevelrewardclaim\"], data);\r\n    }\r\n\r\n    SetData(data: StdPvpLevel): void {\r\n        this.stdPvpLevel = data;\r\n        this.updateShow();\r\n        this.updateStar();\r\n    }\r\n\r\n    private updateShow(): void {\r\n        if (!this.isInit || !this.stdPvpLevel) return;\r\n        this.resNum ++;\r\n        this.data = PlayerData.GetSectionAwardData(this.stdPvpLevel.LevelID);\r\n        this.updateAward();\r\n        const curNum: number = this.resNum;\r\n        ResMgr.LoadResAbSub(path.join(\"sheets/sectionIcon\", this.stdPvpLevel.LevelIcon, \"spriteFrame\"), SpriteFrame, (res: SpriteFrame) => {\r\n            if (curNum == this.resNum) this.sectionIcon.spriteFrame = res;\r\n        });\r\n        ResMgr.LoadResAbSub(path.join(\"sheets/sectionIcon\", this.stdPvpLevel.LevelNameImg, \"spriteFrame\"), SpriteFrame, (res: SpriteFrame) => {\r\n            if (curNum == this.resNum) this.sectionNameImg.spriteFrame = res;\r\n        });\r\n    }\r\n    private updateStar(): void {\r\n        let seasonData: proto.pb.PlayerPvpInfoPush = PlayerData.CurSeasonData;\r\n        if (this.stdPvpLevel.Star > 1) {\r\n            this.starCont.active = true;\r\n            let starNum: number = this.stdPvpLevel.Star - 1;\r\n            let node: Node;\r\n            let updateSize: Node[] = [];\r\n            let point: number = 0\r\n            for (let index = 0; index < this.lineCont.children.length; index++) {\r\n                node = this.lineCont.children[index];\r\n                if (index < starNum) {\r\n                    point = this.stdPvpLevel.LevelPoints + this.stdPvpLevel.StarPoints * (index + 1);\r\n                    node.active = true;\r\n                    let line: Node = node.getChildByName(\"line\");\r\n                    line.active = point <= seasonData.currentRankInfo.rankPoints;\r\n                    updateSize.push(node);\r\n                } else {\r\n                    node.active = false;\r\n                }\r\n            }\r\n            this.lineCont.getComponent(Layout).updateLayout();\r\n            for (let node of updateSize) {\r\n                let width: number = node.getComponent(UITransform).width;\r\n                let line: Node = node.getChildByName(\"line\");\r\n                line.getComponent(UITransform).width = width;\r\n                let bg: Node = node.getChildByName(\"lineBg\");\r\n                bg.getComponent(UITransform).width = width;\r\n            }\r\n        } else {\r\n            this.starCont.active = false;\r\n        }\r\n    }\r\n    private updateAward(): void {\r\n        let iconStr: string;\r\n        let numStr: string = \"\";\r\n        this.getImg.active = false;\r\n        this.bg2.active = false;\r\n        this.card.node.active = false;\r\n        this.cardBg.node.active = false;\r\n        this.canGetEffect.active = false;\r\n        if (this.data) {\r\n            this.getImg.active = true;\r\n            iconStr = null;\r\n            let thing: proto.base.IThing = this.data.things[0];\r\n            if (thing.card) {\r\n                this.cardBg.node.active = true;\r\n                this.card.node.active = true;\r\n                this.card.SetData(thing.card);\r\n                \r\n                ResMgr.LoadResAbSub(path.join(card_quality, `card_bg${thing.card.quality}`, \"spriteFrame\"), SpriteFrame, (res: SpriteFrame) => {\r\n                    this.itemIcon.spriteFrame = res;\r\n                });\r\n            } else if (thing.item) {\r\n                let stdItem: StdItem = CfgMgr.Getitem(thing.item.id);\r\n                iconStr = path.join(folder_item, stdItem.Icon, \"spriteFrame\");\r\n                numStr = `${stdItem.ItemName}x${thing.item.count}`;\r\n\r\n            }\r\n                \r\n        } else {\r\n            \r\n            if (this.stdPvpLevel.LevelRewardTypes[0] == ThingName.battlecard) {\r\n                iconStr = path.join(folder_item, \"randomCard\", \"spriteFrame\");\r\n                numStr = \"未知卡牌\"; \r\n            } else if (this.stdPvpLevel.LevelRewardTypes[0] == ThingName.item){\r\n                let stdItem: StdItem = CfgMgr.Getitem(this.stdPvpLevel.LevelRewardIds[0]);\r\n                iconStr = path.join(folder_item, stdItem.Icon, \"spriteFrame\");\r\n                numStr = `${stdItem.ItemName}x${this.stdPvpLevel.LevelRewardNums[0]}`;\r\n            }\r\n            \r\n        } \r\n        if (iconStr) {\r\n            this.itemCont.active = true;\r\n            ResMgr.LoadResAbSub(iconStr, SpriteFrame, (res: SpriteFrame) => {\r\n                this.itemIcon.spriteFrame = res;\r\n            });\r\n            this.itemNameLab.string = numStr ? numStr.toString() : \"\";\r\n        } else {\r\n            this.itemCont.active = false;\r\n        }\r\n        let seasonData: proto.pb.PlayerPvpInfoPush = PlayerData.CurSeasonData;\r\n        //seasonData.rankInfo.rankPoints = 53\r\n        if (this.data || seasonData.currentRankInfo.rankPoints >= this.stdPvpLevel.LevelPoints) {\r\n            this.itemNameLab.color.fromHEX(\"#77E6EA\");\r\n            this.bg1.active = true;\r\n            this.cardBg.getComponent(UIOpacity).opacity = 255;\r\n            this.itemCont.getComponent(UIOpacity).opacity = 255;\r\n            this.sectionCont.getComponent(UIOpacity).opacity = 255;\r\n            if (!this.data) {\r\n                this.canGetEffect.active = true;\r\n            }\r\n        } else {\r\n            this.cardBg.getComponent(UIOpacity).opacity = 127;\r\n            this.itemCont.getComponent(UIOpacity).opacity = 168;\r\n            this.sectionCont.getComponent(UIOpacity).opacity = 168;\r\n            this.bg2.active = true;\r\n            this.itemNameLab.color.fromHEX(\"#FFFFFF\");\r\n        }\r\n    }\r\n}"]}