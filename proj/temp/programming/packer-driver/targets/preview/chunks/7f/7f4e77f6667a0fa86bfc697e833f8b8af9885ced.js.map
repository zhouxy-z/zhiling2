{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/battle/BattleBaseComp.ts"],"names":["BattleBaseComp","proto","EventMgr","type","scene","ownerPlayerId","roomId","round","maxTime","data","isRun","isExit","exitCall","changeDataCell","enter","packData","touchInstId","console","log","base","BattleRoomOpOutputType","dir","start","exit","emit","reset","update","dt","onUpdate"],"mappings":";;;gGAQsBA,c;;;;;;;;;;;;;;;;;;;;;;;;;;;;AALfC,MAAAA,K;;AACEC,MAAAA,Q,iBAAAA,Q;;;;;;;;;AACT;AACA;AACA;gCACsBF,c,GAAf,MAAeA,cAAf,CAAiC;AAAA;AAAA,eAC7BG,IAD6B;AAAA,eAE1BC,KAF0B;AAER;AAFQ,eAG1BC,aAH0B;AAGH;AAHG,eAI1BC,MAJ0B;AAIV;AAJU,eAK1BC,KAL0B;AAKX;AALW,eAM1BC,OAN0B;AAMT;AAC3B;AAPoC,eAQ1BC,IAR0B;AAAA,eAS1BC,KAT0B,GAST,KATS;AASH;AATG,eAU1BC,MAV0B,GAUR,KAVQ;AAUF;AAElC;AAZoC,eAa7BC,QAb6B;AAAA,eAc7BC,cAd6B;AAAA;;AAepC;AACJ;AACA;AACWC,QAAAA,KAAK,CAACC,QAAD,EAA2BX,KAA3B,EAA8CD,IAA9C,EAA8F;AACtG,eAAKA,IAAL,GAAYA,IAAZ;AACA,eAAKC,KAAL,GAAaA,KAAb;AACA,eAAKE,MAAL,GAAcS,QAAQ,CAACT,MAAvB;AACA,eAAKC,KAAL,GAAaQ,QAAQ,CAACR,KAAtB;AACA,eAAKF,aAAL,GAAqBU,QAAQ,CAACV,aAA9B;AACA,eAAKI,IAAL,GAAYM,QAAQ,CAACN,IAArB;AACA,eAAKA,IAAL,CAAU,aAAV,IAA2BM,QAAQ,CAACC,WAApC;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiB;AAAA;AAAA,8BAAMC,IAAN,CAAWC,sBAAX,CAAkC,KAAKjB,IAAvC,CAA7B;AACAc,UAAAA,OAAO,CAACI,GAAR,CAAY,KAAKZ,IAAjB;AACA,eAAKE,MAAL,GAAc,KAAd;AACA,eAAKW,KAAL;AACA,eAAKZ,KAAL,GAAa,IAAb;AACH;AAED;AACJ;AACA;;;AACWa,QAAAA,IAAI,GAAS;AAAA;;AAChB,cAAI,KAAKZ,MAAT,EAAiB;AACjBM,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgB;AAAA;AAAA,8BAAMC,IAAN,CAAWC,sBAAX,CAAkC,KAAKjB,IAAvC,CAA5B;AACA;AAAA;AAAA,oCAASqB,IAAT,CAAc,UAAd;AACA,eAAKd,KAAL,GAAa,KAAb;AACA,eAAKC,MAAL,GAAc,IAAd;AACA,eAAKH,OAAL,GAAe,CAAf;AACA,eAAKiB,KAAL;AACA,uCAAKZ,cAAL,6CAAsB,KAAKR,aAA3B,EAA0C,KAAKI,IAA/C;AACA,eAAKI,cAAL,GAAsB,IAAtB,CATgB,CAUhB;;AACA,iCAAKD,QAAL,uCAAgB,KAAKN,MAArB,EAA6B,KAAKC,KAAlC,EAAyC,KAAKF,aAA9C;AACA,eAAKO,QAAL,GAAgB,IAAhB;AACH;AAED;AACJ;AACA;;AAGI;AACJ;AACA;;;AAGI;AACJ;AACA;AACA;AACWc,QAAAA,MAAM,CAACC,EAAD,EAAmB;AAC5B,cAAI,CAAC,KAAKjB,KAAV,EAAiB,OADW,CAE5B;;AACA,cAAI,KAAKF,OAAL,GAAe,CAAnB,EAAsB;AAClB;AACH;;AACD,eAAKoB,QAAL,CAAcD,EAAd;AACH;AAED;AACJ;AACA;AACA;;;AACcC,QAAAA,QAAQ,CAACD,EAAD,EAAmB,CAEpC;;AAhFmC,O","sourcesContent":["import { js } from \"cc\";\r\nimport { GameScene } from \"../fight/GameScene\";\r\nimport { BattlePackData } from \"../player/PlayerStruct\";\r\nimport proto from \"../../net/Protocol\";\r\nimport { EventMgr } from \"../../manager/EventMgr\";\r\n/**\r\n * 战斗表现基类\r\n */\r\nexport abstract class BattleBaseComp<T> {\r\n    public type: proto.base.BattleRoomOpOutputType;\r\n    protected scene: GameScene; //需要处理的玩家 为空字符时表示系统更新，双方都要更新\r\n    protected ownerPlayerId: string; //需要处理的玩家 为空字符时表示系统更新，双方都要更新\r\n    protected roomId: string; //当前房间id\r\n    protected round: number; //当前回合数\r\n    protected maxTime: number; //最大(执行最大时间 超时则中断直接刷新全局)\r\n    //脚本数据\r\n    protected data: T;\r\n    protected isRun: boolean = false;//是否开始跑脚本了\r\n    protected isExit: boolean = false;//是否已退出脚本\r\n\r\n    //退出脚本回调\r\n    public exitCall: (roomId: string, round: number, playerId: string) => void;\r\n    public changeDataCell?: (playerId: string, data: T) => void;\r\n    /**\r\n     * 进入\r\n     */\r\n    public enter(packData: BattlePackData, scene?: GameScene, type?: proto.base.BattleRoomOpOutputType): void {\r\n        this.type = type;\r\n        this.scene = scene;\r\n        this.roomId = packData.roomId;\r\n        this.round = packData.round;\r\n        this.ownerPlayerId = packData.ownerPlayerId;\r\n        this.data = packData.data;\r\n        this.data['touchInstId'] = packData.touchInstId;\r\n        console.log(\"enter------>\" + proto.base.BattleRoomOpOutputType[this.type]);\r\n        console.dir(this.data);\r\n        this.isExit = false;\r\n        this.start();\r\n        this.isRun = true;\r\n    }\r\n\r\n    /***\r\n     * 退出\r\n     */\r\n    public exit(): void {\r\n        if (this.isExit) return;\r\n        console.log(\"exit======>\" + proto.base.BattleRoomOpOutputType[this.type]);\r\n        EventMgr.emit(\"op_start\");\r\n        this.isRun = false;\r\n        this.isExit = true;\r\n        this.maxTime = 0;\r\n        this.reset();\r\n        this.changeDataCell?.(this.ownerPlayerId, this.data);\r\n        this.changeDataCell = null;\r\n        // this.data = null;\r\n        this.exitCall?.(this.roomId, this.round, this.ownerPlayerId);\r\n        this.exitCall = null;\r\n    }\r\n\r\n    /**\r\n     * 必须实现脚本初始化\r\n     */\r\n    protected abstract start(): void;\r\n\r\n    /**\r\n     * 必须实现脚本重置\r\n     */\r\n    protected abstract reset(): void;\r\n\r\n    /**\r\n     * 帧更新\r\n     * @param dt \r\n     */\r\n    public update(dt: number): void {\r\n        if (!this.isRun) return;\r\n        //处理超时逻辑\r\n        if (this.maxTime > 0) {\r\n            return;\r\n        }\r\n        this.onUpdate(dt);\r\n    }\r\n\r\n    /**\r\n     * 帧更新\r\n     * @param dt \r\n     */\r\n    protected onUpdate(dt: number): void {\r\n\r\n    }\r\n}"]}