{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/shop/ShopBuyPanel.ts"],"names":["ShopBuyPanel","Button","Label","RichText","Slider","UITransform","Session","Panel","CfgMgr","ThingTypeName","MsgPanel","ConsumeItem","AwardItem","ItemUtil","Req","Route","prefab","itemDesc","awardItem","awardBtn","priceConsumeItem","numLab","leftBtn","slider","sliderBar","rightBtn","maxBtn","buyBtn","buyConsumeItem","curNum","maxNum","shopId","std","shopData","stdItem","item","onLoad","find","addComponent","CloseBy","node","on","EventType","CLICK","onBtnClick","onSlide","onShow","onHide","flush","GetCommShopItem","id","active","Show","CreateThing","Item","GoodsID","GoodsNum","Getitem","string","Remark","SetData","itemData","count","priceItem","CostID","CostNumber","changeSlidePro","btn","buy_item","buyCount","buyId","Id","shopIndexId","Send","Hide","event","tempNum","Math","ceil","progress","max","type","updateItemCount","barTrans","getComponent","sliderTrans","setContentSize","width","height","toString","num","typeList","costList","index","length","cost","push","isCanBuy","CheckThingConsumes","console","log","enabled"],"mappings":"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","sourcesContent":["import { Button, Label, Node, RichText, Slider, Toggle, UITransform } from \"cc\";\r\nimport { Session } from \"../../net/Session\";\r\nimport { Panel } from \"../../manager/GameRoot\";\r\nimport { CfgMgr, StdItem, StdShopCommodity, ThingTypeName } from \"../../manager/CfgMgr\";\r\nimport { SShopItem } from \"../player/PlayerStruct\";\r\nimport { MsgPanel } from \"../common/MsgPanel\";\r\nimport { ConsumeItem } from \"../common/ConsumeItem\";\r\nimport { AwardItem } from \"../common/AwardItem\";\r\nimport { ItemUtil } from \"../../utils/ItemUtils\";\r\nimport proto, { Req, Route } from \"../../net/Protocol\";\r\n\r\nexport class ShopBuyPanel extends Panel {\r\n    protected prefab: string = \"prefabs/shop/ShopBuyPanel\";\r\n    private itemDesc: RichText;\r\n    private awardItem: AwardItem;\r\n    private awardBtn: Button;\r\n    private priceConsumeItem: ConsumeItem;\r\n    private numLab: Label;\r\n    private leftBtn: Button;\r\n    private slider: Slider;\r\n    private sliderBar: Node;\r\n    private rightBtn: Button;\r\n    private maxBtn: Button;\r\n    private buyBtn: Button;\r\n    private buyConsumeItem: ConsumeItem;\r\n    private curNum: number;\r\n    private maxNum: number;\r\n    private shopId: number;\r\n    private std: StdShopCommodity;\r\n    private shopData: SShopItem;\r\n    private stdItem: StdItem;\r\n    private item: proto.base.IThing;\r\n    protected onLoad() {\r\n        this.itemDesc = this.find(\"itemDesc\", RichText);\r\n        this.awardItem = this.find(\"AwardItem\").addComponent(AwardItem);\r\n        this.awardBtn = this.find(\"AwardItem\", Button);\r\n        this.priceConsumeItem = this.find(\"priceConsumeItem\").addComponent(ConsumeItem);\r\n        this.numLab = this.find(\"numLab\", Label);\r\n        this.leftBtn = this.find(\"sliderCont/leftBtn\", Button);\r\n        this.slider = this.find(\"sliderCont/slider\", Slider);\r\n        this.sliderBar = this.find(\"sliderCont/slider/sliderBar\");\r\n        this.rightBtn = this.find(\"sliderCont/rightBtn\", Button);\r\n        this.maxBtn = this.find(\"sliderCont/maxBtn\", Button);\r\n        this.buyBtn = this.find(\"buyBtn\", Button);\r\n        this.buyConsumeItem = this.find(\"buyBtn/buyConsumeItem\").addComponent(ConsumeItem);\r\n        this.CloseBy(\"closeBtn\");\r\n        this.CloseBy(\"mask\");\r\n        this.awardBtn.node.on(Button.EventType.CLICK, this.onBtnClick, this);\r\n        this.slider.node.on('slide', this.onSlide, this);\r\n        this.leftBtn.node.on(Button.EventType.CLICK, this.onBtnClick, this);\r\n        this.rightBtn.node.on(Button.EventType.CLICK, this.onBtnClick, this);\r\n        this.maxBtn.node.on(Button.EventType.CLICK, this.onBtnClick, this);\r\n        this.buyBtn.node.on(Button.EventType.CLICK, this.onBtnClick, this);\r\n    }\r\n    protected onShow(): void {\r\n\r\n    }\r\n    protected onHide(...args: any[]): void {\r\n\r\n    }\r\n\r\n    public flush(shopId: number, shopData: SShopItem): void {\r\n        this.shopId = shopId;\r\n        this.shopData = shopData;\r\n        this.std = CfgMgr.GetCommShopItem(this.shopData.id);\r\n        this.buyBtn.node.active = true;\r\n        if (!this.std) {\r\n            MsgPanel.Show(\"缺少配置\")\r\n            this.buyBtn.node.active = false;\r\n            return;\r\n        };\r\n        this.item = ItemUtil.CreateThing(ThingTypeName.Item, this.std.GoodsID[0], this.std.GoodsNum[0]);\r\n        this.stdItem = CfgMgr.Getitem(this.item.item.id);\r\n        this.itemDesc.string = this.stdItem.Remark;\r\n        this.awardItem.SetData({ itemData: this.item });\r\n        this.maxNum = shopData.count;//Math.floor(ItemUtil.GetHaveThingNum(this.std.CostType[0], this.std.CostID[0]) / this.std.CostNumber[0]);\r\n        this.curNum = this.maxNum > 0 ? 1 : 0;\r\n        let priceItem = ItemUtil.CreateThing(ThingTypeName.Item, this.std.CostID[0], this.std.CostNumber[0]);\r\n        this.priceConsumeItem.SetData(priceItem);\r\n        this.changeSlidePro(3);\r\n    }\r\n    onBtnClick(btn: Button) {\r\n        switch (btn) {\r\n            case this.leftBtn:\r\n                this.changeSlidePro(0);\r\n                break;\r\n            case this.rightBtn:\r\n                this.changeSlidePro(1);\r\n                break;\r\n            case this.maxBtn:\r\n                this.changeSlidePro(2);\r\n                break;\r\n            case this.buyBtn:\r\n                // if(this.std.LimitBuyTime > 0 && (this.shopData.expiration_time - PlayerData.GetServerTime() < 1)){\r\n                //     MsgPanel.Show(\"道具已超出时间，无法继续兑换\");\r\n                //     return;\r\n                // }\r\n                let buy_item = new Req[\"shop.protocol.buyitem\"]();\r\n                buy_item.buyCount = this.curNum;\r\n                buy_item.buyId = this.std.Id;\r\n                buy_item.shopIndexId = this.shopId;\r\n                Session.Send(Route[\"shop.protocol.buyitem\"], buy_item);\r\n                this.Hide();\r\n                break;\r\n            case this.awardBtn:\r\n                // ItemTips.Show(this.item);\r\n                break;\r\n        }\r\n    }\r\n    private onSlide(event: Slider) {\r\n        let tempNum: number = Math.ceil(event.progress * this.maxNum);\r\n        if (tempNum > this.maxNum) tempNum = this.maxNum;\r\n        this.curNum = Math.max(tempNum, this.maxNum > 0 ? 1 : 0);\r\n        this.changeSlidePro(3);\r\n    }\r\n    private changeSlidePro(type: number): void {\r\n        if (type == 0) {\r\n            if (this.curNum > 1) {\r\n                this.curNum--;\r\n            }\r\n        } else if (type == 1) {\r\n            if (this.curNum < this.maxNum) {\r\n                this.curNum++;\r\n            }\r\n        } else if (type == 2) {\r\n            if (this.curNum != this.maxNum) {\r\n                this.curNum = this.maxNum;\r\n            }\r\n        }\r\n        this.slider.progress = this.maxNum < 1 ? 0 : this.curNum / this.maxNum;\r\n        this.updateItemCount();\r\n    }\r\n    private updateItemCount(): void {\r\n        let barTrans = this.sliderBar.getComponent(UITransform);\r\n        let sliderTrans = this.slider.getComponent(UITransform);\r\n        barTrans.setContentSize(this.slider.progress * sliderTrans.width, barTrans.height);\r\n        this.numLab.string = this.curNum.toString();\r\n        let num: number = this.curNum * this.std.CostNumber[0];\r\n        let item = ItemUtil.CreateThing(ThingTypeName.Item, this.std.CostID[0], num);\r\n        this.buyConsumeItem.SetData(item);\r\n        let typeList = []\r\n        let costList = []\r\n        for (let index = 0; index < this.std.CostID.length; index++) {\r\n            const type = ThingTypeName.Item;\r\n            const cost = this.std.CostID[index]\r\n            typeList.push(type)\r\n            costList.push(cost)\r\n        }\r\n        let isCanBuy: boolean = this.curNum > 0 && ItemUtil.CheckThingConsumes(typeList, costList, [num], true);\r\n        console.log(this.curNum > 0, typeList, costList, [num], ItemUtil.CheckThingConsumes(typeList, costList, [num]))\r\n        this.buyBtn.enabled = isCanBuy\r\n    }\r\n}"]}