{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/common/CostItem.ts"],"names":["CostItem","Label","path","Sprite","SpriteFrame","CfgMgr","ItemType","folder_item","folder_money","ResMgr","PlayerData","EventMgr","Evt_Item_Change","AsyncComponent","icon","numLab","itemId","itemNum","defNumColor","notNumColor","isShowHave","std","onLoad","node","getChildByPath","getComponent","color","clone","updateShow","onEnable","on","onItemChange","onDisable","off","changeMap","hasLoad","loadSub","undefined","updateNum","SetData","SetItem","itemType","count","url","money","join","Getitem","Icon","spriteFrame","LoadResAbSub","string","toString","Items","res","haveNum","GetItemCount","newColor","fromHEX"],"mappings":"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","sourcesContent":["import { Button, Color, Component, Label, path, Sprite, SpriteFrame } from \"cc\";\r\nimport { CfgMgr, ItemType, StdItem } from \"../../manager/CfgMgr\";\r\nimport { folder_item, folder_money, ResMgr } from \"../../manager/ResMgr\";\r\nimport { PlayerData } from \"../player/PlayerData\";\r\nimport { EventMgr, Evt_Item_Change } from \"../../manager/EventMgr\";\r\nimport { AsyncComponent } from \"./AsyncComponent\";\r\n/**\r\n * 消耗道具展示\r\n */\r\nexport class CostItem extends AsyncComponent {\r\n    private icon: Sprite;\r\n    private numLab: Label;\r\n    private itemId: number;\r\n    private itemNum: number;\r\n    private defNumColor: Color;\r\n    private notNumColor: string;\r\n    private isShowHave: boolean;\r\n    private std: StdItem;\r\n    protected onLoad(): void {\r\n        this.icon = this.node.getChildByPath(\"icon\").getComponent(Sprite);\r\n        this.numLab = this.node.getChildByPath(\"numLab\").getComponent(Label);\r\n        this.defNumColor = this.numLab.color.clone();\r\n        this.updateShow();\r\n        super.onLoad();\r\n    }\r\n\r\n    protected onEnable(): void {\r\n        EventMgr.on(Evt_Item_Change, this.onItemChange, this);\r\n\r\n    }\r\n\r\n    protected onDisable(): void {\r\n        EventMgr.off(Evt_Item_Change, this.onItemChange, this);\r\n\r\n    }\r\n\r\n    private async onItemChange(changeMap: { [key: number]: number }) {\r\n        if (!this.hasLoad) await this.loadSub;\r\n        if (changeMap[this.itemId] != undefined) {\r\n            this.updateNum();\r\n        }\r\n    }\r\n\r\n    SetData(itemId: number, itemNum: number, notNumColor?: string, isShowHave?: boolean): void {\r\n        this.itemId = itemId;\r\n        this.itemNum = itemNum;\r\n        this.notNumColor = notNumColor;\r\n        this.isShowHave = isShowHave;\r\n        this.updateShow();\r\n    }\r\n\r\n    async SetItem(itemType: number, itemId: number, count: number) {\r\n        let url: string;\r\n        if (itemType == ItemType.money) {\r\n            url = path.join(folder_money, \"货币0\" + itemId, \"spriteFrame\");\r\n        } else {\r\n            let std = CfgMgr.Getitem(itemId);\r\n            url = path.join(folder_item, std.Icon, \"spriteFrame\");\r\n        }\r\n        this.icon.spriteFrame = await ResMgr.LoadResAbSub(url, SpriteFrame);\r\n        this.numLab.string = count.toString();\r\n    }\r\n\r\n    private async updateShow() {\r\n        if (!this.hasLoad) await this.loadSub;\r\n        if (!this.std || (this.std && this.itemId != this.std.Items)) {\r\n            this.std = CfgMgr.Getitem(this.itemId);\r\n        }\r\n        if (this.std) {\r\n            ResMgr.LoadResAbSub(path.join(folder_item, this.std.Icon, \"spriteFrame\"), SpriteFrame, (res: SpriteFrame) => {\r\n                this.icon.spriteFrame = res;\r\n            });\r\n            this.updateNum();\r\n        }\r\n    }\r\n\r\n    private updateNum(): void {\r\n        let haveNum: number = PlayerData.GetItemCount(this.itemId);\r\n        this.numLab.string = this.isShowHave ? `${haveNum}/${this.itemNum}` : `${this.itemNum}`;\r\n        if (this.notNumColor) {\r\n            let newColor: Color = this.defNumColor.clone();\r\n            if (haveNum < this.itemNum) {\r\n                newColor = newColor.fromHEX(this.notNumColor);\r\n            }\r\n            this.numLab.color = newColor;\r\n        }\r\n\r\n    }\r\n\r\n}"]}