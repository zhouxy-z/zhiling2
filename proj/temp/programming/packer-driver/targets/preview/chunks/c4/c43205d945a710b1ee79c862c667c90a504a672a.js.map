{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/battle/opOutput/Out_CardTerrainState.ts"],"names":["Out_CardTerrainState","tween","v3","BattleBaseComp","battleDataMgr","battleLogicMgr","start","data","card","toShow","console","error","exit","reset","terraninAreaList","isPlayerA","ownerPlayerId","terraninAreaListA","terraninAreaListB","targetGrid","area","terrainData","instId","grid","gridList","cardData","setData","to","scale","call"],"mappings":";;;yIAUaA,oB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAVEC,MAAAA,K,OAAAA,K;AAAoBC,MAAAA,E,OAAAA,E;;AAE1BC,MAAAA,c,iBAAAA,c;;AACAC,MAAAA,a,iBAAAA,a;;AACAC,MAAAA,c,iBAAAA,c;;;;;;;;;AAGT;AACA;AACA;sCACaL,oB,GAAN,MAAMA,oBAAN;AAAA;AAAA,4CAA6F;AAEtFM,QAAAA,KAAK,GAAS;AACpB,cAAI,KAAKC,IAAL,IAAa,KAAKA,IAAL,CAAUC,IAA3B,EAAiC;AAC7B,iBAAKC,MAAL;AACH,WAFD,MAEO;AACHC,YAAAA,OAAO,CAACC,KAAR,CAAc,gBAAd;AACA,iBAAKC,IAAL;AACH;AACJ;;AAESC,QAAAA,KAAK,GAAS,CAEvB;;AAEOJ,QAAAA,MAAM,GAAS;AACnB,cAAIK,gBAAqC,GAAG;AAAA;AAAA,8CAAcC,SAAd,CAAwB,KAAKC,aAA7B,IAA8C;AAAA;AAAA,gDAAeC,iBAA7D,GAAiF;AAAA;AAAA,gDAAeC,iBAA5I;AACA,cAAIC,UAAJ;;AACA,eAAK,IAAIC,IAAT,IAAiBN,gBAAjB,EAAmC;AAC/B,gBAAIM,IAAI,CAACC,WAAL,CAAiBC,MAAjB,IAA2B,KAAKf,IAAL,CAAUe,MAAzC,EAAiD;AAC7C,mBAAK,IAAIC,IAAT,IAAiBH,IAAI,CAACI,QAAtB,EAAgC;AAC5B,oBAAID,IAAI,CAACE,QAAL,IAAiBF,IAAI,CAACE,QAAL,CAAcH,MAAd,IAAwB,KAAKf,IAAL,CAAUC,IAAV,CAAec,MAA5D,EAAoE;AAChEC,kBAAAA,IAAI,CAACG,OAAL,CAAa,KAAKnB,IAAL,CAAUC,IAAvB;AACAW,kBAAAA,UAAU,GAAGI,IAAb;AACA;AACH;AACJ;AACJ;;AACD,gBAAIJ,UAAJ,EAAgB;AACnB;;AACD,cAAIA,UAAJ,EAAgB;AACZlB,YAAAA,KAAK,CAACkB,UAAU,CAACX,IAAZ,CAAL,CACCmB,EADD,CACI,GADJ,EACS;AAAEC,cAAAA,KAAK,EAAE1B,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,CAAX;AAAX,aADT,EAECyB,EAFD,CAEI,GAFJ,EAES;AAAEC,cAAAA,KAAK,EAAE1B,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAAX,aAFT,EAGC2B,IAHD,CAGM,MAAI;AACN,mBAAKjB,IAAL;AACH,aALD,EAMCN,KAND;AAOH,WARD,MAQO;AACH,iBAAKM,IAAL;AACH;AACJ;;AAzC+F,O","sourcesContent":["import { Node, tween, UITransform, v3, Vec3 } from \"cc\";\r\nimport { base } from \"../../../net/proto/proto\";\r\nimport { BattleBaseComp } from \"../BattleBaseComp\";\r\nimport { battleDataMgr } from \"../BattleDataMgr\";\r\nimport { battleLogicMgr } from \"../BattleLogicMgr\";\r\nimport { BattleCardGrid } from \"../BattleCardGrid\";\r\nimport { BattleTerrainArea } from \"../BattleTerrainArea\";\r\n/**\r\n * 卡牌在地形上的状态改变（由盖牌到显示）\r\n */\r\nexport class Out_CardTerrainState extends BattleBaseComp<base.IBattleRoomOpOutput_CardTerrainState> {\r\n    \r\n    protected start(): void {\r\n        if (this.data && this.data.card) {\r\n            this.toShow();\r\n        } else {\r\n            console.error(\"卡牌在地形上改变状态数据为空\");\r\n            this.exit();\r\n        }\r\n    }\r\n\r\n    protected reset(): void {\r\n        \r\n    }\r\n\r\n    private toShow(): void {\r\n        let terraninAreaList: BattleTerrainArea[] = battleDataMgr.isPlayerA(this.ownerPlayerId) ? battleLogicMgr.terraninAreaListA : battleLogicMgr.terraninAreaListB;\r\n        let targetGrid: BattleCardGrid;\r\n        for (let area of terraninAreaList) {\r\n            if (area.terrainData.instId == this.data.instId) {\r\n                for (let grid of area.gridList) {\r\n                    if (grid.cardData && grid.cardData.instId == this.data.card.instId) {\r\n                        grid.setData(this.data.card);\r\n                        targetGrid = grid;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (targetGrid) break;\r\n        }\r\n        if (targetGrid) {\r\n            tween(targetGrid.card)\r\n            .to(0.5, { scale: v3(1.5, 1.5, 0) })\r\n            .to(0.5, { scale: v3(1, 1, 0) })\r\n            .call(()=>{\r\n                this.exit();\r\n            })\r\n            .start();\r\n        } else {\r\n            this.exit();\r\n        }\r\n    }\r\n    \r\n}"]}