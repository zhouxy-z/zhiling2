{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/shop/ShopLuckyBuyPanel.ts"],"names":["ShopLuckyBuyPanel","Button","RichText","Panel","ThingTypeName","ItemUtil","Session","Req","Route","prefab","tipsLab","buyBtn","buyConsumeItem","std","offsetCont","count","newItemNum","onLoad","find","getComponent","CloseBy","node","on","EventType","CLICK","onBtnBuyClick","onShow","onHide","flush","shopStd","ConvertToConsumeCost","val","push","consume","CreateThing","Item","ConvertToConsumeItemId","SetData","btn","CheckThingConsumes","shop_luck","convertCount","shopIndexId","shopId","skipFree","Send","Hide"],"mappings":"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","sourcesContent":["import { Button, RichText } from \"cc\";\r\nimport { Panel } from \"../../manager/GameRoot\";\r\nimport { ConsumeItem } from \"../common/ConsumeItem\";\r\nimport { StdLuckyShop, ThingTypeName } from \"../../manager/CfgMgr\";\r\nimport { ItemUtil } from \"../../utils/ItemUtils\";\r\nimport { Session } from \"../../net/Session\";\r\nimport { Req, Route } from \"../../net/Protocol\";\r\n\r\nexport class ShopLuckyBuyPanel extends Panel {\r\n    protected prefab: string = \"prefabs/shop/ShopLuckyBuyPanel\";\r\n    private tipsLab:RichText;\r\n    private buyBtn:Button;\r\n    private buyConsumeItem:ConsumeItem;\r\n    private std:StdLuckyShop;\r\n    private offsetCont:number;\r\n    private count:number;\r\n    private newItemNum:number[];\r\n    protected onLoad() {\r\n        this.tipsLab = this.find(\"tipsLab\").getComponent(RichText);\r\n        this.buyBtn = this.find(\"buyBtn\", Button);\r\n        // this.buyConsumeItem = this.find(\"buyBtn/buyConsumeItem\").addComponent(ConsumeItem);\r\n        this.CloseBy(\"closeBtn\");\r\n        this.CloseBy(\"mask\");\r\n        this.buyBtn.node.on(Button.EventType.CLICK, this.onBtnBuyClick, this);\r\n    }\r\n    protected onShow(): void {\r\n        \r\n    }\r\n    protected onHide(...args: any[]): void {\r\n        \r\n    }\r\n    \r\n    public flush(std, count:number, offsetCont:number): void {\r\n        this.std = std;\r\n        this.count = count;\r\n        this.offsetCont = offsetCont;\r\n        this.newItemNum = [];\r\n        if(this.std.shopStd.ConvertToConsumeCost){\r\n            for (const val of this.std.shopStd.ConvertToConsumeCost) {\r\n                this.newItemNum.push(val * this.offsetCont);\r\n            }\r\n        }\r\n        // let item = ItemUtil.CreateThing(ThingTypeName.Item, this.std.shopStd.ConsumeX1ItemId[0], this.std.shopStd.ConsumeX1Cost[0]);\r\n        let consume = ItemUtil.CreateThing(ThingTypeName.Item, this.std.shopStd.ConvertToConsumeItemId[0], this.newItemNum[0]);\r\n        // let tipsStr:string = `<color=#AD4800><size=48>${item.resData.name}</size></color>数量不足\\n是否消耗<color=#36B13A>${consume.resData.count + consume.resData.name}</color>兑换<color=#AD4800><size=48>${this.offsetCont}个${item.resData.name}</size></color>`;\r\n        // this.tipsLab.string = tipsStr;\r\n        \r\n        this.buyConsumeItem.SetData(consume);\r\n    }\r\n    onBtnBuyClick(btn: Button) {\r\n        if(!ItemUtil.CheckThingConsumes(null, this.std.shopStd.ConvertToConsumeItemId, this.newItemNum, true)){\r\n            return;\r\n        }\r\n        let shop_luck = new Req[\"shop.protocol.dolucky\"]();\r\n        shop_luck.convertCount = this.offsetCont;\r\n        shop_luck.count = this.count;\r\n        shop_luck.shopIndexId = this.std.shopId;\r\n        shop_luck.skipFree = false;\r\n        Session.Send(Route[\"shop.protocol.dolucky\"],shop_luck);\r\n        this.Hide();\r\n    }\r\n    \r\n}"]}