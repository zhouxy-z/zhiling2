{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/utils/ComboBox.ts"],"names":["_decorator","Component","EditBox","Input","Label","Node","UITransform","AutoScroller","Convert","FindParent","GameSet","ccclass","property","ComboBox","setHead","datas","layout","initx","inity","scaleX","scaleY","complete","hasLoad","$loadSub","onLoad","scroller","node","parent","input","on","EventType","TOUCH_END","onOpen","onSelect","p","position","x","y","open","getScale","size","getComponent","contentSize","h","height","setContentSize","width","PARENT_CHANGED","onHide","onRoot","e","console","log","target","name","loadSub","thisObj","Promise","resolve","reject","start","update","deltaTime","Init","updateItem","craeteItem","UpdateList","SetHandle","Select","index","data","string","label","value","HideList","UpdateDatas","undefined","emit","onInput","editbox","active","setScale","onShow","root","GetUICanvas","addChild","setPosition","off","hideScroller"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,O,OAAAA,O;AAAkCC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;AAAkBC,MAAAA,W,OAAAA,W;;AACzFC,MAAAA,Y,iBAAAA,Y;;AACAC,MAAAA,O,iBAAAA,O;AAASC,MAAAA,U,iBAAAA,U;;AACTC,MAAAA,O,iBAAAA,O;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBZ,U;;0BAGjBa,Q,WADZF,OAAO,CAAC,UAAD,C,UAGHC,QAAQ,CAACP,IAAD,C,UAGRO,QAAQ,CAACP,IAAD,C,UAGRO,QAAQ;AAAA;AAAA,uC,2BATb,MACaC,QADb,SAC8BZ,SAD9B,CACwC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAW5Ba,OAX4B;AAAA,eAY5BC,KAZ4B,GAYb,EAZa;AAAA,eAa5BC,MAb4B;AAAA,eAc5BC,KAd4B;AAAA,eAe5BC,KAf4B;AAAA,eAgB5BC,MAhB4B;AAAA,eAiB5BC,MAjB4B;AAAA,eA6C1BC,QA7C0B;AAAA,eA8C1BC,OA9C0B,GA8ChB,KA9CgB;AAAA,eA+C1BC,QA/C0B;AAAA;;AAmB1BC,QAAAA,MAAM,GAAS;AAAA;;AACrB,eAAKR,MAAL,GAAc,KAAKS,QAAL,CAAcC,IAAd,CAAmBC,MAAjC;AACA,eAAKC,KAAL,CAAWC,EAAX,CAAc1B,KAAK,CAAC2B,SAAN,CAAgBC,SAA9B,EAAyC,KAAKC,MAA9C,EAAsD,IAAtD;AACA,eAAKP,QAAL,CAAcC,IAAd,CAAmBG,EAAnB,CAAsB,QAAtB,EAAgC,KAAKI,QAArC,EAA+C,IAA/C,EAHqB,CAIrB;;AACA,cAAIC,CAAC,GAAG,KAAKT,QAAL,CAAcC,IAAd,CAAmBS,QAA3B;AACA,eAAKlB,KAAL,GAAaiB,CAAC,CAACE,CAAf;AACA,eAAKlB,KAAL,GAAagB,CAAC,CAACG,CAAf;AACA,eAAKlB,MAAL,GAAc,KAAKmB,IAAL,CAAUC,QAAV,GAAqBH,CAAnC;AACA,eAAKhB,MAAL,GAAc,KAAKkB,IAAL,CAAUC,QAAV,GAAqBF,CAAnC;AAEA,cAAIG,IAAI,GAAG,KAAKC,YAAL,CAAkBnC,WAAlB,EAA+BoC,WAA1C;AACA,cAAIC,CAAC,GAAG,KAAKlB,QAAL,CAAcC,IAAd,CAAmBe,YAAnB,CAAgCnC,WAAhC,EAA6CoC,WAA7C,CAAyDE,MAAjE;AACA,eAAKnB,QAAL,CAAcC,IAAd,CAAmBe,YAAnB,CAAgCnC,WAAhC,EAA6CuC,cAA7C,CAA4DL,IAAI,CAACM,KAAjE,EAAwEH,CAAxE;AACA,eAAKjB,IAAL,CAAUG,EAAV,CAAaxB,IAAI,CAACyB,SAAL,CAAeiB,cAA5B,EAA4C,KAAKC,MAAjD,EAAyD,IAAzD;AACA,eAAK1B,OAAL,GAAe,IAAf;AACA,iCAAKD,QAAL;AACH;;AAES4B,QAAAA,MAAM,CAACC,CAAD,EAAgB;AAC5BC,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,CAAC,CAACG,MAAF,CAASC,IAA/B;;AACA,cAAI,CAAC;AAAA;AAAA,wCAAWJ,CAAC,CAACG,MAAb,EAAqB,KAAK3B,IAA1B,CAAL,EAAsC;AAClC,iBAAKsB,MAAL;AACH;AACJ;;AAKoB,YAAPO,OAAO,GAAG;AACpB,cAAI,KAAKhC,QAAT,EAAmB,OAAO,KAAKA,QAAZ;AACnB,cAAIiC,OAAO,GAAG,IAAd;AACA,eAAKjC,QAAL,GAAgB,IAAIkC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7CH,YAAAA,OAAO,CAACnC,QAAR,GAAmBqC,OAAnB;AACH,WAFe,CAAhB;AAGA,iBAAO,KAAKnC,QAAZ;AACH;;AAEDqC,QAAAA,KAAK,GAAG,CAEP;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;AAED;AACJ;AACA;AACA;AACA;;;AACUC,QAAAA,IAAI,CAAChD,KAAD,EAAeiD,UAAf,EAA4DlD,OAA5D,EAAuGmD,UAAvG,EAAgI;AAAA;;AAAA;AACtI,gBAAI,CAAC,KAAI,CAAC3C,OAAV,EAAmB,MAAM,KAAI,CAACiC,OAAX;AACnB,YAAA,KAAI,CAACzC,OAAL,GAAeA,OAAf;;AACA,YAAA,KAAI,CAACoD,UAAL,CAAgBnD,KAAhB;;AACA,YAAA,KAAI,CAACU,QAAL,CAAc0C,SAAd,CAAwBH,UAAxB,EAAoCC,UAApC;AAJsI;AAKzI;;AAEDG,QAAAA,MAAM,CAACC,KAAD,EAAgB;AAClB,cAAI,CAAC,KAAKzC,KAAV,EAAiB;AACjB,cAAI0C,IAAI,GAAG,KAAKvD,KAAL,CAAWsD,KAAX,CAAX;;AACA,cAAI,KAAKvD,OAAT,EAAkB;AACd,iBAAKA,OAAL,CAAa,KAAKc,KAAlB,EAAyB0C,IAAzB;AACH,WAFD,MAEO;AACH,iBAAK7C,QAAL,CAAcuC,UAAd,CAAyB,KAAKpC,KAA9B,EAAqC0C,IAArC,EAA2CD,KAA3C;AACH;;AACD,iBAAOC,IAAP;AACH;;AAES,YAANC,MAAM,GAAG;AACT,cAAI,CAAC,KAAK3C,KAAV,EAAiB,OAAO,EAAP;AACjB,cAAIA,KAAK,GAAG,KAAKA,KAAL,CAAWa,YAAX,CAAwBvC,OAAxB,CAAZ;AACA,cAAI0B,KAAJ,EAAW,OAAOA,KAAK,CAAC2C,MAAb;AACX,cAAIC,KAAK,GAAG,KAAK5C,KAAL,CAAWa,YAAX,CAAwBrC,KAAxB,CAAZ;AACA,cAAIoE,KAAJ,EAAW,OAAOA,KAAK,CAACD,MAAb;AACd;;AACS,YAANA,MAAM,CAACE,KAAD,EAAgB;AACtB,cAAI,CAAC,KAAK7C,KAAV,EAAiB;AACjB,cAAIA,KAAK,GAAG,KAAKA,KAAL,CAAWa,YAAX,CAAwBvC,OAAxB,CAAZ;AACA,cAAI0B,KAAJ,EAAWA,KAAK,CAAC2C,MAAN,GAAeE,KAAf;AACX,cAAID,KAAK,GAAG,KAAK5C,KAAL,CAAWa,YAAX,CAAwBrC,KAAxB,CAAZ;AACA,cAAIoE,KAAJ,EAAWA,KAAK,CAACD,MAAN,GAAeE,KAAf;AACd;;AAEKC,QAAAA,QAAQ,GAAG;AAAA;;AAAA;AACb,gBAAI,CAAC,MAAI,CAACpD,OAAV,EAAmB,MAAM,MAAI,CAACiC,OAAX;;AACnB,YAAA,MAAI,CAACP,MAAL;AAFa;AAGhB;;AAEKkB,QAAAA,UAAU,CAACnD,KAAD,EAAe;AAAA;;AAAA;AAC3B,gBAAI,CAAC,MAAI,CAACO,OAAV,EAAmB,MAAM,MAAI,CAACiC,OAAX;AACnB,YAAA,MAAI,CAACxC,KAAL,GAAaA,KAAb;;AACA,YAAA,MAAI,CAACU,QAAL,CAAckD,WAAd,CAA0B5D,KAA1B;AAH2B;AAI9B;;AAEOkB,QAAAA,QAAQ,CAACoC,KAAD,EAAgB;AAC5B,eAAKrB,MAAL;AACA,cAAIsB,IAAI,GAAG,KAAKF,MAAL,CAAYC,KAAZ,CAAX;AACA,cAAIC,IAAI,IAAI,EAAR,IAAcA,IAAI,IAAIM,SAA1B,EAAqC;AACrC,eAAKlD,IAAL,CAAUmD,IAAV,CAAe,QAAf,EAAyBP,IAAzB;AACH;;AACOQ,QAAAA,OAAO,CAACC,OAAD,EAAmB;AAC9B,cAAIN,KAAK,GAAGM,OAAO,CAACR,MAApB;AACA,cAAIE,KAAK,IAAI,EAAT,IAAeA,KAAK,IAAIG,SAA5B,EAAuC;AACvC,eAAKlD,IAAL,CAAUmD,IAAV,CAAe,QAAf,EAAyBJ,KAAzB;AACH;;AACOzC,QAAAA,MAAM,CAACkB,CAAD,EAAgB;AAC1B,cAAI,KAAKzB,QAAL,CAAcC,IAAd,CAAmBsD,MAAvB,EAA+B;AAC3B,iBAAK1C,IAAL,CAAU2C,QAAV,CAAmB,KAAK9D,MAAxB,EAAgC,KAAKC,MAArC;AACA,iBAAK4B,MAAL;AACH,WAHD,MAGO;AACH,iBAAKV,IAAL,CAAU2C,QAAV,CAAmB,KAAK9D,MAAxB,EAAgC,CAAC,KAAKC,MAAtC;AACA,iBAAK8D,MAAL;AACA,iBAAKzD,QAAL,CAAckD,WAAd,CAA0B,KAAK5D,KAA/B;AACH;;AACD,eAAKW,IAAL,CAAUmD,IAAV,CAAe,MAAf;AACH;;AAEOK,QAAAA,MAAM,GAAG;AACb,cAAIC,IAAI,GAAG,KAAKzD,IAAL,CAAUC,MAArB;AACA,cAAIO,CAAC,GAAG,KAAKT,QAAL,CAAcC,IAAd,CAAmBS,QAA3B;AACA;AAAA;AAAA,kCAAQiD,WAAR,GAAsBvD,EAAtB,CAAyB1B,KAAK,CAAC2B,SAAN,CAAgBC,SAAzC,EAAoD,KAAKkB,MAAzD,EAAiE,IAAjE,EAAuE,IAAvE;AACA,cAAI,CAACb,CAAD,EAAIC,CAAJ,IAAS;AAAA;AAAA,kCAAQ,KAAKpB,KAAb,EAAoB,KAAKC,KAAzB,EAAgC,KAAKF,MAArC,EAA6CmE,IAA7C,CAAb;AACA,eAAK1D,QAAL,CAAcC,IAAd,CAAmBsD,MAAnB,GAA4B,IAA5B;AACAG,UAAAA,IAAI,CAACE,QAAL,CAAc,KAAK5D,QAAL,CAAcC,IAA5B;AACA,eAAKD,QAAL,CAAcC,IAAd,CAAmB4D,WAAnB,CAA+BlD,CAA/B,EAAkCC,CAAlC;AACH;;AACOW,QAAAA,MAAM,GAAG;AACb;AAAA;AAAA,kCAAQoC,WAAR,GAAsBG,GAAtB,CAA0BpF,KAAK,CAAC2B,SAAN,CAAgBC,SAA1C,EAAqD,KAAKkB,MAA1D,EAAkE,IAAlE,EAAwE,IAAxE;AACA,eAAKX,IAAL,CAAU2C,QAAV,CAAmB,KAAK9D,MAAxB,EAAgC,KAAKC,MAArC;AACA,cAAI+D,IAAI,GAAG,KAAKzD,IAAL,CAAUC,MAArB;AACA,cAAIO,CAAC,GAAG,KAAKT,QAAL,CAAcC,IAAd,CAAmBS,QAA3B;AACA,eAAKnB,MAAL,CAAYqE,QAAZ,CAAqB,KAAK5D,QAAL,CAAcC,IAAnC;AACA,eAAKD,QAAL,CAAcC,IAAd,CAAmB4D,WAAnB,CAA+B,KAAKrE,KAApC,EAA2C,KAAKC,KAAhD;AACA,eAAKO,QAAL,CAAcC,IAAd,CAAmBsD,MAAnB,GAA4B,KAA5B;AACH;;AAEDQ,QAAAA,YAAY,GAAG;AACX,eAAKlD,IAAL,CAAU2C,QAAV,CAAmB,KAAK9D,MAAxB,EAAgC,KAAKC,MAArC;AACA,cAAI+D,IAAI,GAAG,KAAK1D,QAAL,CAAcC,IAAd,CAAmBC,MAA9B;AACA,cAAIO,CAAC,GAAG,KAAKT,QAAL,CAAcC,IAAd,CAAmBS,QAA3B;AACA,cAAI,CAACC,CAAD,EAAIC,CAAJ,IAAS;AAAA;AAAA,kCAAQH,CAAC,CAACE,CAAV,EAAaF,CAAC,CAACG,CAAf,EAAkB8C,IAAlB,EAAwB,KAAKnE,MAA7B,CAAb;AACA,eAAKA,MAAL,CAAYqE,QAAZ,CAAqB,KAAK5D,QAAL,CAAcC,IAAnC;AACA,eAAKD,QAAL,CAAcC,IAAd,CAAmB4D,WAAnB,CAA+BlD,CAA/B,EAAkCC,CAAlC;AACA,eAAKZ,QAAL,CAAcC,IAAd,CAAmBsD,MAAnB,GAA4B,KAA5B;AACH;;AApKmC,O","sourcesContent":["import { _decorator, Component, EditBox, EventTouch, find, input, Input, Label, Node, ScrollView, UITransform } from 'cc';\r\nimport { AutoScroller } from './AutoScroller';\r\nimport { Convert, FindParent, getRoot } from './Utils';\r\nimport { GameSet } from '../module/GameSet';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('ComboBox')\r\nexport class ComboBox extends Component {\r\n\r\n    @property(Node)\r\n    private input: Node;\r\n\r\n    @property(Node)\r\n    private open: Node;\r\n\r\n    @property(AutoScroller)\r\n    private scroller: AutoScroller;\r\n\r\n    private setHead: Function;\r\n    private datas: any[] = [];\r\n    private layout: Node;\r\n    private initx: number;\r\n    private inity: number;\r\n    private scaleX: number;\r\n    private scaleY: number;\r\n\r\n    protected onLoad(): void {\r\n        this.layout = this.scroller.node.parent;\r\n        this.input.on(Input.EventType.TOUCH_END, this.onOpen, this);\r\n        this.scroller.node.on(\"select\", this.onSelect, this);\r\n        // this.input.on(\"editing-did-ended\", this.onInput, this);\r\n        let p = this.scroller.node.position;\r\n        this.initx = p.x;\r\n        this.inity = p.y;\r\n        this.scaleX = this.open.getScale().x;\r\n        this.scaleY = this.open.getScale().y;\r\n\r\n        let size = this.getComponent(UITransform).contentSize;\r\n        let h = this.scroller.node.getComponent(UITransform).contentSize.height;\r\n        this.scroller.node.getComponent(UITransform).setContentSize(size.width, h);\r\n        this.node.on(Node.EventType.PARENT_CHANGED, this.onHide, this);\r\n        this.hasLoad = true;\r\n        this.complete?.();\r\n    }\r\n\r\n    protected onRoot(e: EventTouch) {\r\n        console.log(\"onRoot\", e.target.name);\r\n        if (!FindParent(e.target, this.node)) {\r\n            this.onHide();\r\n        }\r\n    }\r\n\r\n    protected complete: Function;\r\n    protected hasLoad = false;\r\n    protected $loadSub: Promise<any>;\r\n    protected get loadSub() {\r\n        if (this.$loadSub) return this.$loadSub;\r\n        let thisObj = this;\r\n        this.$loadSub = new Promise((resolve, reject) => {\r\n            thisObj.complete = resolve;\r\n        });\r\n        return this.$loadSub;\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n\r\n    /**\r\n     * 更新\r\n     * @param updateItem \r\n     * @param craeteItem \r\n     */\r\n    async Init(datas: any[], updateItem: (item: Node, data: any) => void, setHead?: (item: Node, data: any) => void, craeteItem?: () => Node) {\r\n        if (!this.hasLoad) await this.loadSub;\r\n        this.setHead = setHead;\r\n        this.UpdateList(datas);\r\n        this.scroller.SetHandle(updateItem, craeteItem);\r\n    }\r\n\r\n    Select(index: number) {\r\n        if (!this.input) return;\r\n        let data = this.datas[index];\r\n        if (this.setHead) {\r\n            this.setHead(this.input, data);\r\n        } else {\r\n            this.scroller.updateItem(this.input, data, index);\r\n        }\r\n        return data;\r\n    }\r\n\r\n    get string() {\r\n        if (!this.input) return \"\";\r\n        let input = this.input.getComponent(EditBox);\r\n        if (input) return input.string;\r\n        let label = this.input.getComponent(Label);\r\n        if (label) return label.string;\r\n    }\r\n    set string(value: string) {\r\n        if (!this.input) return;\r\n        let input = this.input.getComponent(EditBox);\r\n        if (input) input.string = value;\r\n        let label = this.input.getComponent(Label);\r\n        if (label) label.string = value;\r\n    }\r\n\r\n    async HideList() {\r\n        if (!this.hasLoad) await this.loadSub;\r\n        this.onHide();\r\n    }\r\n\r\n    async UpdateList(datas: any[]) {\r\n        if (!this.hasLoad) await this.loadSub;\r\n        this.datas = datas;\r\n        this.scroller.UpdateDatas(datas);\r\n    }\r\n\r\n    private onSelect(index: number) {\r\n        this.onHide();\r\n        let data = this.Select(index);\r\n        if (data == \"\" || data == undefined) return;\r\n        this.node.emit(\"select\", data);\r\n    }\r\n    private onInput(editbox: EditBox) {\r\n        let value = editbox.string;\r\n        if (value == \"\" || value == undefined) return;\r\n        this.node.emit(\"select\", value);\r\n    }\r\n    private onOpen(e: EventTouch) {\r\n        if (this.scroller.node.active) {\r\n            this.open.setScale(this.scaleX, this.scaleY);\r\n            this.onHide();\r\n        } else {\r\n            this.open.setScale(this.scaleX, -this.scaleY);\r\n            this.onShow();\r\n            this.scroller.UpdateDatas(this.datas);\r\n        }\r\n        this.node.emit(\"open\");\r\n    }\r\n\r\n    private onShow() {\r\n        let root = this.node.parent;\r\n        let p = this.scroller.node.position;\r\n        GameSet.GetUICanvas().on(Input.EventType.TOUCH_END, this.onRoot, this, true);\r\n        let [x, y] = Convert(this.initx, this.inity, this.layout, root);\r\n        this.scroller.node.active = true;\r\n        root.addChild(this.scroller.node);\r\n        this.scroller.node.setPosition(x, y);\r\n    }\r\n    private onHide() {\r\n        GameSet.GetUICanvas().off(Input.EventType.TOUCH_END, this.onRoot, this, true);\r\n        this.open.setScale(this.scaleX, this.scaleY);\r\n        let root = this.node.parent;\r\n        let p = this.scroller.node.position;\r\n        this.layout.addChild(this.scroller.node);\r\n        this.scroller.node.setPosition(this.initx, this.inity);\r\n        this.scroller.node.active = false;\r\n    }\r\n\r\n    hideScroller() {\r\n        this.open.setScale(this.scaleX, this.scaleY);\r\n        let root = this.scroller.node.parent;\r\n        let p = this.scroller.node.position;\r\n        let [x, y] = Convert(p.x, p.y, root, this.layout);\r\n        this.layout.addChild(this.scroller.node);\r\n        this.scroller.node.setPosition(x, y);\r\n        this.scroller.node.active = false;\r\n    }\r\n}\r\n\r\n\r\n"]}