{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/trade/SortPanel.ts"],"names":["SortPanel","Input","Label","Layout","Toggle","instantiate","Panel","AutoScroller","CfgMgr","ThingTypeName","SQuerySortCardType","SQuerySortItemType","TradePanel","prefab","sortLayout","cancelSortBtn","cancelFiltrateBtn","filtrateScroll","nav","clone_filtrate_item","clone_sort_item","old_sort_type","old_searchCardData","sortItemData","id","PriceDow","string","PriceUp","TotalPriceDown","TotalPriceUp","CountDown","CountUp","sortCardData","CardRarityDown","CardRarityUp","QualityDown","QualityUp","ins","$instance","onLoad","CloseBy","find","SetHandle","updateItem","bind","on","EventType","TOUCH_END","onRemoveFiltrate","onRemoveSort","children","concat","btn","off","onPage","onShow","flush","type","sort_type","searchCardData","data","active","Item","getComponent","isChecked","node","initCardSerchData","clone_item","removeAllChildren","iterator","_item","filtrat_name","getChildByPath","item_toggle","addComponent","addChild","t","index","target","getSiblingIndex","selections","Get","type_list","max_group","Group","cfg","push","UpdateDatas","item","title_name","layout","getChildByName","GroupName","TypeName","name","is_show","card_rarity","Type","quality","i","length","item_element","content","element","item_layout","onHide","select_filtrate_list","is_new","is_select1","is_select2","select_sort_str","onFiltrateOrSort","console","log"],"mappings":"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","sourcesContent":["import { EventTouch, Input, Label, Layout, Node, Toggle, instantiate} from \"cc\";\r\nimport { Panel } from \"../../manager/GameRoot\";\r\nimport { AutoScroller } from \"../../component/AutoScroller\";\r\nimport { CardQuality, CfgMgr, StdMarketChoose, ThingTypeName } from \"../../manager/CfgMgr\";\r\nimport { SOrderType, SQuerySortCardType, SQuerySortItemType } from \"../player/PlayerStruct\";\r\nimport { TradePanel } from \"./TradePanel\";\r\n\r\nexport class SortPanel extends Panel {\r\n    protected prefab: string = \"prefabs/Trade/SortPanel\";\r\n\r\n    static get ins(): SortPanel { return this.$instance; }\r\n    private sortLayout: Layout;\r\n    private cancelSortBtn: Node;\r\n    private cancelFiltrateBtn: Node;\r\n    private filtrateScroll: AutoScroller;\r\n    private nav: Node[];\r\n    private clone_filtrate_item:Node;\r\n    private clone_sort_item:Node\r\n\r\n    private old_sort_type:string;\r\n    private old_searchCardData:{card_rarity:number, quality:number};\r\n   \r\n\r\n    private sortItemData = [\r\n        { id: SQuerySortItemType.PriceDow, string: `消耗从高到低` },\r\n        { id: SQuerySortItemType.PriceUp, string: `消耗从低到高` },\r\n        { id: SQuerySortItemType.TotalPriceDown, string: `消耗总数从高到低` },\r\n        { id: SQuerySortItemType.TotalPriceUp, string: `消耗总数从低到高` },\r\n        { id: SQuerySortItemType.CountDown, string: `数量从高到低` },\r\n        { id: SQuerySortItemType.CountUp, string: `数量从低到高` },\r\n    ]\r\n\r\n    private sortCardData = [\r\n        { id: SQuerySortCardType.PriceDow, string: `消耗从高到低` },\r\n        { id: SQuerySortCardType.PriceUp, string: `消耗从低到高` },\r\n        { id: SQuerySortCardType.CardRarityDown, string: `稀有度从高到低` },\r\n        { id: SQuerySortCardType.CardRarityUp, string: `稀有度从低到高` },\r\n        { id: SQuerySortCardType.QualityDown, string: `品质从高到低` },\r\n        { id: SQuerySortCardType.QualityUp, string: `品质从低到高` },\r\n    ]\r\n\r\n\r\n\r\n\r\n    protected onLoad() {\r\n        this.CloseBy(\"mask\");\r\n        this.CloseBy(\"panel/closeBtn\");\r\n        this.filtrateScroll = this.find(`panel/filtrateScroll`,AutoScroller);\r\n        this.filtrateScroll.SetHandle(this.updateItem.bind(this))\r\n        this.sortLayout = this.find(`panel/sortLayout`,Layout)\r\n        this.cancelFiltrateBtn = this.find(`panel/cancelFiltrateBtn`)\r\n        this.cancelFiltrateBtn.on(Input.EventType.TOUCH_END, this.onRemoveFiltrate, this)\r\n        this.cancelSortBtn = this.find(`panel/cancelSortBtn`)\r\n        this.cancelSortBtn.on(Input.EventType.TOUCH_END, this.onRemoveSort, this)\r\n\r\n        this.clone_filtrate_item =  this.find(\"panel/filtrateScroll/view/content/type_node/item_layout/item\");\r\n\r\n        this.nav = this.find(\"panel/nav\").children.concat();\r\n        for (let btn of this.nav) {\r\n            btn.off('toggle', this.onPage, this);\r\n            btn.on('toggle', this.onPage, this);\r\n        }\r\n       \r\n    }\r\n\r\n    protected onShow(): void {\r\n\r\n    }\r\n\r\n    async flush(type:ThingTypeName, sort_type:string, searchCardData:{card_rarity:number, quality:number}) {\r\n        this.old_sort_type = sort_type;\r\n        this.old_searchCardData = searchCardData;\r\n        let data;\r\n        this.nav[0].active = false\r\n        if(type == ThingTypeName.Item){       \r\n            data = this.sortItemData;\r\n            this.nav[1].getComponent(Toggle).isChecked = true;\r\n        }else{\r\n            this.sortLayout.node.active = false\r\n            this.nav[0].active = true\r\n            data = this.sortCardData;\r\n            this.initCardSerchData();\r\n            this.nav[0].getComponent(Toggle).isChecked = true;\r\n        }\r\n\r\n        let clone_item =  this.sortLayout.node.children[0];\r\n        this.sortLayout.node.removeAllChildren();\r\n        for (const iterator of data) {\r\n            let _item = instantiate(clone_item);\r\n            let filtrat_name = _item.getChildByPath(\"name\").getComponent(Label);\r\n            filtrat_name.string = iterator.string;\r\n            _item[\"data\"] = iterator;\r\n            if(iterator.id == this.old_sort_type){\r\n                let item_toggle =  _item.getComponent(Toggle);\r\n                if(!item_toggle) item_toggle = _item.addComponent(Toggle);\r\n                item_toggle.isChecked = true;\r\n            }\r\n            this.sortLayout.node.addChild(_item) \r\n        }\r\n    }\r\n\r\n    private onPage(t: Toggle){\r\n        let index = t.target.getSiblingIndex();\r\n        this.sortLayout.node.active = false\r\n        this.filtrateScroll.node.active = false;\r\n        this.cancelSortBtn.active = false;\r\n        this.cancelFiltrateBtn.active = false;\r\n        if(index == 0){\r\n            this.filtrateScroll.node.active = true;\r\n            this.cancelFiltrateBtn.active = true;\r\n        }else{\r\n            this.sortLayout.node.active = true;\r\n            this.cancelSortBtn.active = true;\r\n        }\r\n    }\r\n\r\n    /**初始化筛选排序数据 */\r\n    private initCardSerchData() {\r\n        let selections: StdMarketChoose[] = CfgMgr.Get(\"market_choose\");\r\n        //获取最大组数\r\n        let type_list = []\r\n        let max_group = 0;\r\n        for (const iterator of selections) {\r\n            if(iterator.Group > max_group){\r\n                max_group = iterator.Group\r\n                let cfg: StdMarketChoose[] = []\r\n                type_list.push(cfg)\r\n            }\r\n        }\r\n        for (const iterator of selections) {\r\n            type_list[iterator.Group - 1].push(iterator)\r\n        }\r\n        this.filtrateScroll.UpdateDatas(type_list)\r\n    }\r\n\r\n\r\n    private updateItem(item: Node, data:StdMarketChoose[]) {\r\n        let title_name = item.getChildByPath(\"title_bg/title\").getComponent(Label);\r\n        let layout = item.getChildByName(\"item_layout\");       \r\n        title_name.string = data[0].GroupName;\r\n        layout.removeAllChildren();\r\n        for (const iterator of data) {\r\n            let _item = instantiate(this.clone_filtrate_item);\r\n            let filtrat_name = _item.getChildByPath(\"name\").getComponent(Label);\r\n            filtrat_name.string = iterator.TypeName;\r\n            _item.name = iterator.TypeName\r\n            _item[\"data\"] = iterator;\r\n\r\n            let is_show = false\r\n            if(iterator.Group == 1){\r\n                if(this.old_searchCardData.card_rarity == iterator.Type){\r\n                    is_show = true;\r\n                }\r\n            } else if(iterator.Group == 2){\r\n                if(this.old_searchCardData.quality == iterator.Type){  \r\n                    is_show = true;\r\n                }\r\n            }\r\n\r\n            if(is_show){\r\n                let item_toggle =  _item.getComponent(Toggle);\r\n                if(!item_toggle) item_toggle = _item.addComponent(Toggle);\r\n                item_toggle.isChecked = true;\r\n            }\r\n            \r\n            layout.addChild(_item) \r\n        } \r\n    }\r\n\r\n    private onRemoveSort(){\r\n        for (let i = 0; i < this.sortLayout.node.children.length; i++) {\r\n            const item_element = this.sortLayout.node.children[i];\r\n            item_element.getComponent(Toggle).isChecked = false;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private onRemoveFiltrate(){\r\n        let content = this.filtrateScroll.node.getChildByPath(\"view/content\")\r\n        for (let index = 0; index < content.children.length; index++) {\r\n            const element = content.children[index];\r\n            let item_layout = element.getChildByName(\"item_layout\")\r\n            for (let i = 0; i < item_layout.children.length; i++) {\r\n                const item_element = item_layout.children[i];\r\n                item_element.getComponent(Toggle).isChecked = false;\r\n            }   \r\n        }\r\n\r\n    }\r\n\r\n    protected onHide(...args: any[]): void {\r\n        let select_filtrate_list:StdMarketChoose[] = []\r\n        let content = this.filtrateScroll.node.getChildByPath(\"view/content\")\r\n        let is_new = false\r\n        for (let index = 0; index < content.children.length; index++) {\r\n            const element = content.children[index];\r\n            let item_layout = element.getChildByName(\"item_layout\")\r\n            for (let i = 0; i < item_layout.children.length; i++) {\r\n                const item_element = item_layout.children[i];\r\n                if(item_element.getComponent(Toggle).isChecked){\r\n                    let data:StdMarketChoose = item_element[\"data\"]\r\n                    select_filtrate_list.push(data)\r\n                    //有选择\r\n                    if(data.Group == 1){\r\n                        if(this.old_searchCardData.card_rarity != data.Type){\r\n                            is_new = true;\r\n                            break;\r\n                        }\r\n                    }else if(data.Group == 2){\r\n                        if(this.old_searchCardData.quality != data.Type){\r\n                            is_new = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        //没有选择的\r\n        if(!is_new){\r\n            if(select_filtrate_list.length == 1){\r\n               let  is_select1 = this.old_searchCardData.card_rarity != null && select_filtrate_list[0].Group != 1;\r\n               let is_select2 = this.old_searchCardData.quality != null && select_filtrate_list[0].Group != 2\r\n               is_new = is_select1 || is_select2\r\n            } else if(select_filtrate_list.length == 2){\r\n                let is_select1 = this.old_searchCardData.card_rarity != null && select_filtrate_list[0].Group != 1;\r\n                let is_select2 = this.old_searchCardData.quality != null && select_filtrate_list[0].Group != 2 && select_filtrate_list[1].Group != 2\r\n                is_new = is_select1 || is_select2\r\n            }else{\r\n                is_new = this.old_searchCardData.card_rarity != null || this.old_searchCardData.quality != null\r\n            }\r\n        }\r\n\r\n\r\n        let select_sort_str:string = null;\r\n        for (let i = 0; i < this.sortLayout.node.children.length; i++) {\r\n            const item_element = this.sortLayout.node.children[i];\r\n            if(item_element.getComponent(Toggle).isChecked){\r\n                select_sort_str = item_element[\"data\"].id\r\n                break;\r\n            }\r\n        }\r\n\r\n         //没有选择的\r\n         if(!is_new){\r\n            is_new = select_sort_str != this.old_sort_type\r\n        }\r\n\r\n        if(is_new){\r\n            TradePanel.ins.onFiltrateOrSort(select_filtrate_list, select_sort_str)\r\n        }\r\n\r\n        console.log(select_filtrate_list, select_sort_str)\r\n     \r\n    }\r\n}"]}