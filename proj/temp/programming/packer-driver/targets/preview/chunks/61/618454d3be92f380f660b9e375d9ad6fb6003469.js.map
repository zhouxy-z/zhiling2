{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/debug/DragDropAgentExample.ts"],"names":["_decorator","Component","Node","NodePool","instantiate","DragDropMgr","DragDropGrid","ccclass","property","DragDropExample","type","nodePool","start","on","dragLayer","id","index","grid1","children","length","element","com","addComponent","addDragNode","node","addDropNode","setData","grid2","update","deltaTime","onDrag","dragData","onDrop","dropNode","dragNode","parent","position","dragNodePos","icon","dragParentNode","getChildByName","put","chekIsCanDrag","creatDragNode","dragAgent","get","tempAgent","name","clone","isAgent"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, NodePool } from 'cc';\r\nimport { DragDropMgr, IDragData, IDragDropEvent } from '../manager/DragDropMgr';\r\nimport { DragDropGrid } from './DragDropGrid';\r\nimport { instantiate } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\nexport interface IGridData {\r\n    id:number;\r\n}\r\n@ccclass('DragDropExample')\r\nexport class DragDropExample extends Component implements IDragDropEvent {\r\n    \r\n    @property({ type: Node})\r\n    grid1:Node;\r\n\r\n    @property({ type: Node})\r\n    grid2:Node;\r\n\r\n    @property({ type: Node})\r\n    dragLayer:Node;\r\n\r\n    @property({ type: Node})\r\n    tempAgent:Node;\r\n\r\n    private nodePool:NodePool = new NodePool();\r\n    start() {\r\n        DragDropMgr.on(this, this.dragLayer);\r\n        let id: number = 1;\r\n        for (let index = 0; index < this.grid1.children.length; index++) {\r\n            const element = this.grid1.children[index];\r\n            const com:DragDropGrid = element.addComponent(DragDropGrid);\r\n            DragDropMgr.addDragNode(com.node);\r\n            DragDropMgr.addDropNode(com.node);\r\n            com.setData({id:id});\r\n            id ++;\r\n        }\r\n        let node: Node = this.grid2.children[0];\r\n        for (let index = 0; index < node.children.length; index++) {\r\n            const element = node.children[index];\r\n            const com:DragDropGrid = element.addComponent(DragDropGrid);\r\n            DragDropMgr.addDragNode(com.node);\r\n            DragDropMgr.addDropNode(com.node);\r\n            com.setData({id:id});\r\n            id ++;\r\n        }\r\n        \r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n    onDrag(dragData: IDragData): void {\r\n        \r\n    }\r\n    onDrop(dropNode: Node, dragData: IDragData): void {\r\n        if (dropNode){\r\n            dragData.dragNode.parent = dropNode;\r\n            dragData.dragNode.position = dragData.dragNodePos;\r\n            let icon:Node = dragData.dragParentNode.getChildByName(\"icon\");\r\n            this.nodePool.put(icon);\r\n        }else{\r\n            this.nodePool.put(dragData.dragNode);\r\n        }\r\n        \r\n    }\r\n\r\n    chekIsCanDrag(node: Node): boolean {\r\n        let icon: Node = node.getChildByName(\"icon\");\r\n        return icon != null;\r\n    }\r\n\r\n    creatDragNode(node: Node): IDragData {\r\n        let dragAgent = this.nodePool.get() || instantiate(this.tempAgent);\r\n        dragAgent.name = \"icon\";\r\n        let icon: Node = node.getChildByName(\"icon\");\r\n        let dragData: IDragData<IGridData> = {\r\n            dragNode: dragAgent,\r\n            dragNodePos: icon.position.clone(),\r\n            dragParentNode: node,\r\n            isAgent:true,\r\n        };\r\n        return dragData;\r\n    }\r\n}\r\n\r\n\r\n"]}