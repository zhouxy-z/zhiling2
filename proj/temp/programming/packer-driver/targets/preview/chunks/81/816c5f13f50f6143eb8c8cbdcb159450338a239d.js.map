{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/utils/BeforeGameUtils.ts"],"names":["BeforeGameUtils","js","toHashMap","result","createMap","args","val","toHashMapObj","key","len","length","i","generateSafeFunction","fn","code","toString","bodyStart","indexOf","bodyEnd","lastIndexOf","fnBody","slice","newFnCode","name","Function"],"mappings":";;;sEAKaA,e;;;;;;;;;AADJC,MAAAA,E,OAAAA,E;;;;;;AAJT;AACA;AACA;;;;;iCAGaD,e,GAAN,MAAMA,eAAN,CACP;AACI;AACJ;AACA;AACA;AACA;AACoB,eAATE,SAAS,GAA0C;AACtD,cAAIC,MAAM,GAAGF,EAAE,CAACG,SAAH,EAAb;;AADsD,4CAAtCC,IAAsC;AAAtCA,YAAAA,IAAsC;AAAA;;AAEtD,eAAK,IAAMC,GAAX,IAAkBD,IAAlB,EAAwB;AACpBF,YAAAA,MAAM,CAACG,GAAD,CAAN,GAAc,IAAd;AACH;;AACD,iBAAOH,MAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;AACuB,eAAZI,YAAY,GAAwC;AACvD,cAAIJ,MAAM,GAAGF,EAAE,CAACG,SAAH,EAAb;AACA,cAAIE,GAAJ,EAAcE,GAAd;;AAFuD,6CAAjCH,IAAiC;AAAjCA,YAAAA,IAAiC;AAAA;;AAGvD,cAAII,GAAW,GAAGJ,IAAI,CAACK,MAAvB;;AACA,eAAK,IAAIC,CAAS,GAAG,CAArB,EAAwBA,CAAC,GAAGF,GAA5B,EAAiCE,CAAC,EAAlC,EAAsC;AAClCH,YAAAA,GAAG,GAAGH,IAAI,CAACM,CAAD,CAAV;AACAL,YAAAA,GAAG,GAAGD,IAAI,CAAC,EAAEM,CAAH,CAAV;AACAR,YAAAA,MAAM,CAACK,GAAD,CAAN,GAAcF,GAAd;AACH;;AACD,iBAAOH,MAAP;AACH;;AAGiC,eAApBS,oBAAoB,CAACC,EAAD,EAAyB;AAAA;;AACvD,cAAIC,IAAI,GAAGD,EAAE,CAACE,QAAH,EAAX;AACA,cAAIC,SAAS,GAAGF,IAAI,CAACG,OAAL,CAAa,GAAb,IAAoB,CAApC;AACA,cAAIC,OAAO,GAAGJ,IAAI,CAACK,WAAL,CAAiB,GAAjB,CAAd;AACA,cAAIC,MAAM,GAAGN,IAAI,CAACO,KAAL,CAAWL,SAAX,EAAsBE,OAAtB,CAAb;AACA,cAAII,SAAS,qCAAsBT,EAAE,CAACU,IAAzB,uBAAiC,WAAjC,cAAoDH,MAApD,OAAb;AACA,iBAAO,IAAII,QAAJ,CAAaF,SAAb,GAAP;AACH;;AAtCL,O","sourcesContent":["/**\r\n * 此文件用于游戏初始化前的所有定义与声明，防止其他类文件互相引用时的先后顺序导致的异常\r\n */\r\n\r\nimport { js } from \"cc\";\r\nexport class BeforeGameUtils\r\n{\r\n    /**\r\n     * 传入参数转为哈希map布尔值\r\n     * @param args \r\n     * @returns \r\n     */\r\n    static toHashMap(...args: any[]):{[key: string]: boolean} {\r\n        let result = js.createMap();\r\n        for (const val of args) {\r\n            result[val] = true;\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * 传入参数转为哈希map对象\r\n     * @param args \r\n     * @returns \r\n     */\r\n    static toHashMapObj<T>(...args: any[]): {[key: string]: T} {\r\n        let result = js.createMap();\r\n        var val: any, key: any\r\n        var len: number = args.length;\r\n        for (var i: number = 0; i < len; i++) {\r\n            key = args[i];\r\n            val = args[++i];\r\n            result[key] = val;\r\n        }\r\n        return result;\r\n    }\r\n    \r\n\r\n    public static generateSafeFunction(fn: Function): Function {\r\n        let code = fn.toString();\r\n        let bodyStart = code.indexOf('{') + 1;\r\n        let bodyEnd = code.lastIndexOf('}');\r\n        let fnBody = code.slice(bodyStart, bodyEnd);\r\n        let newFnCode = `return function ${fn.name ?? 'anonymous'}() { ${fnBody} }`;\r\n        return new Function(newFnCode)();\r\n    }\r\n}"]}