{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/vs/VSCardGroupPanel.ts"],"names":["VSCardGroupPanel","VList","Panel","Req","Route","PlayerData","VSCardGruopItem","Session","prefab","cardGroupList","cardGroupDataList","onLoad","find","updateCell","updateCardGroupCell","bind","clickCell","cardGroupClick","CloseBy","flush","cardNameList","cellCount","length","onShow","onHide","cell","cellInfo","cellCom","getComponent","addComponent","SetData","index","cardGroupData","set","deckId","id","Send","Hide"],"mappings":";;;+IAQaA,gB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAPMC,MAAAA,K,iBAAAA,K;;AACVC,MAAAA,K,iBAAAA,K;;AACOC,MAAAA,G,iBAAAA,G;AAAKC,MAAAA,K,iBAAAA,K;;AACZC,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,e,iBAAAA,e;;AACAC,MAAAA,O,iBAAAA,O;;;;;;;;;kCAEIP,gB,GAAN,MAAMA,gBAAN;AAAA;AAAA,0BAAqC;AAAA;AAAA;AAAA,eAC9BQ,MAD8B,GACb,6BADa;AAAA,eAEhCC,aAFgC;AAAA,eAGhCC,iBAHgC;AAAA;;AAI9BC,QAAAA,MAAM,GAAG;AACf,eAAKF,aAAL,GAAqB,KAAKG,IAAL,CAAU,oBAAV;AAAA;AAAA,6BAArB;AACA,eAAKH,aAAL,CAAmBI,UAAnB,GAAgC,KAAKC,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAAhC;AACA,eAAKN,aAAL,CAAmBO,SAAnB,GAA+B,KAAKC,cAAL,CAAoBF,IAApB,CAAyB,IAAzB,CAA/B;AACA,eAAKG,OAAL,CAAa,MAAb;AACA,eAAKA,OAAL,CAAa,eAAb;AACH;;AAEMC,QAAAA,KAAK,GAAS;AACjB,eAAKT,iBAAL,GAAyB;AAAA;AAAA,wCAAWU,YAApC;AACA,eAAKX,aAAL,CAAmBY,SAAnB,GAA+B,KAAKX,iBAAL,CAAuBY,MAAtD;AACH;;AAESC,QAAAA,MAAM,GAAS,CAExB;;AAESC,QAAAA,MAAM,GAAS,CAExB;;AAEOV,QAAAA,mBAAmB,CAACW,IAAD,EAAaC,QAAb,EAAuC;AAC9D,cAAIC,OAAwB,GAAGF,IAAI,CAACG,YAAL;AAAA;AAAA,qDAAsCH,IAAI,CAACI,YAAL;AAAA;AAAA,iDAArE;AACAF,UAAAA,OAAO,CAACG,OAAR,CAAgB,KAAKpB,iBAAL,CAAuBgB,QAAQ,CAACK,KAAhC,CAAhB;AACH;;AAEOd,QAAAA,cAAc,CAACQ,IAAD,EAAaC,QAAb,EAAuC;AACzD,cAAIM,aAAoC,GAAG,KAAKtB,iBAAL,CAAuBgB,QAAQ,CAACK,KAAhC,CAA3C;AACA;AACR;AACA;AACA;;AACQ,cAAIE,GAAG,GAAG,IAAI;AAAA;AAAA,0BAAI,+BAAJ,CAAJ,EAAV;AACAA,UAAAA,GAAG,CAACC,MAAJ,GAAaF,aAAa,CAACG,EAA3B;AACA;AAAA;AAAA,kCAAQC,IAAR,CAAa;AAAA;AAAA,8BAAM,+BAAN,CAAb,EAAoDH,GAApD;AACA,eAAKI,IAAL;AACH;;AAxCuC,O","sourcesContent":["import { Node } from \"cc\";\r\nimport { CellInfo, VList } from \"../../component/VList\";\r\nimport { Panel } from \"../../manager/GameRoot\";\r\nimport proto, { Req, Route } from \"../../net/Protocol\";\r\nimport { PlayerData } from \"../player/PlayerData\";\r\nimport { VSCardGruopItem } from \"./VSCardGruopItem\";\r\nimport { Session } from \"../../net/Session\";\r\n\r\nexport class VSCardGroupPanel extends Panel {\r\n    protected prefab: string = \"prefabs/vs/VSCardGroupPanel\";\r\n    private cardGroupList: VList;\r\n    private cardGroupDataList: proto.base.IDeckAttrs[];\r\n    protected onLoad() {\r\n        this.cardGroupList = this.find(\"cont/cardGroupList\", VList);\r\n        this.cardGroupList.updateCell = this.updateCardGroupCell.bind(this);\r\n        this.cardGroupList.clickCell = this.cardGroupClick.bind(this);\r\n        this.CloseBy(\"mask\");\r\n        this.CloseBy(\"cont/closeBtn\");\r\n    }\r\n\r\n    public flush(): void {\r\n        this.cardGroupDataList = PlayerData.cardNameList;\r\n        this.cardGroupList.cellCount = this.cardGroupDataList.length;\r\n    }\r\n\r\n    protected onShow(): void {\r\n        \r\n    }\r\n\r\n    protected onHide(): void {\r\n       \r\n    }\r\n\r\n    private updateCardGroupCell(cell: Node, cellInfo: CellInfo): void {\r\n        let cellCom: VSCardGruopItem = cell.getComponent(VSCardGruopItem) || cell.addComponent(VSCardGruopItem);\r\n        cellCom.SetData(this.cardGroupDataList[cellInfo.index]);\r\n    }\r\n\r\n    private cardGroupClick(cell: Node, cellInfo: CellInfo): void {\r\n        let cardGroupData: proto.base.IDeckAttrs = this.cardGroupDataList[cellInfo.index];\r\n        /* if (cardGroupData.size < CfgMgr.CardGuroupComm.DeckFullSize) {\r\n            MsgPanel.Show(`卡组卡牌数量不足${CfgMgr.CardGuroupComm.DeckFullSize}张无法出战`);\r\n            return;\r\n        } */\r\n        let set = new Req[\"logic.protocol.setdeckdefault\"]();\r\n        set.deckId = cardGroupData.id;\r\n        Session.Send(Route[\"logic.protocol.setdeckdefault\"],set);\r\n        this.Hide();\r\n    }\r\n    \r\n}"]}