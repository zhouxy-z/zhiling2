{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/common/RewardTips.ts"],"names":["RewardTips","Vec3","path","Button","Label","easing","tween","Sprite","SpriteFrame","Tween","UITransform","sp","folder_item","ResMgr","CfgMgr","Panel","Card","VList","Utils","CardGroupCoverItem","Goto","prefab","showEffect","cardList","itemList","bottomCont","cardGroupCoverItem","okBtn","itemDatas","cardDatas","cardGroupData","hideCallBack","showCardEnd","showItemEnd","onLoad","find","Skeleton","initVisible","initVisbleCardList","bind","clickCell","clickCellCardList","updateCell","updateCellCard","initVisbleItemList","updateCellItem","addComponent","node","on","EventType","CLICK","onBtnClick","flush","datas","showCallBack","console","log","active","initData","onShow","onHide","btn","showGet","data","card","push","item","sort","itemSort","cardSort","a","b","stdA","Getitem","id","stdB","Quality","quality","length","SetData","showGetCard","showGetItem","Hide","listTrans","getComponent","viewTrans","getChildByName","width","height","setContentSize","cellCount","cellList","visibleCellList","toNodeTween","clearAnimation","setAnimation","delayTime","showAwardTween","scheduleOnce","setScale","to","scale","backOut","start","cell","cellInfo","itemData","index","stdItem","bg","icon","numLab","nameLab","effect","string","formatNumber","count","ItemName","LoadResAbSub","res","spriteFrame","join","Icon","cardData","cardId","cardCom","setIsShowUpEffect","nodeList","t","d","s","e","totalTime","stopAllByTarget","delay","call","playItemEffect","setCompleteListener"],"mappings":"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","sourcesContent":["import { _decorator, Node, Vec3, path, Button, Label, v3, easing, tween, Sprite, SpriteFrame, Tween, UITransform, sp } from 'cc';\r\nimport { folder_item, ResMgr } from '../../manager/ResMgr';\r\nimport { CfgMgr, StdItem } from '../../manager/CfgMgr';\r\nimport { Panel, UILay } from '../../manager/GameRoot';\r\nimport { Card } from '../cards/Card';\r\nimport { CellInfo, VList } from '../../component/VList';\r\nimport proto from '../../net/Protocol';\r\nimport { Utils } from '../../utils/Utils';\r\nimport { CardGroupCoverItem } from './CardGroupCoverItem';\r\nimport { Goto } from '../../DL';\r\n\r\nexport class RewardTips extends Panel {\r\n    protected prefab: string = \"prefabs/common/RewardTips\";\r\n    private showEffect: sp.Skeleton;\r\n    private cardList: VList;\r\n    private itemList: VList;\r\n    private bottomCont: Node;\r\n    private cardGroupCoverItem: CardGroupCoverItem;\r\n    private okBtn: Button;\r\n    private itemDatas: proto.base.IThingItem[];\r\n    private cardDatas: proto.base.IBattleCard[];\r\n    private cardGroupData: proto.base.DeckAttrs;\r\n    private hideCallBack: Function;\r\n    private showCardEnd: boolean;\r\n    private showItemEnd: boolean;\r\n    protected onLoad(): void {\r\n        this.showEffect = this.find(\"showEffect\", sp.Skeleton);\r\n        this.cardList = this.find(\"cardList\", VList);\r\n        this.cardList.initVisible = this.initVisbleCardList.bind(this);\r\n        this.cardList.clickCell = this.clickCellCardList.bind(this);\r\n        this.cardList.updateCell = this.updateCellCard.bind(this);\r\n        this.itemList = this.find(\"itemList\", VList);\r\n        this.itemList.initVisible = this.initVisbleItemList.bind(this);\r\n        this.itemList.updateCell = this.updateCellItem.bind(this);\r\n        this.bottomCont = this.find(\"bottomCont\");\r\n        this.cardGroupCoverItem = this.find(\"bottomCont/CardGroupCoverItem\").addComponent(CardGroupCoverItem);\r\n        this.okBtn = this.find(\"bottomCont/okBtn\", Button);\r\n        this.okBtn.node.on(Button.EventType.CLICK, this.onBtnClick, this);\r\n    }\r\n    public flush(datas: proto.base.IThing[], cardGroupData?: proto.base.DeckAttrs, showCallBack?: Function, hideCallBack?: Function,): void {\r\n        console.log(\"获取奖励弹窗----->\");\r\n        this.cardList.node.active = false;\r\n        this.itemList.node.active = false;\r\n        this.showEffect.node.active = false;\r\n        this.cardGroupCoverItem.node.active = false;\r\n        if (showCallBack != null) showCallBack();\r\n        this.hideCallBack = hideCallBack;\r\n        this.cardGroupData = cardGroupData;\r\n        this.initData(datas || []);\r\n    }\r\n\r\n    protected onShow(): void {\r\n\r\n    }\r\n\r\n    protected onHide(...args: any[]): void {\r\n        if (this.hideCallBack != null) this.hideCallBack();\r\n    }\r\n\r\n    private onBtnClick(btn: Button): void {\r\n        switch (btn) {\r\n            case this.okBtn:\r\n                this.showGet();\r\n                break;\r\n        }\r\n    }\r\n\r\n    private initData(datas: proto.base.IThing[]): void {\r\n        this.itemDatas = [];\r\n        this.cardDatas = [];\r\n        for (let data of datas) {\r\n            if (data.card) {\r\n                this.cardDatas.push(data.card);\r\n            }\r\n            if (data.item) {\r\n                this.itemDatas.push(data.item);\r\n            }\r\n        }\r\n        this.itemDatas.sort(this.itemSort.bind(this));\r\n        this.cardDatas.sort(this.cardSort.bind(this));\r\n        this.showCardEnd = false;\r\n        this.showItemEnd = false;\r\n        this.showGet();\r\n    }\r\n\r\n    /**排序 */\r\n    private itemSort(a: proto.base.IThingItem, b: proto.base.IThingItem): number {\r\n        let stdA: StdItem = CfgMgr.Getitem(a.id);\r\n        let stdB: StdItem = CfgMgr.Getitem(b.id);\r\n        return stdA.Quality - stdB.Quality;\r\n    }\r\n\r\n    /**排序 */\r\n    private cardSort(a: proto.base.IBattleCard, b: proto.base.IBattleCard): number {\r\n        return a.quality - b.quality;\r\n    }\r\n\r\n    private showGet(): void {\r\n        if (!this.showCardEnd && this.cardDatas.length > 0) {\r\n            if (this.cardGroupData) {\r\n                this.cardGroupCoverItem.node.active = true;\r\n                this.cardGroupCoverItem.SetData(this.cardGroupData, false);\r\n            }\r\n            this.showGetCard();\r\n            this.showCardEnd = true;\r\n            return;\r\n        }\r\n        this.showCardEnd = true;\r\n\r\n        if (!this.showItemEnd && this.itemDatas.length > 0) {\r\n            this.showGetItem();\r\n            this.showItemEnd = true;\r\n            return;\r\n        } \r\n        this.Hide();\r\n    }\r\n\r\n    private showGetCard(): void {\r\n        this.okBtn.node.active = false;\r\n        this.cardList.node.active = true;\r\n        let listTrans: UITransform = this.cardList.node.getComponent(UITransform);\r\n        let viewTrans: UITransform = this.cardList.node.getChildByName(\"view\").getComponent(UITransform);\r\n        let width: number;\r\n        let height: number;\r\n        if (this.cardDatas.length <= 6) {\r\n            width = 164 * this.cardDatas.length;\r\n            height = 214;\r\n            listTrans.setContentSize(width, height);\r\n            viewTrans.setContentSize(width, height);\r\n        } else {\r\n            width = 1050;\r\n            height = 450;\r\n            listTrans.setContentSize(width, height);\r\n            viewTrans.setContentSize(width, height);\r\n        }\r\n        this.cardList.cellCount = this.cardDatas.length;\r\n    }\r\n\r\n    private showGetItem(): void {\r\n        this.okBtn.node.active = false;\r\n        this.cardGroupCoverItem.node.active = false;\r\n        this.cardList.node.active = false;\r\n        this.itemList.node.active = true;\r\n        let listTrans: UITransform = this.itemList.node.getComponent(UITransform);\r\n        let viewTrans: UITransform = this.itemList.node.getChildByName(\"view\").getComponent(UITransform);\r\n        let width: number;\r\n        let height: number;\r\n        if (this.itemDatas.length <= 5) {\r\n            width = 150 * this.itemDatas.length;\r\n            height = 160;\r\n            listTrans.setContentSize(width, height);\r\n            viewTrans.setContentSize(width, height);\r\n        } else {\r\n            width = 750;\r\n            height = 398;\r\n            listTrans.setContentSize(width, height);\r\n            viewTrans.setContentSize(width, height);\r\n        }\r\n        this.itemList.cellCount = this.itemDatas.length;\r\n    }\r\n    \r\n    private initVisbleItemList(): void {\r\n        let cellList: Node[] = this.itemList.visibleCellList;\r\n        this.toNodeTween(cellList, );\r\n    }\r\n\r\n    private toNodeTween(cellList: Node []): void {\r\n        this.showEffect.node.active = true;\r\n        this.showEffect.clearAnimation();\r\n        this.showEffect.setAnimation(0, \"start\", false);\r\n        let delayTime: number = this.showAwardTween(cellList, 0.2, 0.1);\r\n        this.scheduleOnce(() => {\r\n            this.okBtn.node.active = true;\r\n            this.bottomCont.setScale(0, 0, 0);\r\n            tween(this.bottomCont)\r\n            .to(0.3, { scale: new Vec3(1, 1, 1) }, { easing: easing.backOut })\r\n            .start();\r\n        }, delayTime);\r\n    }\r\n\r\n    private updateCellItem(cell: Node, cellInfo: CellInfo): void {\r\n        let itemData: proto.base.IThingItem = this.itemDatas[cellInfo.index];\r\n        let stdItem: StdItem = CfgMgr.Getitem(itemData.id);\r\n        let bg: Sprite = cell.getChildByName(\"bg\").getComponent(Sprite);\r\n        let icon: Sprite = cell.getChildByName(\"icon\").getComponent(Sprite);\r\n        let numLab: Label = cell.getChildByName(\"numLab\").getComponent(Label);\r\n        let nameLab: Label = cell.getChildByName(\"nameLab\").getComponent(Label);\r\n        let effect: Node = cell.getChildByName(\"effect\");\r\n        effect.active = false;\r\n        numLab.string = Utils.formatNumber(itemData.count);\r\n        nameLab.string = stdItem.ItemName;\r\n        ResMgr.LoadResAbSub(\"sheets/bag/Quality\" + stdItem.Quality + \"/spriteFrame\", SpriteFrame, (res) => {\r\n            bg.spriteFrame = res;\r\n        });\r\n        ResMgr.LoadResAbSub(path.join(folder_item, stdItem.Icon, \"spriteFrame\"), SpriteFrame, (res) => {\r\n            icon.spriteFrame = res;\r\n        });\r\n        \r\n    }\r\n\r\n    private initVisbleCardList(): void {\r\n        let cellList: Node[] = this.cardList.visibleCellList;\r\n        this.toNodeTween(cellList);\r\n    }\r\n\r\n    private clickCellCardList(cell: Node, cellInfo: CellInfo): void {\r\n        let cardData: proto.base.IBattleCard = this.cardDatas[cellInfo.index];\r\n        Goto(\"CardTipsPanel\", cardData.cardId);\r\n    }\r\n\r\n    private updateCellCard(cell: Node, cellInfo: CellInfo): void {\r\n        let cardData: proto.base.IBattleCard = this.cardDatas[cellInfo.index];\r\n        let card: Node = cell.getChildByName(\"Cards\");\r\n        let cardCom: Card = card.getComponent(Card) || card.addComponent(Card);\r\n        cardCom.setIsShowUpEffect(false);\r\n        cardCom.SetData(cardData);\r\n    }\r\n\r\n    private showAwardTween(nodeList: Node[], t: number = 0.2, d: number = 0.05, s: number = 0, e: number = 1): number {\r\n        let node: Node;\r\n        let totalTime: number;\r\n        for (let index = 0; index < nodeList.length; index++) {\r\n            node = nodeList[index];\r\n            Tween.stopAllByTarget(node);\r\n            node.setScale(s, s, s);\r\n            totalTime = (index + 1) * d;\r\n            tween(node)\r\n            .delay((index + 1) * d)\r\n            .to(t, { scale: new Vec3(e, e, e) }, { easing: easing.backOut })\r\n            .call(this.playItemEffect.bind(this, node))\r\n            .start();\r\n        }\r\n        return totalTime += t;\r\n    }\r\n\r\n    private playItemEffect(node: Node): void {\r\n        let effect: sp.Skeleton = node.getChildByName(\"effect\")?.getComponent(sp.Skeleton);\r\n        if (effect) {\r\n            effect.node.active = true;\r\n            effect.clearAnimation();\r\n            effect.setAnimation(0, \"animation\", false);\r\n            effect.setCompleteListener(() => {\r\n                effect.node.active = false;\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]}