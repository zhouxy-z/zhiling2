{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/common/ConsumeItem.ts"],"names":["ConsumeItem","Color","Component","Label","Sprite","SpriteFrame","_decorator","path","ResMgr","folder_item","EventMgr","Evt_Currency_Updtae","Evt_Item_Change","Evt_Res_Update","ItemUtil","CfgMgr","ItemType","ThingTypeName","Utils","PlayerData","ccclass","property","disallowMultiple","requireComponent","ConsumeNumFormatType","icon","numLab","itemNum","iconUrl","itemId","itemName","numLabInitCol","thingType","data","$loadSub","complete","numFormatType","Comm","hasLoad","_formatCountCb","onLoad","node","getChildByName","getComponent","color","clone","on","onItemChange","onResUpdate","onCurrencyUpdate","loadSub","thisObj","Promise","resolve","reject","isCanUpdate","setCountCol","formatCount","activeInHierarchy","ContrastHave","CheckItemIsHave","fromHEX","SetData","Array","length","console","error","setItem","id","count","setThing","spriteFrame","LoadResAbSub","Item","stdItem","Getitem","Itemtpye","money","MoneyChange","ItemName","join","Icon","thing","type","item","FormatCountCb","cb","string","getItemNum","keepPre","formatNumber","toString","Have","GetItemCount","itemType"],"mappings":";;;kSAiBaA,W;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAjBJC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,U,OAAAA,U;AAAYC,MAAAA,I,OAAAA,I;;AAC1DC,MAAAA,M,iBAAAA,M;AAAQC,MAAAA,W,iBAAAA,W;;AACRC,MAAAA,Q,iBAAAA,Q;AAAUC,MAAAA,mB,iBAAAA,mB;AAAqBC,MAAAA,e,iBAAAA,e;AAAiBC,MAAAA,c,iBAAAA,c;;AAChDC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,M,iBAAAA,M;AAAQC,MAAAA,Q,iBAAAA,Q;AAAqBC,MAAAA,a,iBAAAA,a;;AAC7BC,MAAAA,K,iBAAAA,K;;AACAC,MAAAA,U,iBAAAA,U;;;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,QAAX;AAAqBC,QAAAA,gBAArB;AAAuCC,QAAAA;AAAvC,O,GAA4DjB,U;AAClE;AACA;AACA;;sCACYkB,oB,0BAAAA,oB;AAAAA,QAAAA,oB,CAAAA,oB;AAAAA,QAAAA,oB,CAAAA,oB;AAAAA,QAAAA,oB,CAAAA,oB;eAAAA,oB;;;6BAKCxB,W,GAAN,MAAMA,WAAN,SAA0BE,SAA1B,CAAoC;AAAA;AAAA;AAAA,eAC/BuB,IAD+B;AAAA,eAE/BC,MAF+B;AAAA,eAG/BC,OAH+B;AAAA,eAI/BC,OAJ+B;AAAA,eAK/BC,MAL+B;AAAA,eAM/BC,QAN+B;AAAA,eAO/BC,aAP+B;AAAA,eAQ/BC,SAR+B;AAAA,eAS/BC,IAT+B;AAAA,eAU7BC,QAV6B;AAAA,eAW7BC,QAX6B;AAAA,eAYhCC,aAZgC,GAYKZ,oBAAoB,CAACa,IAZ1B;AAAA,eAa7BC,OAb6B,GAanB,KAbmB;AAAA,eAc/BC,cAd+B,GAcS,IAdT;AAAA;;AAe7BC,QAAAA,MAAM,GAAS;AAAA;;AACrB,eAAKf,IAAL,GAAY,KAAKgB,IAAL,CAAUC,cAAV,CAAyB,MAAzB,EAAiCC,YAAjC,CAA8CvC,MAA9C,CAAZ;AACA,eAAKsB,MAAL,GAAc,KAAKe,IAAL,CAAUC,cAAV,CAAyB,QAAzB,EAAmCC,YAAnC,CAAgDxC,KAAhD,CAAd;AACA,eAAK4B,aAAL,GAAqB,KAAKL,MAAL,CAAYkB,KAAZ,CAAkBC,KAAlB,EAArB;AACA;AAAA;AAAA,oCAASC,EAAT;AAAA;AAAA,kDAA6B,KAAKC,YAAlC,EAAgD,IAAhD;AACA;AAAA;AAAA,oCAASD,EAAT;AAAA;AAAA,gDAA4B,KAAKE,WAAjC,EAA8C,IAA9C;AACA;AAAA;AAAA,oCAASF,EAAT;AAAA;AAAA,0DAAiC,KAAKG,gBAAtC,EAAwD,IAAxD;AACA,eAAKX,OAAL,GAAe,IAAf;AACA,iCAAKH,QAAL;AACH;;AAEoB,YAAPe,OAAO,GAAG;AACpB,cAAI,KAAKhB,QAAT,EAAmB,OAAO,KAAKA,QAAZ;AACnB,cAAIiB,OAAO,GAAG,IAAd;AACA,eAAKjB,QAAL,GAAgB,IAAIkB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7CH,YAAAA,OAAO,CAAChB,QAAR,GAAmBkB,OAAnB;AACH,WAFe,CAAhB;AAGH;;AACON,QAAAA,YAAY,GAAO;AACvB,cAAG,CAAC,KAAKQ,WAAT,EAAsB;AACtB,eAAKC,WAAL;AACA,eAAKC,WAAL;AAEH;;AACOT,QAAAA,WAAW,GAAO;AACtB,cAAG,CAAC,KAAKO,WAAT,EAAsB;AACtB,eAAKC,WAAL;AACA,eAAKC,WAAL;AACH;;AACOR,QAAAA,gBAAgB,GAAO;AAC3B,cAAG,CAAC,KAAKM,WAAT,EAAsB;AACtB,eAAKC,WAAL;AACA,eAAKC,WAAL;AACH;;AACsB,YAAXF,WAAW,GAAU;AAC7B,cAAG,CAAC,KAAKd,IAAL,CAAUiB,iBAAX,IAAgC,KAAKtB,aAAL,IAAsBZ,oBAAoB,CAACa,IAA3E,IAAmF,CAAC,KAAKJ,IAA5F,EAAkG,OAAO,KAAP;AAClG,iBAAO,IAAP;AACH;;AACOuB,QAAAA,WAAW,GAAO;AACtB,cAAG,KAAK9B,MAAR,EAAe;AAEX,gBAAG,KAAKU,aAAL,IAAsBZ,oBAAoB,CAACmC,YAA3C,IAA2D,CAAC;AAAA;AAAA,sCAASC,eAAT,CAAyB,KAAK5B,SAA9B,EAAyC,KAAKL,OAA9C,EAAuD,KAAKE,MAA5D,CAA/D,EAAmI;AAC/H,mBAAKH,MAAL,CAAYkB,KAAZ,GAAoB,IAAI3C,KAAJ,GAAY4D,OAAZ,CAAoB,SAApB,CAApB;AACH,aAFD,MAEK;AACD,mBAAKnC,MAAL,CAAYkB,KAAZ,GAAoB,KAAKb,aAAzB;AACH;AACJ;AACJ;AACD;AACJ;AACA;AACA;;;AACU+B,QAAAA,OAAO,CAAC7B,IAAD,EAAqC;AAAA;;AAAA;AAC9C,gBAAI,CAAC,KAAI,CAACK,OAAV,EAAmB,MAAM,KAAI,CAACY,OAAX;AACnB,YAAA,KAAI,CAACjB,IAAL,GAAYA,IAAZ;;AACA,gBAAG,KAAI,CAACA,IAAL,YAAqB8B,KAAxB,EAA8B;AAC1B,kBAAG,KAAI,CAAC9B,IAAL,CAAU+B,MAAV,IAAoB,CAAvB,EAAyB;AACrBC,gBAAAA,OAAO,CAACC,KAAR;AACA;AACH;;AACD,cAAA,KAAI,CAACC,OAAL,CAAa;AAACC,gBAAAA,EAAE,EAAC,KAAI,CAACnC,IAAL,CAAU,CAAV,CAAJ;AAAkBoC,gBAAAA,KAAK,EAAE,KAAI,CAACpC,IAAL,CAAU,CAAV;AAAzB,eAAb;AACH,aAND,MAMM;AACF,cAAA,KAAI,CAACqC,QAAL,CAAc,KAAI,CAACrC,IAAnB;AACH;;AACD,YAAA,KAAI,CAACuB,WAAL;;AACA,YAAA,KAAI,CAACC,WAAL;;AACA,gBAAI,KAAI,CAAChC,IAAT,EAAe,KAAI,CAACA,IAAL,CAAU8C,WAAV,SAA8B;AAAA;AAAA,kCAAOC,YAAP,CAAoB,KAAI,CAAC5C,OAAzB,EAAkCvB,WAAlC,CAA9B;AAd+B;AAejD;;AAEO8D,QAAAA,OAAO,CAAClC,IAAD,EAAmC;AAC9C,eAAKD,SAAL,GAAiB;AAAA;AAAA,8CAAcyC,IAA/B;AACA,eAAK5C,MAAL,GAAcI,IAAI,CAACmC,EAAnB;AACA,eAAKzC,OAAL,GAAeM,IAAI,CAACoC,KAApB;AACA,eAAKzC,OAAL,GAAe,IAAf;AACA,eAAKE,QAAL,GAAgB,EAAhB;AACA,cAAI4C,OAAO,GAAG;AAAA;AAAA,gCAAOC,OAAP,CAAe1C,IAAI,CAACmC,EAApB,CAAd;;AACA,cAAI,CAACM,OAAL,EAAa;AACTT,YAAAA,OAAO,CAACC,KAAR,uDAAyCjC,IAAI,CAACmC,EAA9C;AACA;AACH;;AACD,cAAGM,OAAO,CAACE,QAAR,IAAoB;AAAA;AAAA,oCAASC,KAAhC,EAAsC;AAClC,iBAAKlD,OAAL,GAAe;AAAA;AAAA,sCAASmD,WAAT,CAAqB,KAAKnD,OAA1B,CAAf;AACH;;AACD,eAAKG,QAAL,GAAgB4C,OAAO,CAACK,QAAxB;AACA,eAAKnD,OAAL,GAAerB,IAAI,CAACyE,IAAL;AAAA;AAAA,0CAAuBN,OAAO,CAACO,IAA/B,EAAqC,aAArC,CAAf;AACH;;AACOX,QAAAA,QAAQ,CAACY,KAAD,EAA2B;AACvC,eAAKlD,SAAL,GAAiBkD,KAAK,CAACC,IAAvB;AACA,eAAKvD,OAAL,GAAe,IAAf;AACA,eAAKE,QAAL,GAAgB,EAAhB;AACA,eAAKD,MAAL,GAAc,CAAd;;AACA,cAAGqD,KAAK,CAACC,IAAN,IAAc;AAAA;AAAA,8CAAcV,IAA/B,EAAoC;AAChC,iBAAKN,OAAL,CAAa;AAAEC,cAAAA,EAAE,EAAEc,KAAK,CAACE,IAAN,CAAWhB,EAAjB;AAAqBC,cAAAA,KAAK,EAAEa,KAAK,CAACE,IAAN,CAAWf;AAAvC,aAAb;AACH;AAEJ;AACD;AACJ;AACA;;;AACIgB,QAAAA,aAAa,CAACC,EAAD,EAA2B;AACpC,eAAK/C,cAAL,GAAsB+C,EAAtB;AACH;AACD;AACJ;AACA;;;AACY7B,QAAAA,WAAW,GAAO;AACtB,cAAI,CAAC,KAAK/B,MAAV,EAAkB;;AAClB,cAAG,KAAKa,cAAL,IAAuB,IAA1B,EAA+B;AAC3B,iBAAKb,MAAL,CAAY6D,MAAZ,GAAqB,KAAKhD,cAAL,CAAoB,KAAKZ,OAAzB,CAArB;AACA;AACH;;AACD,eAAKA,OAAL,GAAe,KAAK6D,UAAL,EAAf;AACA,cAAIC,OAAc,GAAG,CAArB;AACA,eAAK/D,MAAL,CAAY6D,MAAZ,GAAqBE,OAAO,GAAG,CAAV,GAAc;AAAA;AAAA,8BAAMC,YAAN,CAAmB,KAAK/D,OAAxB,EAAiC8D,OAAjC,CAAd,GAA0D,KAAK9D,OAAL,CAAagE,QAAb,EAA/E;AAEH;;AACOH,QAAAA,UAAU,GAAS;AACvB,cAAG,KAAKpD,aAAL,IAAsBZ,oBAAoB,CAACa,IAA9C,EAAmD;AAC/C,mBAAO,KAAKV,OAAZ;AACH,WAFD,MAEM,IAAG,KAAKS,aAAL,IAAsBZ,oBAAoB,CAACmC,YAA9C,EAA2D;AAC7D,mBAAO,KAAKhC,OAAZ;AACH,WAFK,MAEA,IAAG,KAAKS,aAAL,IAAsBZ,oBAAoB,CAACoE,IAA9C,EAAmD;AACrD,iBAAKjE,OAAL,GAAe;AAAA;AAAA,0CAAWkE,YAAX,CAAwB,KAAKhE,MAA7B,CAAf;AACA,gBAAIiE,QAAQ,GAAG;AAAA;AAAA,kCAAOnB,OAAP,CAAe,KAAK9C,MAApB,EAA4B+C,QAA3C;;AACA,gBAAGkB,QAAQ,IAAI;AAAA;AAAA,sCAASjB,KAAxB,EAA8B;AAC1B,mBAAKlD,OAAL,GAAe;AAAA;AAAA,wCAASmD,WAAT,CAAqB,KAAKnD,OAA1B,CAAf;AACH;;AACD,mBAAO,KAAKA,OAAZ;AACH;;AACD,iBAAO,KAAKA,OAAZ;AAEH;;AAlJsC,O","sourcesContent":["import { Color, Component, Label, Sprite, SpriteFrame, _decorator, path } from \"cc\";\r\nimport { ResMgr, folder_item } from \"../../manager/ResMgr\";\r\nimport { EventMgr, Evt_Currency_Updtae, Evt_Item_Change, Evt_Res_Update } from \"../../manager/EventMgr\";\r\nimport { ItemUtil } from \"../../utils/ItemUtils\";\r\nimport { CfgMgr, ItemType, ThingName, ThingTypeName } from \"../../manager/CfgMgr\";\r\nimport { Utils } from \"../../utils/Utils\";\r\nimport { PlayerData } from \"../player/PlayerData\";\r\nimport proto from \"../../net/Protocol\";\r\nconst { ccclass, property, disallowMultiple, requireComponent } = _decorator;\r\n/**\r\n * 格式化消耗类型数字  \r\n */\r\nexport enum ConsumeNumFormatType{\r\n    Comm,//普通格式化\r\n    ContrastHave,//对比拥有的，不足出红色，否则出绿色\r\n    Have,//只显示拥有的\r\n}\r\nexport class ConsumeItem extends Component {\r\n    private icon: Sprite;\r\n    private numLab: Label;\r\n    private itemNum:number;\r\n    private iconUrl:string;\r\n    private itemId:number;\r\n    private itemName:string;\r\n    private numLabInitCol:Color;\r\n    private thingType:string ;\r\n    private data: number[] | proto.base.IThing;\r\n    protected $loadSub: Promise<any>;\r\n    protected complete: Function;\r\n    public numFormatType:ConsumeNumFormatType = ConsumeNumFormatType.Comm;\r\n    protected hasLoad = false;\r\n    private _formatCountCb:(num:number) => string = null;\r\n    protected onLoad(): void {\r\n        this.icon = this.node.getChildByName(\"icon\").getComponent(Sprite);\r\n        this.numLab = this.node.getChildByName(\"numLab\").getComponent(Label);\r\n        this.numLabInitCol = this.numLab.color.clone();\r\n        EventMgr.on(Evt_Item_Change, this.onItemChange, this);\r\n        EventMgr.on(Evt_Res_Update, this.onResUpdate, this);\r\n        EventMgr.on(Evt_Currency_Updtae, this.onCurrencyUpdate, this);\r\n        this.hasLoad = true;\r\n        this.complete?.();\r\n    }\r\n\r\n    protected get loadSub() {\r\n        if (this.$loadSub) return this.$loadSub;\r\n        let thisObj = this;\r\n        this.$loadSub = new Promise((resolve, reject) => {\r\n            thisObj.complete = resolve;\r\n        });\r\n    }\r\n    private onItemChange():void{\r\n        if(!this.isCanUpdate) return;\r\n        this.setCountCol();\r\n        this.formatCount();\r\n        \r\n    }\r\n    private onResUpdate():void{\r\n        if(!this.isCanUpdate) return;\r\n        this.setCountCol();\r\n        this.formatCount();\r\n    }\r\n    private onCurrencyUpdate():void{\r\n        if(!this.isCanUpdate) return;\r\n        this.setCountCol();\r\n        this.formatCount();\r\n    }\r\n    private get isCanUpdate():boolean{\r\n        if(!this.node.activeInHierarchy || this.numFormatType == ConsumeNumFormatType.Comm || !this.data) return false;\r\n        return true;\r\n    }\r\n    private setCountCol():void{\r\n        if(this.numLab){\r\n            \r\n            if(this.numFormatType == ConsumeNumFormatType.ContrastHave && !ItemUtil.CheckItemIsHave(this.thingType, this.itemNum, this.itemId)){\r\n                this.numLab.color = new Color().fromHEX(\"#BF1600\");\r\n            }else{\r\n                this.numLab.color = this.numLabInitCol;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 设置消耗物品数据\r\n     * @param data number index 0 物品id index 1 物品数量, SPlayerDataItem道具数据结构\r\n     */\r\n    async SetData(data: number[] | proto.base.IThing) {\r\n        if (!this.hasLoad) await this.loadSub;\r\n        this.data = data;\r\n        if(this.data instanceof Array){\r\n            if(this.data.length != 2){\r\n                console.error(`AwardItem.SetData非法数据！`)\r\n                return;\r\n            }\r\n            this.setItem({id:this.data[0], count: this.data[1]});\r\n        }else {\r\n            this.setThing(this.data as proto.base.IThing);\r\n        }\r\n        this.setCountCol();\r\n        this.formatCount();\r\n        if (this.icon) this.icon.spriteFrame = await ResMgr.LoadResAbSub(this.iconUrl, SpriteFrame);\r\n    }\r\n\r\n    private setItem(data :{id:number, count: number}) {\r\n        this.thingType = ThingTypeName.Item;\r\n        this.itemId = data.id;\r\n        this.itemNum = data.count;\r\n        this.iconUrl = null;\r\n        this.itemName = \"\";\r\n        let stdItem = CfgMgr.Getitem(data.id);\r\n        if (!stdItem){\r\n            console.error(`AwardItem.SetData找不到物品id${data.id}`);\r\n            return;\r\n        }\r\n        if(stdItem.Itemtpye == ItemType.money){\r\n            this.itemNum = ItemUtil.MoneyChange(this.itemNum);\r\n        }    \r\n        this.itemName = stdItem.ItemName;\r\n        this.iconUrl = path.join(folder_item, stdItem.Icon, \"spriteFrame\");\r\n    }\r\n    private setThing(thing: proto.base.IThing) {\r\n        this.thingType = thing.type;\r\n        this.iconUrl = null;\r\n        this.itemName = \"\";\r\n        this.itemId = 0;\r\n        if(thing.type == ThingTypeName.Item){\r\n            this.setItem({ id: thing.item.id, count: thing.item.count });\r\n        }\r\n        \r\n    }\r\n    /**\r\n     * 格式化数量回调\r\n     */\r\n    FormatCountCb(cb:(num:number) => string){\r\n        this._formatCountCb = cb;\r\n    }\r\n    /**\r\n     * 格式化奖励数量\r\n     */\r\n    private formatCount():void{\r\n        if (!this.numLab) return;\r\n        if(this._formatCountCb != null){\r\n            this.numLab.string = this._formatCountCb(this.itemNum);\r\n            return;\r\n        }\r\n        this.itemNum = this.getItemNum();\r\n        let keepPre:number = 0;\r\n        this.numLab.string = keepPre > 0 ? Utils.formatNumber(this.itemNum, keepPre) : this.itemNum.toString();\r\n        \r\n    }\r\n    private getItemNum():number{\r\n        if(this.numFormatType == ConsumeNumFormatType.Comm){\r\n            return this.itemNum;\r\n        }else if(this.numFormatType == ConsumeNumFormatType.ContrastHave){\r\n            return this.itemNum;\r\n        }else if(this.numFormatType == ConsumeNumFormatType.Have){\r\n            this.itemNum = PlayerData.GetItemCount(this.itemId);\r\n            let itemType = CfgMgr.Getitem(this.itemId).Itemtpye\r\n            if(itemType == ItemType.money){\r\n                this.itemNum = ItemUtil.MoneyChange(this.itemNum)\r\n            }\r\n            return this.itemNum\r\n        }\r\n        return this.itemNum;\r\n        \r\n    }\r\n}"]}