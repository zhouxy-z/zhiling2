{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/cards/CardGroupHead.ts"],"names":["CardGroupHead","Component","path","Sprite","SpriteFrame","CfgMgr","folder_head","ResMgr","headBg","icon","favorite","use","isInit","avatarId","is_show_like","is_show_use","onLoad","node","getChildByName","getChildByPath","getComponent","updateShow","SetData","active","std","GetHead","headUrl","join","LoadResAbSub","res","spriteFrame"],"mappings":";;;kJAQaA,a;;;;;;;;;;;;;;;;;;;;;;;;;;;AARJC,MAAAA,S,OAAAA,S;AAA+BC,MAAAA,I,OAAAA,I;AAAUC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;;AACjDC,MAAAA,M,iBAAAA,M;;AACcC,MAAAA,W,iBAAAA,W;AAA0BC,MAAAA,M,iBAAAA,M;;;;;;;;;+BAMpCP,a,GAAN,MAAMA,aAAN,SAA4BC,SAA5B,CAAsC;AAAA;AAAA;AAAA,eACjCO,MADiC;AAAA,eAEjCC,IAFiC;AAAA,eAGjCC,QAHiC;AAAA,eAIjCC,GAJiC;AAAA,eAKjCC,MALiC,GAKhB,KALgB;AAAA,eAMjCC,QANiC;AAAA,eAOjCC,YAPiC;AAAA,eAQjCC,WARiC;AAAA;;AAS/BC,QAAAA,MAAM,GAAS;AACrB,eAAKR,MAAL,GAAc,KAAKS,IAAL,CAAUC,cAAV,CAAyB,QAAzB,CAAd;AACA,eAAKT,IAAL,GAAY,KAAKQ,IAAL,CAAUE,cAAV,CAAyB,WAAzB,EAAsCC,YAAtC,CAAmDjB,MAAnD,CAAZ;AACA,eAAKO,QAAL,GAAgB,KAAKO,IAAL,CAAUC,cAAV,CAAyB,UAAzB,CAAhB;AACA,eAAKP,GAAL,GAAW,KAAKM,IAAL,CAAUC,cAAV,CAAyB,KAAzB,CAAX;AACA,eAAKN,MAAL,GAAc,IAAd;AACA,eAAKS,UAAL;AACH;;AAIDC,QAAAA,OAAO,CAACT,QAAD,EAAkBC,YAAlB,EAAgDC,WAAhD,EAA6E;AAAA,cAA3DD,YAA2D;AAA3DA,YAAAA,YAA2D,GAApC,KAAoC;AAAA;;AAAA,cAA7BC,WAA6B;AAA7BA,YAAAA,WAA6B,GAAP,KAAO;AAAA;;AAChF,eAAKF,QAAL,GAAgBA,QAAhB;AACA,eAAKC,YAAL,GAAoBA,YAApB;AACA,eAAKC,WAAL,GAAmBA,WAAnB;AACA,eAAKM,UAAL;AACH;;AAEOA,QAAAA,UAAU,GAAO;AACrB,cAAG,CAAC,KAAKT,MAAN,IAAgB,CAAC,KAAKC,QAAzB,EAAmC;AACnC,eAAKH,QAAL,CAAca,MAAd,GAAuB,KAAKT,YAA5B;AACA,eAAKH,GAAL,CAASY,MAAT,GAAkB,KAAKR,WAAvB;AACA,cAAIS,GAAW,GAAG;AAAA;AAAA,gCAAOC,OAAP,CAAe,KAAKZ,QAApB,CAAlB;;AACA,cAAGW,GAAH,EAAO;AACH,gBAAIE,OAAO,GAAGxB,IAAI,CAACyB,IAAL;AAAA;AAAA,4CAAuBH,GAAG,CAACf,IAA3B,EAAiC,aAAjC,CAAd;AACA;AAAA;AAAA,kCAAOmB,YAAP,CAAoBF,OAApB,EAA6BtB,WAA7B,EAA0CyB,GAAG,IAAI;AAC7C,mBAAKpB,IAAL,CAAUqB,WAAV,GAAwBD,GAAxB;AACH,aAFD;AAGH;AACJ;;AAtCwC,O","sourcesContent":["import { Component, Input, Label, Node, path, sp, Sprite, SpriteFrame } from \"cc\";\r\nimport { CfgMgr, StdHead } from \"../../manager/CfgMgr\";\r\nimport { card_quality, folder_head, folder_icon, ResMgr } from \"../../manager/ResMgr\";\r\nimport { Second, Utils } from \"../../utils/Utils\";\r\nimport proto from \"../../net/Protocol\";\r\nimport { EventMgr, Evt_Card_Chage, Evt_Item_Change } from \"../../manager/EventMgr\";\r\nimport { PlayerData } from \"../player/PlayerData\";\r\n\r\nexport class CardGroupHead extends Component {\r\n    private headBg:Node;\r\n    private icon:Sprite;\r\n    private favorite:Node;\r\n    private use:Node;\r\n    private isInit:boolean = false;\r\n    private avatarId:number;\r\n    private is_show_like:boolean;\r\n    private is_show_use:boolean;\r\n    protected onLoad(): void {\r\n        this.headBg = this.node.getChildByName(\"headBg\");\r\n        this.icon = this.node.getChildByPath(\"Mask/icon\").getComponent(Sprite);\r\n        this.favorite = this.node.getChildByName(\"favorite\");\r\n        this.use = this.node.getChildByName(\"use\");\r\n        this.isInit = true;\r\n        this.updateShow();\r\n    }\r\n\r\n\r\n\r\n    SetData(avatarId:number, is_show_like:boolean = false, is_show_use:boolean = false) {\r\n        this.avatarId = avatarId;\r\n        this.is_show_like = is_show_like;\r\n        this.is_show_use = is_show_use;\r\n        this.updateShow();\r\n    }\r\n\r\n    private updateShow():void{\r\n        if(!this.isInit || !this.avatarId) return;\r\n        this.favorite.active = this.is_show_like;\r\n        this.use.active = this.is_show_use;\r\n        let std:StdHead = CfgMgr.GetHead(this.avatarId);\r\n        if(std){\r\n            let headUrl = path.join(folder_head, std.icon, \"spriteFrame\");\r\n            ResMgr.LoadResAbSub(headUrl, SpriteFrame, res => {\r\n                this.icon.spriteFrame = res;\r\n            });\r\n        }\r\n    }\r\n}"]}