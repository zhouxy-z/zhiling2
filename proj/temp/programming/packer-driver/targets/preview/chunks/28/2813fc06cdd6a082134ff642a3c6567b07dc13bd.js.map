{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/battle/opOutput/Out_WaitPlayerShow.ts"],"names":["Out_WaitPlayerShow","DecodeReq","Protocol","Session","DateUtils","PlayerData","BattleBaseComp","battleDataMgr","start","on","battleroomroundshowend","onBattleroomroundshowend","data","server","roomId","roomData","Send","reset","onUpdate","dt","ServerTime","timeout","exit","result","res","code"],"mappings":";;;kHAUaA,kB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AATJC,MAAAA,S,iBAAAA,S;AAAWC,MAAAA,Q,iBAAAA,Q;;AACXC,MAAAA,O,iBAAAA,O;;AACAC,MAAAA,S,iBAAAA,S;;AACAC,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,c,iBAAAA,c;;AACAC,MAAAA,a,iBAAAA,a;;;;;;;AACT;AACA;AACA;oCACaP,kB,GAAN,MAAMA,kBAAN;AAAA;AAAA,4CAAyF;AAElFQ,QAAAA,KAAK,GAAS;AACpB;AAAA;AAAA,kCAAQC,EAAR,CAAW;AAAA;AAAA,oCAASC,sBAApB,EAA4C,KAAKC,wBAAjD,EAA2E,IAA3E;AACA,cAAIC,IAAI,GAAG,IAAI;AAAA;AAAA,oCAASF,sBAAb,EAAX;AACAE,UAAAA,IAAI,CAACC,MAAL,GAAc;AAAA;AAAA,wCAAWA,MAAzB;AACAD,UAAAA,IAAI,CAACE,MAAL,GAAc;AAAA;AAAA,8CAAcC,QAAd,CAAuBD,MAArC;AACA;AAAA;AAAA,kCAAQE,IAAR,CAAaJ,IAAb;AACH;;AACSK,QAAAA,KAAK,GAAS,CAEvB;;AAESC,QAAAA,QAAQ,CAACC,EAAD,EAAmB;AACjC,cAAI;AAAA;AAAA,sCAAUC,UAAV,IAAwB,KAAKR,IAAL,CAAUS,OAAtC,EAA8C;AAC1C,iBAAKC,IAAL;AACH;AACJ;;AAEOX,QAAAA,wBAAwB,CAACC,IAAD,EAAkB;AAC9C,cAAIW,MAAM,GAAG;AAAA;AAAA,sCAAUb,sBAAV,CAAiCE,IAAjC,CAAb;AACA,cAAIW,MAAM,CAACC,GAAP,CAAWC,IAAX,IAAmB,GAAvB,EAA4B,KAAKH,IAAL;AAC/B;;AAtB2F,O","sourcesContent":["import { base } from \"../../../net/proto/proto\";\r\nimport { DecodeReq, Protocol } from \"../../../net/Protocol\";\r\nimport { Session } from \"../../../net/Session\";\r\nimport { DateUtils } from \"../../../utils/DateUtils\";\r\nimport { PlayerData } from \"../../player/PlayerData\";\r\nimport { BattleBaseComp } from \"../BattleBaseComp\";\r\nimport { battleDataMgr } from \"../BattleDataMgr\";\r\n/**\r\n * 等待客户端表现完毕\r\n */\r\nexport class Out_WaitPlayerShow extends BattleBaseComp<base.IBattleRoomOpOutput_WaitPlayerShow> {\r\n\r\n    protected start(): void {\r\n        Session.on(Protocol.battleroomroundshowend, this.onBattleroomroundshowend, this);\r\n        let data = new Protocol.battleroomroundshowend();\r\n        data.server = PlayerData.server;\r\n        data.roomId = battleDataMgr.roomData.roomId;\r\n        Session.Send(data);\r\n    }\r\n    protected reset(): void {\r\n    \r\n    }\r\n\r\n    protected onUpdate(dt: number): void {\r\n        if (DateUtils.ServerTime >= this.data.timeout){\r\n            this.exit();\r\n        }\r\n    }\r\n\r\n    private onBattleroomroundshowend(data: any): void {\r\n        let result = DecodeReq.battleroomroundshowend(data);\r\n        if (result.res.code == 200) this.exit();\r\n    }\r\n\r\n    \r\n}"]}