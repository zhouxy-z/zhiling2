{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/fight/opOutput/Out_NewRound.ts"],"names":["Out_NewRound","Battle_End_Round","Battle_PlayNewRoundEffect","Battle_UpdateTerrain","EventMgr","BattleBaseComp","battleDataMgr","FightData","isInitCardEnd","isPlayEffectEnd","start","setRoomData","isExit","currentRound","curRound","scene","FlushRound","round","roomData","roundMax","finalValue","emit","on","onRoundEffectPlayEnd","reset","off","onUpdate","dt","exit","playerData","isPlayerA","key","data","gamePlayData","players","terrainMax","playerId","FlushPlayerInfo","totalPower","areaIdx","cardData","terrain","FlushAreaCrads","getPlayerTerrainTotalPow","FlushAreaPower","setHandCard","handCards","curEnergy","roundEnergy","FlushEnergy","FlushTerrain","ownerPlayerId","terrains","cards","FlushHandCard"],"mappings":"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","sourcesContent":["import { Battle_End_Round, Battle_PlayNewRoundEffect, Battle_UpdateTerrain, EventMgr } from \"../../../manager/EventMgr\";\r\nimport proto from \"../../../net/Protocol\";\r\nimport { BattleBaseComp } from \"../../battle/BattleBaseComp\";\r\nimport { battleDataMgr } from \"../../battle/BattleDataMgr\";\r\nimport { FightData } from \"../FightData\";\r\n\r\n/**\r\n * 新回合\r\n */\r\nexport class Out_NewRound extends BattleBaseComp<proto.base.IBattleRoomOpOutput_NewRound> {\r\n    private isInitCardEnd: boolean = false;//是否初始化手牌完成\r\n    private isPlayEffectEnd: boolean = false;//是否播放回合开始动画结束\r\n    protected async start() {\r\n        await this.setRoomData();\r\n        if (this.isExit) return;\r\n        FightData.currentRound = battleDataMgr.curRound;\r\n        this.scene.FlushRound(this.round, battleDataMgr.roomData.roundMax.finalValue);\r\n        EventMgr.emit(Battle_PlayNewRoundEffect, this.round, battleDataMgr.roomData.roundMax.finalValue);\r\n        EventMgr.on(Battle_End_Round, this.onRoundEffectPlayEnd, this);\r\n    }\r\n\r\n    protected reset(): void {\r\n        this.isInitCardEnd = false;\r\n        this.isPlayEffectEnd = false;\r\n        EventMgr.off(Battle_End_Round, this.onRoundEffectPlayEnd, this);\r\n    }\r\n\r\n    protected onUpdate(dt: number): void {\r\n        if (!this.isInitCardEnd) return;\r\n        if (!this.isPlayEffectEnd) return;\r\n        //全部动作完成退出播放\r\n        this.exit();\r\n    }\r\n    private onRoundEffectPlayEnd(): void {\r\n        this.isPlayEffectEnd = true;\r\n    }\r\n    /**\r\n     * 初始化房间数据\r\n     */\r\n    private async setRoomData() {\r\n\r\n        // 刷新场景手牌和卡牌\r\n        let playerData: proto.base.IBattleRoomPlayerData;\r\n        let isPlayerA: boolean;\r\n        for (let key in this.data.gamePlayData.players) {\r\n            playerData = this.data.gamePlayData.players[key];\r\n\r\n            let terrainMax = battleDataMgr.roomData.terrainMax;\r\n            isPlayerA = battleDataMgr.isPlayerA(playerData.playerId);\r\n            this.scene.FlushPlayerInfo(isPlayerA, playerData);\r\n            let totalPower: number;\r\n            for (let areaIdx = 0; areaIdx < terrainMax; areaIdx++) {\r\n                let cardData: proto.base.IBattleRoomTerrainPlayerData = playerData.terrain[areaIdx]\r\n                await this.scene.FlushAreaCrads(isPlayerA, areaIdx, cardData);\r\n                if (this.isExit) return;\r\n                totalPower = battleDataMgr.getPlayerTerrainTotalPow(playerData.playerId, areaIdx);\r\n                this.scene.FlushAreaPower(isPlayerA, areaIdx, totalPower);\r\n            }\r\n\r\n            if (isPlayerA) {\r\n                await this.setHandCard(playerData.handCards);\r\n                if (this.isExit) return;\r\n                let curEnergy: number = playerData.roundEnergy[this.round - 1]?.finalValue;\r\n                this.scene.FlushEnergy(curEnergy);\r\n            }\r\n        }\r\n\r\n        // 初始场景区域\r\n        await this.scene.FlushTerrain(true, this.data.gamePlayData, this.ownerPlayerId);\r\n        if (this.isExit) return;\r\n        EventMgr.emit(Battle_UpdateTerrain, this.data.gamePlayData.terrains, this.data.gamePlayData);\r\n    }\r\n\r\n    /**\r\n     * 设置手卡数据\r\n     */\r\n    private async setHandCard(cards: proto.base.IBattleRoomCardData[]) {\r\n        await this.scene.FlushHandCard(cards);\r\n        if (this.isExit) return;\r\n        this.isInitCardEnd = true;\r\n    }\r\n\r\n}"]}