{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/common/CardTipsPanel.ts"],"names":["CardTipsPanel","Button","easing","Label","tween","v3","Panel","Card","PlayerData","CfgMgr","prefab","maskBtn","closeBtn","card","skillDescLab","cardData","onLoad","find","addComponent","node","on","EventType","CLICK","onBtnClick","onShow","flush","cardCfgId","cardId","GetCardDataById","CreateCardData","skillDesc","GetCardSkillDesc","string","showCard","onHide","btn","Hide","interactable","active","SetData","scale","to","backOut","call","start"],"mappings":"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","sourcesContent":["import { Button, easing, Label, RichText, tween, v3 } from \"cc\";\r\nimport { Panel } from \"../../manager/GameRoot\";\r\nimport { Card } from \"../cards/Card\";\r\nimport proto from \"../../net/Protocol\";\r\nimport { PlayerData } from \"../player/PlayerData\";\r\nimport { CfgMgr, StdCard } from \"../../manager/CfgMgr\";\r\n\r\nexport class CardTipsPanel extends Panel {\r\n    protected prefab: string = \"prefabs/common/CardTipsPanel\";\r\n    private maskBtn: Button;\r\n    private closeBtn: Button;\r\n    private card: Card;\r\n    private skillDescLab: Label;\r\n    private cardData: proto.base.IBattleCard;\r\n    protected onLoad(): void {\r\n        this.card = this.find(\"Cards\").addComponent(Card);\r\n        this.skillDescLab = this.find(\"skillDescLab\", Label);\r\n        this.maskBtn = this.find(\"mask\", Button);\r\n        this.closeBtn = this.find(\"closeBtn\", Button);\r\n        this.maskBtn.node.on(Button.EventType.CLICK, this.onBtnClick, this);\r\n        this.closeBtn.node.on(Button.EventType.CLICK, this.onBtnClick, this);\r\n    }\r\n    protected onShow(): void {\r\n        \r\n    }\r\n\r\n    public flush(cardCfgId: number, cardId: string = null): void {\r\n        let cardData: proto.base.IBattleCard = PlayerData.GetCardDataById(cardId);\r\n        if (cardData) {\r\n            this.cardData = cardData;\r\n        } else {\r\n            this.cardData = PlayerData.CreateCardData(cardCfgId);\r\n        }\r\n        \r\n        let skillDesc: string = CfgMgr.GetCardSkillDesc(cardCfgId);\r\n        this.skillDescLab.string = skillDesc;\r\n        this.showCard();\r\n    }\r\n\r\n    protected onHide(): void {\r\n        \r\n    }\r\n\r\n    private onBtnClick(btn: Button): void {\r\n        switch(btn) {\r\n            case this.maskBtn:\r\n            case this.closeBtn:\r\n                this.Hide();\r\n                break;\r\n        }\r\n    }\r\n\r\n    private showCard(): void {\r\n        this.maskBtn.interactable = false;\r\n        this.closeBtn.node.active = false;\r\n        this.skillDescLab.node.active = false;\r\n        this.card.SetData(this.cardData);\r\n        this.card.node.scale = v3(0.5, 0.5, 0.5);\r\n        tween(this.card.node)\r\n        .to(0.5,{scale:v3(2, 2, 2)}, { easing: easing.backOut })\r\n        .call(() => {\r\n            this.maskBtn.interactable = true;\r\n            this.closeBtn.node.active = true;\r\n            this.skillDescLab.node.active = true;\r\n        })\r\n        .start();\r\n    }\r\n}"]}