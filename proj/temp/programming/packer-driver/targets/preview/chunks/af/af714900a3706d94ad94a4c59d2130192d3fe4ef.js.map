{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/cardCollect/CardCollectLvContItem.ts"],"names":["CardCollectLvContItem","Button","Component","Label","Layout","path","Sprite","SpriteFrame","UIOpacity","UITransform","v3","Card","CfgMgr","ItemType","ThingName","folder_icon","folder_item","ResMgr","PlayerData","Req","Route","MsgPanel","Session","sectionCont","lineCont","cont","btn","bg1","bg2","cardBg","card","fenchenBg","itemCont","itemIcon","itemNameLab","getImg","line","linePos","lvBg1","lvBg2","lvBg3","lvLab1","lvLab2","lvLab3","lock","canGetEffect","curLv","isInit","data","awardData","index","onLoad","node","getChildByPath","getComponent","addComponent","active","updateShow","onEnable","on","EventType","CLICK","onBtnClick","onDisable","off","toSendUp","stdPlayerLevel","Level","Show","GetUpgradeAward","level","Send","console","log","SetData","updateLine","updateAward","updateDire","updateLv","sectionList","lineNum","length","updateSize","children","getChildByName","targetLv","push","updateLayout","width","bg","iconStr","numStr","undefined","RewardPool","rewardType","battlecard","stdCardDeliver","GetBattleCardDeliver","rewardId","opacity","cardData","CreateCardData","CardID","CardQuality","LoadResAbSub","join","quality","res","spriteFrame","item","stdItem","Getitem","Icon","ItemName","rewardNum","Itemtpye","piece","icon","randomName","RewardID","RewardNumber","string","toString","isTop","position","x","lvStr","playUpEffect","delay","playTime","scheduleOnce"],"mappings":"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","sourcesContent":["import { Button, Color, Component, instantiate, Label, Layout, Node, path, Sprite, SpriteFrame, UIOpacity, UITransform, v3, Vec3 } from \"cc\";\r\nimport { Card } from \"../cards/Card\";\r\nimport { CfgMgr, ItemType, StdBattleCardDelivery, StdItem, StdPlayerLevel, StdPlayerLevelAward, ThingName } from \"../../manager/CfgMgr\";\r\nimport { card_quality, folder_icon, folder_item, ResMgr } from \"../../manager/ResMgr\";\r\nimport { PlayerData } from \"../player/PlayerData\";\r\nimport proto, { Req, Route } from \"../../net/Protocol\";\r\nimport { MsgPanel } from \"../common/MsgPanel\";\r\nimport { Session } from \"../../net/Session\";\r\n\r\nexport class CardCollectLvContItem extends Component {\r\n    private sectionCont: Node;\r\n    private lineCont: Node;\r\n    private cont: Node;\r\n    private btn: Button;\r\n    private bg1: Node;\r\n    private bg2: Node;\r\n    private cardBg: Sprite;\r\n    private card: Card;\r\n    private fenchenBg: Node;\r\n    private itemCont: Node;\r\n    private itemIcon: Sprite;\r\n    private itemNameLab: Label;\r\n    private getImg: Node;\r\n    private line: Node;\r\n    private linePos: Vec3;\r\n    private lvBg1: Node;\r\n    private lvBg2: Node;\r\n    private lvBg3: Node;\r\n    private lvLab1: Label;\r\n    private lvLab2: Label;\r\n    private lvLab3: Label;\r\n    private lock: Node;\r\n    private canGetEffect: Node;\r\n    private curLv: number;\r\n    private isInit: boolean = false;\r\n    private data: StdPlayerLevelAward;\r\n    private awardData: proto.base.IPlayerLevelRewardCache;\r\n    private index: number;\r\n    protected onLoad(): void {\r\n        this.sectionCont = this.node.getChildByPath(\"sectionCont\");\r\n        this.lineCont = this.node.getChildByPath(\"sectionCont/lineCont\");\r\n        this.cont = this.node.getChildByPath(\"cont\");\r\n        this.btn = this.node.getChildByPath(\"cont\").getComponent(Button);\r\n        this.bg1 = this.node.getChildByPath(\"cont/bg1\");\r\n        this.bg2 = this.node.getChildByPath(\"cont/bg2\");\r\n        this.cardBg = this.node.getChildByPath(\"cont/cardBg\").getComponent(Sprite);\r\n        this.card = this.node.getChildByPath(\"cont/Cards\").addComponent(Card);\r\n        this.fenchenBg = this.node.getChildByPath(\"cont/fenchenBg\");\r\n        this.itemCont = this.node.getChildByPath(\"cont/itemCont\");\r\n        this.itemIcon = this.node.getChildByPath(\"cont/itemCont/itemIcon\").getComponent(Sprite);\r\n        this.itemNameLab = this.node.getChildByPath(\"cont/itemCont/itemNumLab\").getComponent(Label);\r\n        this.line = this.node.getChildByPath(\"line\");\r\n        this.lvBg1 = this.node.getChildByPath(\"lvCont/lvBg1\");\r\n        this.lvBg2 = this.node.getChildByPath(\"lvCont/lvBg2\");\r\n        this.lvBg3 = this.node.getChildByPath(\"lvCont/lvBg3\");\r\n        this.lvLab1 = this.node.getChildByPath(\"lvCont/lvLab1\").getComponent(Label);\r\n        this.lvLab2 = this.node.getChildByPath(\"lvCont/lvLab2\").getComponent(Label);\r\n        this.lvLab3 = this.node.getChildByPath(\"lvCont/lvLab3\").getComponent(Label);\r\n        this.getImg = this.node.getChildByPath(\"cont/getImg\");\r\n        this.canGetEffect = this.node.getChildByPath(\"cont/canGetEffect\");\r\n        this.lock = this.node.getChildByPath(\"cont/lock\");\r\n        this.canGetEffect.active = false;\r\n        this.isInit = true;\r\n        this.updateShow();\r\n    }\r\n    protected onEnable(): void {\r\n        this.btn.node.on(Button.EventType.CLICK, this.onBtnClick, this);\r\n    }\r\n    protected onDisable(): void {\r\n        this.btn.node.off(Button.EventType.CLICK, this.onBtnClick, this);\r\n    }\r\n\r\n    private onBtnClick(btn: Button): void {\r\n        switch(btn) {\r\n            case this.btn:\r\n                this.toSendUp();\r\n            break;\r\n        }\r\n    }\r\n\r\n    private toSendUp(): void {\r\n        if (this.curLv < this.data.stdPlayerLevel.Level) {\r\n            MsgPanel.Show(\"未达到领取等级\");\r\n            return;\r\n        }\r\n        if (PlayerData.GetUpgradeAward(this.data.stdPlayerLevel.Level)) {\r\n            MsgPanel.Show(\"不可重复领取\");\r\n            return;\r\n        }\r\n        let data = new Req['logic.protocol.playerlevelrewardclaim']();\r\n        data.level = this.data.stdPlayerLevel.Level;\r\n        Session.Send(Route['logic.protocol.playerlevelrewardclaim'], data);\r\n        console.log(`发送领取---->${data.level}级奖励`);\r\n    }\r\n\r\n    SetData(data: StdPlayerLevelAward, curLv: number, index: number): void {\r\n        this.data = data;\r\n        this.curLv = curLv;\r\n        this.index = index;\r\n        this.updateShow();\r\n    }\r\n\r\n    private updateShow(): void {\r\n        if (!this.isInit || !this.data) return;\r\n        this.updateLine();\r\n        this.awardData = PlayerData.GetUpgradeAward(this.data.stdPlayerLevel.Level);\r\n        this.updateAward();\r\n        this.updateDire();\r\n        this.updateLv();\r\n    }\r\n\r\n    private updateLine(): void {\r\n        if (this.data.sectionList != null) {\r\n            this.sectionCont.active = true;\r\n            let lineNum: number = this.data.sectionList.length + 1;\r\n            let node: Node;\r\n            let updateSize: Node[] = [];\r\n            for (let index = 0; index < this.lineCont.children.length; index++) {\r\n                node = this.lineCont.children[index];\r\n                if (index < lineNum) {\r\n                    node.active = true;\r\n                    let line: Node = node.getChildByName(\"line\");\r\n                    let targetLv: number = this.data.stdPlayerLevel.Level + (index + 1);\r\n                    line.active = this.curLv >= targetLv;\r\n                    updateSize.push(node);\r\n                } else {\r\n                    node.active = false;\r\n                }\r\n            }\r\n            this.lineCont.getComponent(Layout).updateLayout();\r\n            for (let node of updateSize) {\r\n                let width: number = node.getComponent(UITransform).width;\r\n                let line: Node = node.getChildByName(\"line\");\r\n                line.getComponent(UITransform).width = width;\r\n                let bg: Node = node.getChildByName(\"lineBg\");\r\n                bg.getComponent(UITransform).width = width;\r\n            }\r\n        } else {\r\n            this.sectionCont.active = false;\r\n        }\r\n    }\r\n\r\n    private updateAward(): void {\r\n        let iconStr: string;\r\n        let numStr: string = \"\";\r\n        this.getImg.active = this.awardData != undefined;\r\n        this.bg2.active = this.awardData != undefined;\r\n        this.card.node.active = false;\r\n        this.cardBg.node.active = false;\r\n        this.canGetEffect.active = false;\r\n        this.fenchenBg.active = false;\r\n        this.lock.active = true;\r\n        if (this.data.stdPlayerLevel.RewardPool > 0) {\r\n            //已领取\r\n            if (this.awardData) {\r\n                this.lock.active = false;\r\n                this.bg2.active = true;\r\n                iconStr = null;\r\n                if (this.awardData.rewardType == ThingName.battlecard) {\r\n                    let stdCardDeliver: StdBattleCardDelivery = CfgMgr.GetBattleCardDeliver(this.awardData.rewardId);\r\n                    if (stdCardDeliver) {\r\n                        this.cardBg.node.active = true;\r\n                        this.card.node.active = true;\r\n                        this.cardBg.getComponent(UIOpacity).opacity = 127;\r\n                        this.card.getComponent(UIOpacity).opacity = 168;\r\n                        //this.card.setCardMask(true);\r\n                        let cardData: proto.base.IBattleCard = PlayerData.CreateCardData(stdCardDeliver.CardID, stdCardDeliver.CardQuality);\r\n                        this.card.SetData(cardData);\r\n                        \r\n                        ResMgr.LoadResAbSub(path.join(folder_icon, `card_bg${cardData.quality}`, \"spriteFrame\"), SpriteFrame, (res: SpriteFrame) => {\r\n                            this.itemIcon.spriteFrame = res;\r\n                        });\r\n                    }\r\n                } else if (this.awardData.rewardType == ThingName.item) {\r\n                    let stdItem: StdItem = CfgMgr.Getitem(this.awardData.rewardId);\r\n                    iconStr = path.join(folder_item, stdItem.Icon, \"spriteFrame\");\r\n                    numStr = `${stdItem.ItemName}x${this.awardData.rewardNum}`;\r\n                    this.fenchenBg.active = stdItem.Itemtpye == ItemType.piece;\r\n                    this.fenchenBg.getComponent(UIOpacity).opacity = 168;\r\n                    this.itemCont.getComponent(UIOpacity).opacity = 168;\r\n                }\r\n                \r\n            } else {\r\n                iconStr = path.join(folder_item, this.data.stdPlayerLevel.icon, \"spriteFrame\");\r\n                numStr = this.data.stdPlayerLevel.randomName;\r\n                this.itemCont.getComponent(UIOpacity).opacity = 255;\r\n                if (this.curLv >= this.data.stdPlayerLevel.Level) {\r\n                    this.lock.active = false;\r\n                }\r\n            } \r\n            \r\n        } else {\r\n            if (this.data.stdPlayerLevel.RewardID > 0) {\r\n                let stdItem: StdItem = CfgMgr.Getitem(this.data.stdPlayerLevel.RewardID);\r\n                if (stdItem) {\r\n                    iconStr = path.join(folder_item, stdItem.Icon, \"spriteFrame\");\r\n                    numStr = `${stdItem.ItemName} x ${this.data.stdPlayerLevel.RewardNumber}`;\r\n                }\r\n                \r\n            }\r\n            if (this.awardData) {\r\n                this.lock.active = false;\r\n                this.itemCont.getComponent(UIOpacity).opacity = 168;\r\n            } else {\r\n                this.itemCont.getComponent(UIOpacity).opacity = 255;\r\n                if (this.curLv >= this.data.stdPlayerLevel.Level) {\r\n                    this.lock.active = false;\r\n                }\r\n            }\r\n        }\r\n    \r\n        if (iconStr) {\r\n            this.itemCont.active = true;\r\n            ResMgr.LoadResAbSub(iconStr, SpriteFrame, (res: SpriteFrame) => {\r\n                this.itemIcon.spriteFrame = res;\r\n            });\r\n            this.itemNameLab.string = numStr ? numStr.toString() : \"\";\r\n        } else {\r\n            this.itemCont.active = false;\r\n        }\r\n        if (this.curLv >= this.data.stdPlayerLevel.Level && !PlayerData.GetUpgradeAward(this.data.stdPlayerLevel.Level)) {\r\n            this.canGetEffect.active = true;    \r\n        }\r\n        \r\n    }\r\n\r\n    private updateDire(): void {\r\n        let isTop: boolean = (this.index % 2) == 0;\r\n        if (isTop) {\r\n            this.cont.position = v3(this.cont.position.x, 140, 0);\r\n            this.line.position = v3(this.line.position.x, 22, 0);\r\n        } else {\r\n            this.cont.position = v3(this.cont.position.x, -132, 0);\r\n            this.line.position = v3(this.line.position.x, -22, 0);\r\n        }\r\n    }\r\n\r\n    private updateLv(): void {\r\n        this.lvLab1.node.active = false;\r\n        this.lvLab2.node.active = false;\r\n        this.lvLab3.node.active = false;\r\n        if (this.data.stdPlayerLevel.Level < this.curLv) {\r\n            this.lvLab2.node.active = true;\r\n            this.lvBg1.active = true;\r\n            this.lvBg2.active = false;\r\n            this.lvBg3.active = false;\r\n        } else if (this.data.stdPlayerLevel.Level == this.curLv) {\r\n            this.lvLab3.node.active = true;\r\n            this.lvBg1.active = false;\r\n            this.lvBg2.active = true;\r\n            this.lvBg3.active = false;\r\n        } else if (this.data.stdPlayerLevel.Level > this.curLv) {\r\n            this.lvLab1.node.active = true;\r\n            this.lvBg1.active = false;\r\n            this.lvBg2.active = false;\r\n            this.lvBg3.active = true;\r\n        }\r\n        let lvStr: string = this.data.stdPlayerLevel.Level.toString();\r\n        this.lvLab1.string = lvStr;\r\n        this.lvLab2.string = lvStr;\r\n        this.lvLab3.string = lvStr;\r\n\r\n    }\r\n\r\n    public playUpEffect(delay: number, curLv: number): number {\r\n        let playTime: number = 0;\r\n        playTime += delay;\r\n        this.scheduleOnce(() => {\r\n            this.updateAward();\r\n            this.updateLv();\r\n        }, delay);\r\n        playTime += 0.05;\r\n        if (this.data.sectionList != null) {\r\n            let node: Node;\r\n            let lineNum: number = this.data.sectionList.length + 1;\r\n            for (let index = 0; index < this.lineCont.children.length; index++) {\r\n                if (index < lineNum) {\r\n                    node = this.lineCont.children[index];\r\n                    let line: Node = node.getChildByName(\"line\");\r\n                    if (!line.active) {\r\n                        let targetLv: number = this.data.stdPlayerLevel.Level + (index + 1);\r\n                        if (curLv >= targetLv) {\r\n                            //playNodeList.push(line);\r\n                            this.scheduleOnce(() => {\r\n                                line.active = true;\r\n                            }, playTime);\r\n                            playTime += 0.05;\r\n                        }\r\n                    }\r\n                }\r\n                \r\n            }\r\n        }\r\n        this.curLv = curLv;\r\n        return playTime;\r\n    }\r\n\r\n}"]}