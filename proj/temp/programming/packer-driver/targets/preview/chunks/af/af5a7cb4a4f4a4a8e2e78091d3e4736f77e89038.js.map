{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/vs/VSPanel.ts"],"names":["VSPanel","Button","easing","Label","sp","Tween","tween","UITransform","v3","Panel","MsgPanel","EventMgr","Evt_Cancel_Match","Evt_EnterFight","Evt_Match_Complete","Evt_Start_Match","proto","Req","Route","PlayerData","Session","DateUtils","VsPlayerItem","prefab","closeBtn","effect1","timeLab","VsPlayerItemA","VsPlayerItemB","isStartVs","isVsWin","sendOverTime","battleMode","onLoad","find","Skeleton","addComponent","node","on","EventType","CLICK","onBtnClick","update","dt","flush","active","string","SetData","UserInfo","nickName","CurFightCardGroup","playStartVsEffect","clearAnimation","setAnimation","setCompleteListener","onShow","onStartVs","onCancelVs","onVsComplete","onEnterFight","onHide","off","stopAllByTarget","itemW","getComponent","width","totalW","offsetX","position","to","quintIn","start","call","sendStartVs","playEndVsEffect","btn","Show","sendCancelVs","ServerTime","startBattle","deckId","id","Send","result","startVs","Hide","curRoom","shoVsInfo","vsWin","scheduleOnce","exitVs","playerDataB","base","create","playerName","cardData","key","players","playerData","playerId","player","deckAttr","name"],"mappings":"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","sourcesContent":["\r\nimport { Button, easing, Label, sp, Tween, tween, UITransform, v3 } from \"cc\";\r\nimport { Panel } from \"../../manager/GameRoot\";\r\nimport { MsgPanel } from \"../common/MsgPanel\";\r\nimport { EventMgr, Evt_Cancel_Match, Evt_EnterFight, Evt_Match_Complete, Evt_Start_Match } from \"../../manager/EventMgr\";\r\nimport proto, { Req, Route } from \"../../net/Protocol\";\r\nimport { PlayerData } from \"../player/PlayerData\";\r\nimport { Session } from \"../../net/Session\";\r\nimport { DateUtils } from \"../../utils/DateUtils\";\r\nimport { VsPlayerItem } from \"./VsPlayerItem\";\r\nimport { TopUI } from \"../main/TopUI\";\r\n\r\nexport class VSPanel extends Panel {\r\n    protected prefab: string = \"prefabs/vs/VSPanel\";\r\n    private closeBtn: Button;\r\n    private effect1: sp.Skeleton;\r\n    private timeLab: Label;\r\n    private VsPlayerItemA: VsPlayerItem;\r\n    private VsPlayerItemB: VsPlayerItem;\r\n    private isStartVs: boolean;\r\n    private isVsWin: boolean;\r\n    private sendOverTime: number;\r\n    private battleMode: proto.base.BattleMode;\r\n    protected onLoad() {\r\n        this.effect1 = this.find(\"effect1\", sp.Skeleton);\r\n        this.VsPlayerItemA = this.find(\"playerCont/VsPlayerItemA\").addComponent(VsPlayerItem);\r\n        this.VsPlayerItemB = this.find(\"playerCont/VsPlayerItemB\").addComponent(VsPlayerItem);\r\n        this.timeLab = this.find(\"timeLab\", Label);\r\n        this.closeBtn = this.find(\"closeBtn\", Button);\r\n        this.closeBtn.node.on(Button.EventType.CLICK, this.onBtnClick, this);\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        \r\n    }\r\n\r\n    public flush(battleMode: proto.base.BattleMode): void {\r\n        this.battleMode = battleMode;\r\n        this.sendOverTime = 0;\r\n        this.closeBtn.node.active = false;\r\n        this.timeLab.string = \"\";\r\n        this.isVsWin = false;\r\n        this.isStartVs = false;\r\n        this.VsPlayerItemA.SetData(PlayerData.UserInfo.nickName, PlayerData.CurFightCardGroup, true);\r\n        this.VsPlayerItemB.SetData(null, null);\r\n        this.playStartVsEffect();\r\n        this.effect1.clearAnimation();\r\n        this.effect1.setAnimation(0, \"start\", false);\r\n        this.effect1.setCompleteListener(() => {\r\n            \r\n        });\r\n        \r\n    }\r\n\r\n    protected onShow(): void {\r\n        EventMgr.on(Evt_Start_Match, this.onStartVs, this);\r\n        EventMgr.on(Evt_Cancel_Match, this.onCancelVs, this);\r\n        EventMgr.on(Evt_Match_Complete, this.onVsComplete, this);\r\n        EventMgr.on(Evt_EnterFight, this.onEnterFight, this);\r\n        \r\n    }\r\n\r\n    protected onHide(): void {\r\n       \r\n        EventMgr.off(Evt_Start_Match, this.onStartVs, this);\r\n        EventMgr.off(Evt_Cancel_Match, this.onCancelVs, this);\r\n        EventMgr.off(Evt_Match_Complete, this.onVsComplete, this);\r\n        EventMgr.off(Evt_EnterFight, this.onEnterFight, this);\r\n    }\r\n\r\n    private playStartVsEffect(): void {\r\n        Tween.stopAllByTarget(this.VsPlayerItemA);\r\n        Tween.stopAllByTarget(this.VsPlayerItemB);\r\n        let itemW: number = this.VsPlayerItemA.node.getComponent(UITransform).width;\r\n        let totalW: number = this.node.getComponent(UITransform).width;\r\n        let offsetX: number = totalW * 0.5  + itemW * 0.5; \r\n        this.VsPlayerItemA.node.position = v3(-offsetX, 0 , 0);\r\n        this.VsPlayerItemB.node.position = v3(offsetX, 0 , 0);\r\n        tween(this.VsPlayerItemA.node)\r\n        .to(1, { position: v3(-380, 0, 0) }, { easing: easing.quintIn })\r\n        .start();\r\n\r\n        tween(this.VsPlayerItemB.node)\r\n        .to(1, { position: v3(380, 0, 0) }, { easing: easing.quintIn })\r\n        .call(() => {\r\n            this.sendStartVs();\r\n        })\r\n        .start();\r\n    }\r\n\r\n    private playEndVsEffect(): void {\r\n        Tween.stopAllByTarget(this.VsPlayerItemA);\r\n        Tween.stopAllByTarget(this.VsPlayerItemB);\r\n        let itemW: number = this.VsPlayerItemA.node.getComponent(UITransform).width;\r\n        let totalW: number = this.node.getComponent(UITransform).width;\r\n        let offsetX: number = totalW * 0.5  + itemW * 0.5; \r\n        this.VsPlayerItemA.node.position = v3(-380, 0 , 0);\r\n        this.VsPlayerItemB.node.position = v3(380, 0 , 0);\r\n        tween(this.VsPlayerItemA.node)\r\n        .to(0.5, { position: v3(-offsetX, 0, 0) }, { easing: easing.quintIn })\r\n        .start();\r\n\r\n        tween(this.VsPlayerItemB.node)\r\n        .to(0.5, { position: v3(offsetX, 0, 0) }, { easing: easing.quintIn })\r\n        .start();\r\n    }\r\n\r\n    private onBtnClick(btn: Button): void {\r\n        switch (btn) {\r\n            case this.closeBtn:\r\n                if (this.isStartVs) {\r\n                    if (this.isVsWin) {\r\n                        MsgPanel.Show(\"正在进入战斗场景，不可取消\");\r\n                        return;\r\n                    }\r\n                    this.sendCancelVs();\r\n                } else {\r\n                    if (DateUtils.ServerTime > this.sendOverTime) {\r\n                        //this.Hide();\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    private sendStartVs(): void {\r\n        this.effect1.setAnimation(0, \"loop\", true);\r\n        this.closeBtn.node.active = true;\r\n        this.sendOverTime = DateUtils.ServerTime + 3;\r\n        let startBattle = new Req[\"match.protocol.matchmaking\"]();\r\n        startBattle.deckId = PlayerData.CurFightCardGroup.id;\r\n        startBattle.battleMode = this.battleMode;\r\n        Session.Send(Route[\"match.protocol.matchmaking\"],startBattle); \r\n    }\r\n\r\n    private sendCancelVs(): void {\r\n        Session.Send(Route[\"match.protocol.matchcancel\"]); \r\n    }\r\n\r\n    private onStartVs(result: boolean): void {\r\n        if (result) {\r\n            this.startVs();\r\n        } else {\r\n            this.Hide();\r\n        }\r\n    }\r\n\r\n    private onCancelVs(result: boolean): void {\r\n        if (result) this.Hide();\r\n    }\r\n\r\n    private onVsComplete(result: boolean, curRoom: proto.base.IBattleRoomSummary): void {\r\n        if (result) {\r\n            this.shoVsInfo(curRoom);\r\n            this.vsWin();\r\n        } else {\r\n            this.Hide();\r\n        }\r\n    }\r\n\r\n    private onEnterFight(): void {\r\n        this.scheduleOnce(() => {\r\n            this.exitVs();\r\n        }, 1);\r\n        \r\n    }\r\n\r\n    private startVs(): void {\r\n        this.isStartVs = true;\r\n        \r\n    }\r\n\r\n    private vsWin(): void {\r\n        this.isVsWin = true;\r\n        this.effect1.setAnimation(0, \"loop2\", true);\r\n        \r\n    }\r\n\r\n    private shoVsInfo(curRoom: proto.base.IBattleRoomSummary): void {\r\n        let playerDataB: proto.base.IPlayerData = proto.base.PlayerData.create();\r\n        let playerName: string;\r\n        let cardData: proto.base.IDeckAttrs;\r\n        for (let key in curRoom.players) {\r\n            let playerData: proto.base.IBattleRoomSummaryPlayer = curRoom.players[key];\r\n            if (playerData.playerId != PlayerData.player.playerId) {\r\n                cardData = playerData.deckAttr;\r\n                playerName = playerData.name;\r\n                break;\r\n            }\r\n        }\r\n        this.VsPlayerItemB.SetData(playerName, cardData);\r\n    }\r\n\r\n    private exitVs(): void {\r\n        this.playEndVsEffect();\r\n        this.effect1.setAnimation(0, \"end\", false);\r\n        this.effect1.setCompleteListener(() => {\r\n            this.Hide();\r\n        });\r\n    }\r\n}"]}