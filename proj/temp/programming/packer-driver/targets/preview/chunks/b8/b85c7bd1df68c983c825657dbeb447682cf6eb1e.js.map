{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/common/CardGroupCoverItem.ts"],"names":["CardGroupCoverItem","Component","Label","path","Sprite","SpriteFrame","cardBack","folder_icon","ResMgr","CfgMgr","bg","notCardGroup","icon","mark","userLab","nameLab","data","isInit","isShowUser","onLoad","node","getChildByPath","getComponent","getChildByName","updateShow","SetData","haveNum","iconUrl","name","active","size","isDefault","string","cfg","GetHead","avatarId","headIconUrl","LoadResAbSub","join","res","spriteFrame","cardBackcfg","GetCardBackCfgById","cardBackId","callBackIcon","bgUrl","nameColor","CardGuroupComm","DeckFullSize","color","fromHEX"],"mappings":"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","sourcesContent":["import { Color, Component, Label, Node, path, Sprite, SpriteFrame } from \"cc\";\r\nimport proto from \"../../net/Protocol\";\r\nimport { AsyncComponent } from \"./AsyncComponent\";\r\nimport { cardBack, folder_head, folder_icon, ResMgr } from \"../../manager/ResMgr\";\r\nimport { CfgMgr } from \"../../manager/CfgMgr\";\r\n\r\n/**\r\n * 卡组封面item\r\n */\r\nexport class CardGroupCoverItem extends Component {\r\n    private bg: Sprite;\r\n    private cardBack: Sprite;\r\n    private notCardGroup: Node;\r\n    private icon: Sprite;\r\n    private mark: Node;\r\n    private userLab: Label;\r\n    private nameLab: Label;\r\n    private data: proto.base.IDeckAttrs;\r\n    private isInit: boolean = false;\r\n    private isShowUser: boolean;\r\n    protected onLoad(): void {\r\n        this.bg = this.node.getChildByPath(\"bg\").getComponent(Sprite);\r\n        this.cardBack = this.node.getChildByPath(\"cardBack\").getComponent(Sprite);\r\n        this.notCardGroup = this.node.getChildByPath(\"notCardGroup\");\r\n        this.icon = this.node.getChildByPath(\"icon\").getComponent(Sprite);\r\n        this.mark = this.node.getChildByPath(\"mark\");\r\n        this.userLab = this.node.getChildByName(\"userLab\").getComponent(Label);\r\n        this.nameLab = this.node.getChildByPath(\"nameLab\").getComponent(Label);\r\n        this.isInit = true;\r\n        this.updateShow();\r\n    }\r\n\r\n    SetData(data: proto.base.IDeckAttrs, isShowUser: boolean = true): void {\r\n        this.data = data;\r\n        this.isShowUser = isShowUser;\r\n        this.updateShow();\r\n    }\r\n\r\n    private updateShow(): void {\r\n        if (!this.isInit) return;\r\n        let haveNum: number = 0;\r\n        let iconUrl: string = \"26\";\r\n        let name: string = \"\";\r\n        this.cardBack.node.active = false\r\n        this.icon.node.active = false;\r\n        this.notCardGroup.active = true;\r\n        this.userLab.node.active = false;\r\n        if (this.data) {\r\n            this.cardBack.node.active = true;\r\n            this.icon.node.active = true;\r\n            this.notCardGroup.active = false;\r\n            haveNum = this.data.size;\r\n            name = this.data.name;\r\n            this.userLab.node.active = this.isShowUser && this.data.isDefault;\r\n            this.bg.node.active = true;\r\n            this.nameLab.string = this.data.name;\r\n            this.mark.active = false;\r\n            let cfg = CfgMgr.GetHead(this.data.avatarId);\r\n            if(cfg){\r\n                let headIconUrl = cfg.icon\r\n                ResMgr.LoadResAbSub(path.join(folder_icon, \"head/\", headIconUrl, \"spriteFrame\"), SpriteFrame, res => {\r\n                    this.icon.spriteFrame =  res;\r\n                });\r\n            }\r\n            let cardBackcfg = CfgMgr.GetCardBackCfgById(this.data.cardBackId)\r\n            if(cardBackcfg){\r\n                let callBackIcon = cardBackcfg.icon\r\n                ResMgr.LoadResAbSub(path.join(cardBack, \"card_back_\" + callBackIcon, \"spriteFrame\"), SpriteFrame, res => {\r\n                    this.cardBack.spriteFrame =  res;\r\n                });\r\n            }\r\n        } else {\r\n            \r\n            this.bg.node.active = false;\r\n            this.nameLab.string = `???`;\r\n            this.mark.active = true;\r\n        }\r\n        \r\n        let bgUrl: string = \"bg_red\";\r\n        let nameColor: string = \"#FF7D7D\";\r\n        if (!this.data || haveNum >= CfgMgr.CardGuroupComm.DeckFullSize) {\r\n            bgUrl = \"bg_blue\";\r\n            nameColor = \"#FFFFFF\";\r\n            this.mark.active = false;\r\n        } else {\r\n            this.mark.active = true;\r\n        }\r\n        this.nameLab.string = name;\r\n        this.nameLab.color.fromHEX(nameColor);\r\n        ResMgr.LoadResAbSub(path.join(\"sheets/cardGroupCover\", bgUrl, \"spriteFrame\"), SpriteFrame, (res: SpriteFrame) => {\r\n            this.bg.spriteFrame = res;\r\n        });\r\n\r\n    }\r\n\r\n}"]}