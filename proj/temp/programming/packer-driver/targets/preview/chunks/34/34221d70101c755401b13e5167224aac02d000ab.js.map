{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/friend/FriendBindOrUnbindPanel.ts"],"names":["FriendBindOrUnbindPanel","Button","EditBox","Label","Session","DateUtils","EventMgr","Evt_CloseFriendBindOrUnbindPanel","Panel","Req","Route","FriendBindType","prefab","buildTittle","confirmBtn","unbindNode","bindNode","lbl","last_day","unday1","unday2","type","id","uplineData","isCanUnbind","onLoad","CloseBy","find","node","on","onConfirmBtn","onEditBoxEnded","onClose","onShow","flush","info","string","bind","isbind","active","is_online","last_offline_time","time_data","timeElapsedSince","days","hours","minutes","bind_friend","inviterId","Send","editbox","Hide","onHide"],"mappings":";;;0LAeaA,uB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAfJC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,O,OAAAA,O;AAA4BC,MAAAA,K,OAAAA,K;;AACpCC,MAAAA,O,iBAAAA,O;;AACAC,MAAAA,S,iBAAAA,S;;AACAC,MAAAA,Q,iBAAAA,Q;AAAUC,MAAAA,gC,iBAAAA,gC;;AACVC,MAAAA,K,iBAAAA,K;;AAGAC,MAAAA,G,iBAAAA,G;AAAKC,MAAAA,K,iBAAAA,K;;;;;;;;;gCAGFC,c,0BAAAA,c;AAAAA,QAAAA,c,CAAAA,c;AAAAA,QAAAA,c,CAAAA,c;eAAAA,c;;;yCAKCX,uB,GAAN,MAAMA,uBAAN;AAAA;AAAA,0BAA4C;AAAA;AAAA;AAAA,eACrCY,MADqC,GACpB,wCADoB;AAAA,eAGvCC,WAHuC;AAAA,eAIvCC,UAJuC;AAAA,eAKvCC,UALuC;AAAA,eAMvCC,QANuC;AAAA,eAOvCd,OAPuC;AAAA,eAQvCe,GARuC;AAAA,eASvCC,QATuC;AAAA,eAUvCC,MAVuC;AAAA,eAWvCC,MAXuC;AAAA,eAcvCC,IAduC;AAAA,eAevCC,EAfuC;AAAA,eAgBvCC,UAhBuC;AAAA,eAiBvCC,WAjBuC,GAiBhB,KAjBgB;AAAA;;AAkBrCC,QAAAA,MAAM,GAAS;AACrB,eAAKC,OAAL,CAAa,MAAb;AACA,eAAKA,OAAL,CAAa,YAAb;AACA,eAAKb,WAAL,GAAmB,KAAKc,IAAL,CAAU,kBAAV,EAA8BxB,KAA9B,CAAnB;AACA,eAAKW,UAAL,GAAkB,KAAKa,IAAL,CAAU,iBAAV,EAA6B1B,MAA7B,CAAlB;AACA,eAAKgB,GAAL,GAAW,KAAKU,IAAL,CAAU,uBAAV,EAAmCxB,KAAnC,CAAX;AACA,eAAKY,UAAL,GAAkB,KAAKY,IAAL,CAAU,iBAAV,CAAlB;AACA,eAAKT,QAAL,GAAgB,KAAKS,IAAL,CAAU,sCAAV,EAAkDxB,KAAlD,CAAhB;AACA,eAAKgB,MAAL,GAAc,KAAKQ,IAAL,CAAU,iCAAV,EAA6CxB,KAA7C,CAAd;AACA,eAAKiB,MAAL,GAAc,KAAKO,IAAL,CAAU,4BAAV,EAAwCxB,KAAxC,CAAd;AACA,eAAKa,QAAL,GAAgB,KAAKW,IAAL,CAAU,eAAV,CAAhB;AACA,eAAKzB,OAAL,GAAe,KAAKyB,IAAL,CAAU,uBAAV,EAAmCzB,OAAnC,CAAf;AACA,eAAKY,UAAL,CAAgBc,IAAhB,CAAqBC,EAArB,CAAwB,OAAxB,EAAiC,KAAKC,YAAtC,EAAoD,IAApD;AACA,eAAK5B,OAAL,CAAa0B,IAAb,CAAkBC,EAAlB,CAAqB,mBAArB,EAA0C,KAAKE,cAA/C,EAA+D,IAA/D;AACA;AAAA;AAAA,oCAASF,EAAT;AAAA;AAAA,oFAA8C,KAAKG,OAAnD,EAA4D,IAA5D;AACH;;AAESC,QAAAA,MAAM,GAAS,CACxB;;AAEKC,QAAAA,KAAK,CAACb,IAAD,EAAec,IAAf,EAAkC;AAAA;;AAAA;AACzC,YAAA,KAAI,CAACd,IAAL,GAAYA,IAAZ;AACA,YAAA,KAAI,CAACE,UAAL,GAAkBY,IAAlB,CAFyC,CAGzC;AACA;;AACA,YAAA,KAAI,CAACtB,WAAL,CAAiBuB,MAAjB,GAA0Bf,IAAI,IAAIV,cAAc,CAAC0B,IAAvB,GAA8B,OAA9B,GAAwC,OAAlE;AACA,gBAAIC,MAAM,GAAGjB,IAAI,IAAIV,cAAc,CAAC0B,IAAvB,GAA8B,IAA9B,GAAqC,KAAlD;AACA,YAAA,KAAI,CAACpB,GAAL,CAASmB,MAAT,GAAkBf,IAAI,IAAIV,cAAc,CAAC0B,IAAvB,GAA8B,IAA9B,GAAqC,IAAvD,CAPyC,CAQzC;AACA;;AACA,YAAA,KAAI,CAACrB,QAAL,CAAcuB,MAAd,GAAuBD,MAAvB;AACA,YAAA,KAAI,CAACvB,UAAL,CAAgBwB,MAAhB,GAAyB,CAACD,MAA1B;;AACA,gBAAIH,IAAJ,EAAU;AACN,kBAAI,CAACA,IAAI,CAACK,SAAV,EAAqB;AACjB,oBAAIL,IAAI,CAACM,iBAAL,IAA0B,CAA9B,EAAiC;AAC7B,sBAAIC,SAAS,GAAG;AAAA;AAAA,8CAAUC,gBAAV,CAA2BR,IAAI,CAACM,iBAAL,GAAyB,IAApD,CAAhB;;AACA,sBAAIC,SAAS,CAACE,IAAd,EAAoB;AAChB,oBAAA,KAAI,CAAC1B,QAAL,CAAckB,MAAd,GAAuBM,SAAS,CAACE,IAAV,GAAiB,IAAxC,CADgB,CAEhB;AACH,mBAHD,MAGO,IAAIF,SAAS,CAACG,KAAd,EAAqB;AACxB,oBAAA,KAAI,CAAC3B,QAAL,CAAckB,MAAd,GAAuBM,SAAS,CAACG,KAAV,GAAkB,KAAzC;AACH,mBAFM,MAEA,IAAIH,SAAS,CAACI,OAAd,EAAuB;AAC1B,oBAAA,KAAI,CAAC5B,QAAL,CAAckB,MAAd,GAAuBM,SAAS,CAACI,OAAV,GAAoB,KAA3C;AACH;AACJ,iBAVD,MAUO;AACH,kBAAA,KAAI,CAACtB,WAAL,GAAmB,IAAnB,CADG,CAEH;AACH;AACJ,eAfD,MAeO;AACH,gBAAA,KAAI,CAACN,QAAL,CAAckB,MAAd,GAAuB,IAAvB;AACH;AACJ;AA/BwC;AAgC5C;;AAGON,QAAAA,YAAY,GAAG;AACnB,cAAIQ,MAAM,GAAI,KAAKjB,IAAL,IAAaV,cAAc,CAAC0B,IAA1C;AACA,cAAIU,WAAW,GAAG,IAAI;AAAA;AAAA,0BAAI,0BAAJ,CAAJ,EAAlB;AACAA,UAAAA,WAAW,CAACC,SAAZ,GAAwB,KAAK1B,EAA7B;AACA;AAAA;AAAA,kCAAQ2B,IAAR,CAAa;AAAA;AAAA,8BAAM,0BAAN,CAAb,EAAgDF,WAAhD,EAJmB,CAMnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH;;AAEOhB,QAAAA,cAAc,CAACmB,OAAD,EAAmB;AACrC,eAAK5B,EAAL,GAAU4B,OAAO,CAACd,MAAlB;AACH;;AAEOJ,QAAAA,OAAO,GAAG;AACd,eAAKmB,IAAL;AACH;;AAESC,QAAAA,MAAM,GAAuB;AACnC,eAAKlD,OAAL,CAAakC,MAAb,GAAsB,EAAtB;AACH;;AA3H8C,O","sourcesContent":["import { Button, EditBox, EventTouch, Input, Label, Node, Sprite, SpriteFrame, Toggle, Touch, UIOpacity, instantiate, path, v3 } from \"cc\";\r\nimport { Session } from \"../../net/Session\";\r\nimport { DateUtils } from \"../../utils/DateUtils\";\r\nimport { EventMgr, Evt_CloseFriendBindOrUnbindPanel } from \"../../manager/EventMgr\";\r\nimport { Panel } from \"../../manager/GameRoot\";\r\nimport { SUplineInfo } from \"../player/PlayerStruct\";\r\nimport { CfgMgr } from \"../../manager/CfgMgr\";\r\nimport { Req, Route } from \"../../net/Protocol\";\r\n\r\n\r\nexport enum FriendBindType {\r\n    bind,\r\n    unbind,\r\n}\r\n\r\nexport class FriendBindOrUnbindPanel extends Panel {\r\n    protected prefab: string = \"prefabs/friend/FriendBindOrUnbindPanel\";\r\n\r\n    private buildTittle: Label;\r\n    private confirmBtn: Button;\r\n    private unbindNode: Node;\r\n    private bindNode: Node;\r\n    private EditBox: EditBox;\r\n    private lbl: Label;\r\n    private last_day: Label;\r\n    private unday1: Label;\r\n    private unday2: Label;\r\n\r\n\r\n    private type: number\r\n    private id: string;\r\n    private uplineData: SUplineInfo;\r\n    private isCanUnbind: boolean = false;\r\n    protected onLoad(): void {\r\n        this.CloseBy(\"mask\");\r\n        this.CloseBy(\"node/close\");\r\n        this.buildTittle = this.find(\"node/buildTittle\", Label);\r\n        this.confirmBtn = this.find(\"node/confirmBtn\", Button);\r\n        this.lbl = this.find(\"node/confirmBtn/Label\", Label);\r\n        this.unbindNode = this.find(\"node/unbindNode\");\r\n        this.last_day = this.find(\"node/unbindNode/bg/lastNode/last_day\", Label);\r\n        this.unday1 = this.find(\"node/unbindNode/bg/Node/day_num\", Label);\r\n        this.unday2 = this.find(\"node/bindNode/Node/day_num\", Label);\r\n        this.bindNode = this.find(\"node/bindNode\");\r\n        this.EditBox = this.find(\"node/bindNode/EditBox\", EditBox)\r\n        this.confirmBtn.node.on(\"click\", this.onConfirmBtn, this);\r\n        this.EditBox.node.on('editing-did-ended', this.onEditBoxEnded, this)\r\n        EventMgr.on(Evt_CloseFriendBindOrUnbindPanel, this.onClose, this)\r\n    }\r\n\r\n    protected onShow(): void {\r\n    }\r\n\r\n    async flush(type: number, info: SUplineInfo) {\r\n        this.type = type;\r\n        this.uplineData = info;\r\n        // let day = CfgMgr.GetCommon(StdCommonType.Friend).UnboundDays\r\n        // day = day ? day : 0\r\n        this.buildTittle.string = type == FriendBindType.bind ? \"添加邀请人\" : \"解绑邀请人\"\r\n        let isbind = type == FriendBindType.bind ? true : false;\r\n        this.lbl.string = type == FriendBindType.bind ? \"添加\" : \"解绑\"\r\n        // this.unday1.string = day + \"天\";\r\n        // this.unday2.string = day + \"天\";\r\n        this.bindNode.active = isbind;\r\n        this.unbindNode.active = !isbind;\r\n        if (info) {\r\n            if (!info.is_online) {\r\n                if (info.last_offline_time != 0) {\r\n                    let time_data = DateUtils.timeElapsedSince(info.last_offline_time * 1000);\r\n                    if (time_data.days) {\r\n                        this.last_day.string = time_data.days + \"天前\";\r\n                        // this.isCanUnbind = time_data.days >= day;\r\n                    } else if (time_data.hours) {\r\n                        this.last_day.string = time_data.hours + \"小时前\";\r\n                    } else if (time_data.minutes) {\r\n                        this.last_day.string = time_data.minutes + \"分钟前\";\r\n                    }\r\n                } else {\r\n                    this.isCanUnbind = true;\r\n                    // this.last_day.string = day + \"天前\";\r\n                }\r\n            } else {\r\n                this.last_day.string = \"在线\"\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private onConfirmBtn() {\r\n        let isbind = (this.type == FriendBindType.bind);\r\n        let bind_friend = new Req[\"user.protocol.bindfriend\"]();\r\n        bind_friend.inviterId = this.id;\r\n        Session.Send(Route[\"user.protocol.bindfriend\"], bind_friend);\r\n\r\n        // if (isbind) {\r\n        //     //添加确认\r\n        //     let lv = CfgMgr.GetCommon(StdCommonType.Friend).BindingLv\r\n        //     let home_lv:number;\r\n        //     for (let building of PlayerData.roleInfo.homelands[0].buildings) {\r\n        //         if (building.id == 1) {\r\n        //             home_lv = building.level;\r\n        //         }\r\n        //     }\r\n        //     let isCanBind = (lv <= home_lv);\r\n        //     if(isCanBind){\r\n        //         let data = {\r\n        //             type: MsgTypeSend.BindUplineRequest,\r\n        //             data: { upline_id: this.id },\r\n        //         }\r\n        //         Session.Send(data)\r\n        //     }else{\r\n        //         Tips.Show(\"生命树需要\" + lv + \"级\")\r\n        //     }\r\n        // } else {\r\n        //     //解绑确认\r\n        //     if (this.isCanUnbind) {\r\n        //         let data = {\r\n        //             type: MsgTypeSend.UnbinduplineRequest,\r\n        //             data: {},\r\n        //         }\r\n        //         Session.Send(data);\r\n        //     } else {\r\n        //         Tips.Show(\"未到解绑时间\")\r\n        //     }\r\n        // }\r\n\r\n    }\r\n\r\n    private onEditBoxEnded(editbox: EditBox) {\r\n        this.id = editbox.string;\r\n    }\r\n\r\n    private onClose() {\r\n        this.Hide();\r\n    }\r\n\r\n    protected onHide(...args: any[]): void {\r\n        this.EditBox.string = \"\";\r\n    }\r\n}"]}