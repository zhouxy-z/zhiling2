{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/common/AwardItem.ts"],"names":["AwardItem","Color","Component","Label","Sprite","SpriteFrame","path","ResMgr","folder_icon","folder_item","EventMgr","Evt_Currency_Updtae","Evt_Item_Change","Evt_Res_Update","ItemUtil","CardQuality","CfgMgr","ItemType","ThingTypeName","qualBg","roleMaskBg","icon","roleMask","numLab","nameLab","effectValBg","effectValLab","select","$loadSub","complete","hasLoad","_data","itemId","itemNum","qualBgUrl","roleMaskBgUrl","iconUrl","roleMaskUrl","itemName","effectType","showEffect","effectVal","isCheckHave","numLabInitCol","thingType","_formatNameCb","_formatCountCb","_formatEffectCb","onLoad","node","getChildByName","getComponent","active","color","clone","on","onItemChange","onResUpdate","onCurrencyUpdate","loadSub","thisObj","Promise","resolve","reject","isCanUpdate","setCountCol","CheckItemIsHave","fromHEX","SetData","data","itemData","Array","length","console","error","setItem","id","count","setThing","formatName","formatCount","formatEffectVal","spriteFrame","LoadResAbSub","stdItem","Getitem","Item","HideBag","valStr","Itemtpye","ItemEffect1","ItemName","join","Icon","Quality","thing","type","item","string","toString","exp","speed","FormatNameCb","cb","FormatCountCb","FormatEffectCb","thingTypeData"],"mappings":";;;6RAOaA,S;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAPJC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,K,OAAAA,K;AAAaC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,I,OAAAA,I;;AACpDC,MAAAA,M,iBAAAA,M;AAAQC,MAAAA,W,iBAAAA,W;AAAaC,MAAAA,W,iBAAAA,W;;AACrBC,MAAAA,Q,iBAAAA,Q;AAAUC,MAAAA,mB,iBAAAA,mB;AAAqBC,MAAAA,e,iBAAAA,e;AAAiBC,MAAAA,c,iBAAAA,c;;AAChDC,MAAAA,Q,iBAAAA,Q;;AACAC,MAAAA,W,iBAAAA,W;AAAaC,MAAAA,M,iBAAAA,M;AAAQC,MAAAA,Q,iBAAAA,Q;AAAUC,MAAAA,a,iBAAAA,a;;;;;;;;;2BAG3BlB,S,GAAN,MAAMA,SAAN,SAAwBE,SAAxB,CAAkC;AAAA;AAAA;AAAA,eAC7BiB,MAD6B;AAAA,eAE7BC,UAF6B;AAAA,eAG7BC,IAH6B;AAAA,eAI7BC,QAJ6B;AAAA,eAK7BC,MAL6B;AAAA,eAM7BC,OAN6B;AAAA,eAO7BC,WAP6B;AAAA,eAQ7BC,YAR6B;AAAA,eAS7BC,MAT6B;AAAA,eAU3BC,QAV2B;AAAA,eAW3BC,QAX2B;AAAA,eAY3BC,OAZ2B,GAYjB,KAZiB;AAAA,eAa7BC,KAb6B;AAAA,eAc7BC,MAd6B;AAAA,eAe7BC,OAf6B;AAAA,eAgB7BC,SAhB6B;AAAA,eAiB7BC,aAjB6B;AAAA,eAkB7BC,OAlB6B;AAAA,eAmB7BC,WAnB6B;AAAA,eAoB7BC,QApB6B;AAAA,eAqB7BC,UArB6B;AAAA,eAsB7BC,UAtB6B;AAAA,eAuB7BC,SAvB6B;AAAA,eAwB7BC,WAxB6B,GAwBP,KAxBO;AAAA,eAyB7BC,aAzB6B;AAAA,eA0B7BC,SA1B6B;AAAA,eA2B7BC,aA3B6B,GA2BW,IA3BX;AAAA,eA4B7BC,cA5B6B,GA4BW,IA5BX;AAAA,eA6B7BC,eA7B6B,GA6BqC,IA7BrC;AAAA;;AA8B3BC,QAAAA,MAAM,GAAS;AAAA;;AACrB,eAAK7B,MAAL,4BAAc,KAAK8B,IAAL,CAAUC,cAAV,CAAyB,QAAzB,CAAd,qBAAc,sBAAoCC,YAApC,CAAiD/C,MAAjD,CAAd;AACA,eAAKgB,UAAL,6BAAkB,KAAK6B,IAAL,CAAUC,cAAV,CAAyB,YAAzB,CAAlB,qBAAkB,uBAAwCC,YAAxC,CAAqD/C,MAArD,CAAlB;AACA,eAAKiB,IAAL,6BAAY,KAAK4B,IAAL,CAAUC,cAAV,CAAyB,MAAzB,CAAZ,qBAAY,uBAAkCC,YAAlC,CAA+C/C,MAA/C,CAAZ;AACA,eAAKkB,QAAL,6BAAgB,KAAK2B,IAAL,CAAUC,cAAV,CAAyB,UAAzB,CAAhB,qBAAgB,uBAAsCC,YAAtC,CAAmD/C,MAAnD,CAAhB;AACA,eAAKmB,MAAL,6BAAc,KAAK0B,IAAL,CAAUC,cAAV,CAAyB,QAAzB,CAAd,qBAAc,uBAAoCC,YAApC,CAAiDhD,KAAjD,CAAd;AACA,eAAKqB,OAAL,6BAAe,KAAKyB,IAAL,CAAUC,cAAV,CAAyB,SAAzB,CAAf,qBAAe,uBAAqCC,YAArC,CAAkDhD,KAAlD,CAAf;AACA,eAAKsB,WAAL,GAAmB,KAAKwB,IAAL,CAAUC,cAAV,CAAyB,aAAzB,CAAnB;AACA,eAAKxB,YAAL,6BAAoB,KAAKuB,IAAL,CAAUC,cAAV,CAAyB,cAAzB,CAApB,qBAAoB,uBAA0CC,YAA1C,CAAuDhD,KAAvD,CAApB;AACA,eAAKwB,MAAL,GAAc,KAAKsB,IAAL,CAAUC,cAAV,CAAyB,QAAzB,CAAd;AACA,cAAG,KAAKvB,MAAR,EAAgB,KAAKA,MAAL,CAAYyB,MAAZ,GAAqB,KAArB;AAChB,cAAG,KAAK7B,MAAR,EAAgB,KAAKoB,aAAL,GAAqB,KAAKpB,MAAL,CAAY8B,KAAZ,CAAkBC,KAAlB,EAArB;AAChB;AAAA;AAAA,oCAASC,EAAT;AAAA;AAAA,kDAA6B,KAAKC,YAAlC,EAAgD,IAAhD;AACA;AAAA;AAAA,oCAASD,EAAT;AAAA;AAAA,gDAA4B,KAAKE,WAAjC,EAA8C,IAA9C;AACA;AAAA;AAAA,oCAASF,EAAT;AAAA;AAAA,0DAAiC,KAAKG,gBAAtC,EAAwD,IAAxD;AACA,eAAK5B,OAAL,GAAe,IAAf;AACA,iCAAKD,QAAL;AACH;;AAEoB,YAAP8B,OAAO,GAAG;AACpB,cAAI,KAAK/B,QAAT,EAAmB,OAAO,KAAKA,QAAZ;AACnB,cAAIgC,OAAO,GAAG,IAAd;AACA,eAAKhC,QAAL,GAAgB,IAAIiC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7CH,YAAAA,OAAO,CAAC/B,QAAR,GAAmBiC,OAAnB;AACH,WAFe,CAAhB;AAGH;;AACON,QAAAA,YAAY,GAAO;AACvB,cAAG,CAAC,KAAKQ,WAAT,EAAsB;AACtB,eAAKC,WAAL;AAEH;;AACOR,QAAAA,WAAW,GAAO;AACtB,eAAKQ,WAAL;AACH;;AACOP,QAAAA,gBAAgB,GAAO;AAC3B,eAAKO,WAAL;AACH;;AACsB,YAAXD,WAAW,GAAU;AAC7B,cAAG,CAAC,KAAKtB,WAAN,IAAqB,CAAC,KAAKX,KAA9B,EAAqC,OAAO,KAAP;AACrC,iBAAO,IAAP;AACH;;AACOkC,QAAAA,WAAW,GAAO;AACtB,cAAG,KAAK1C,MAAR,EAAe;AACX,gBAAG,KAAKmB,WAAL,IAAoB,CAAC;AAAA;AAAA,sCAASwB,eAAT,CAAyB,KAAKtB,SAA9B,EAAyC,KAAKX,OAA9C,EAAuD,KAAKD,MAA5D,CAAxB,EAA4F;AACxF,mBAAKT,MAAL,CAAY8B,KAAZ,GAAoB,IAAIpD,KAAJ,GAAYkE,OAAZ,CAAoB,SAApB,CAApB;AACH,aAFD,MAEK;AACD,mBAAK5C,MAAL,CAAY8B,KAAZ,GAAoB,KAAKV,aAAzB;AACH;AACJ;AACJ;AACD;AACJ;AACA;AACA;AACA;;;AACUyB,QAAAA,OAAO,CAACC,IAAD,EAAmE3B,WAAnE,EAAgG;AAAA;;AAAA;AAAA,gBAA7BA,WAA6B;AAA7BA,cAAAA,WAA6B,GAAP,KAAO;AAAA;;AACzG,gBAAI,CAAC,KAAI,CAACZ,OAAV,EAAmB,MAAM,KAAI,CAAC6B,OAAX;AACnB,YAAA,KAAI,CAAC5B,KAAL,GAAasC,IAAb;AACA,YAAA,KAAI,CAAC3B,WAAL,GAAmBA,WAAnB;;AACA,gBAAG,KAAI,CAACX,KAAL,CAAWuC,QAAX,YAA+BC,KAAlC,EAAwC;AACpC,kBAAG,KAAI,CAACxC,KAAL,CAAWuC,QAAX,CAAoBE,MAApB,IAA8B,CAAjC,EAAmC;AAC/BC,gBAAAA,OAAO,CAACC,KAAR;AACA;AACH;;AACD,cAAA,KAAI,CAACC,OAAL,CAAa;AAACC,gBAAAA,EAAE,EAAC,KAAI,CAAC7C,KAAL,CAAWuC,QAAX,CAAoB,CAApB,CAAJ;AAA4BO,gBAAAA,KAAK,EAAE,KAAI,CAAC9C,KAAL,CAAWuC,QAAX,CAAoB,CAApB;AAAnC,eAAb;AACH,aAND,MAMM;AACF,cAAA,KAAI,CAACQ,QAAL,CAAc,KAAI,CAAC/C,KAAL,CAAWuC,QAAzB;AACH;;AACD,YAAA,KAAI,CAACL,WAAL;;AACA,YAAA,KAAI,CAACc,UAAL;;AACA,YAAA,KAAI,CAACC,WAAL;;AACA,YAAA,KAAI,CAACC,eAAL;;AACA,gBAAI,KAAI,CAAC9D,MAAL,IAAe,KAAI,CAACe,SAAxB,EAAmC,KAAI,CAACf,MAAL,CAAY+D,WAAZ,SAAgC;AAAA;AAAA,kCAAOC,YAAP,CAAoB,KAAI,CAACjD,SAAzB,EAAoC7B,WAApC,CAAhC;AACnC,gBAAI,KAAI,CAACgB,IAAT,EAAe,KAAI,CAACA,IAAL,CAAU6D,WAAV,SAA8B;AAAA;AAAA,kCAAOC,YAAP,CAAoB,KAAI,CAAC/C,OAAzB,EAAkC/B,WAAlC,CAA9B;;AACf,gBAAG,KAAI,CAACe,UAAR,EAAmB;AACf,kBAAG,KAAI,CAACe,aAAR,EAAsB;AAClB,gBAAA,KAAI,CAACf,UAAL,CAAgB6B,IAAhB,CAAqBG,MAArB,GAA8B,IAA9B;AACA,gBAAA,KAAI,CAAChC,UAAL,CAAgB8D,WAAhB,SAAoC;AAAA;AAAA,sCAAOC,YAAP,CAAoB,KAAI,CAAChD,aAAzB,EAAwC9B,WAAxC,CAApC;AACH,eAHD,MAGK;AACD,gBAAA,KAAI,CAACe,UAAL,CAAgB6B,IAAhB,CAAqBG,MAArB,GAA8B,KAA9B;AACH;AACJ;;AACD,gBAAG,KAAI,CAAC9B,QAAR,EAAiB;AACb,kBAAG,KAAI,CAACe,WAAR,EAAoB;AAChB,gBAAA,KAAI,CAACf,QAAL,CAAc2B,IAAd,CAAmBG,MAAnB,GAA4B,IAA5B;AACA,gBAAA,KAAI,CAAC9B,QAAL,CAAc4D,WAAd,SAAkC;AAAA;AAAA,sCAAOC,YAAP,CAAoB,KAAI,CAAC9C,WAAzB,EAAsChC,WAAtC,CAAlC;AACH,eAHD,MAGK;AACD,gBAAA,KAAI,CAACiB,QAAL,CAAc2B,IAAd,CAAmBG,MAAnB,GAA4B,KAA5B;AACH;AACJ;AAlCwG;AAmC5G;;AACOuB,QAAAA,OAAO,CAACN,IAAD,EAAsC;AACjD,cAAIe,OAAO,GAAG;AAAA;AAAA,gCAAOC,OAAP,CAAehB,IAAI,CAACO,EAApB,CAAd;;AACA,cAAI,CAACQ,OAAL,EAAa;AACTX,YAAAA,OAAO,CAACC,KAAR,uDAAyCL,IAAI,CAACO,EAA9C;AACA;AACH;;AAED,eAAKhC,SAAL,GAAiB;AAAA;AAAA,8CAAc0C,IAA/B;AACA,eAAKtD,MAAL,GAAcqC,IAAI,CAACO,EAAnB;AACA,eAAK3C,OAAL,GAAeoC,IAAI,CAACQ,KAApB;AACA,eAAKzC,OAAL,GAAe,IAAf;AACA,eAAKF,SAAL,GAAiB,IAAjB;AACA,eAAKC,aAAL,GAAqB,IAArB;AACA,eAAKE,WAAL,GAAmB,IAAnB;AACA,eAAKC,QAAL,GAAgB,EAAhB;AACA,eAAKC,UAAL,GAAkB,CAAC,CAAnB;AACA,eAAKE,SAAL,GAAiB,CAAC,CAAlB;AACA,eAAKD,UAAL,GAAkB4C,OAAO,CAACG,OAA1B;AACA,cAAIC,MAAa,GAAG,EAApB;AACA,eAAKjD,UAAL,GAAkB6C,OAAO,CAACK,QAA1B;AACA,eAAKhD,SAAL,GAAiB2C,OAAO,CAACM,WAAzB;AACA,eAAKpD,QAAL,GAAgB8C,OAAO,CAACO,QAAxB;AACA,eAAKvD,OAAL,GAAe9B,IAAI,CAACsF,IAAL;AAAA;AAAA,0CAAuBR,OAAO,CAACS,IAA/B,EAAqC,aAArC,CAAf;AACA,eAAK3D,SAAL,GAAiB5B,IAAI,CAACsF,IAAL;AAAA;AAAA,0CAAuB,SAAvB,EAAkC;AAAA;AAAA,0CAAYR,OAAO,CAACU,OAApB,IAA+B,SAAjE,EAA4E,aAA5E,CAAjB;AAIH;;AACehB,QAAAA,QAAQ,CAACiB,KAAD,EAA2B;AAAA;;AAAA;AAC/C,YAAA,MAAI,CAACnD,SAAL,GAAiBmD,KAAK,CAACC,IAAvB;AACA,YAAA,MAAI,CAAChE,MAAL,GAAc,CAAd;AACA,YAAA,MAAI,CAACI,OAAL,GAAe,IAAf;AACA,YAAA,MAAI,CAACF,SAAL,GAAiB,IAAjB;AACA,YAAA,MAAI,CAACC,aAAL,GAAqB,IAArB;AACA,YAAA,MAAI,CAACE,WAAL,GAAmB,IAAnB;AACA,YAAA,MAAI,CAACC,QAAL,GAAgB,EAAhB;AACA,YAAA,MAAI,CAACC,UAAL,GAAkB,CAAC,CAAnB;AACA,YAAA,MAAI,CAACE,SAAL,GAAiB,CAAC,CAAlB;AACA,YAAA,MAAI,CAACD,UAAL,GAAkB,CAAlB;;AACA,gBAAGuD,KAAK,CAACC,IAAN,IAAc;AAAA;AAAA,gDAAcV,IAA/B,EAAoC;AAChC,cAAA,MAAI,CAACX,OAAL,CAAa;AAAEC,gBAAAA,EAAE,EAAEmB,KAAK,CAACE,IAAN,CAAWrB,EAAjB;AAAqBC,gBAAAA,KAAK,EAAEkB,KAAK,CAACE,IAAN,CAAWpB;AAAvC,eAAb;AACH;AAb8C;AAelD;AACD;AACJ;AACA;;;AACYE,QAAAA,UAAU,GAAO;AACrB,cAAI,CAAC,KAAKvD,OAAV,EAAmB;;AACnB,cAAG,KAAKqB,aAAL,IAAsB,IAAzB,EAA8B;AAC1B,iBAAKrB,OAAL,CAAa0E,MAAb,GAAsB,KAAKrD,aAAL,CAAmB,KAAKP,QAAxB,CAAtB;AACA;AACH;;AACD,eAAKd,OAAL,CAAa0E,MAAb,QAAyB,KAAK5D,QAA9B;AACH;AACD;AACJ;AACA;;;AACY0C,QAAAA,WAAW,GAAO;AACtB,cAAI,CAAC,KAAKzD,MAAN,IAAgB,CAAC,KAAKU,OAA1B,EAAmC;;AACnC,cAAG,KAAKa,cAAL,IAAuB,IAA1B,EAA+B;AAC3B,iBAAKvB,MAAL,CAAY2E,MAAZ,GAAqB,KAAKpD,cAAL,CAAoB,KAAKb,OAAzB,CAArB;AACA;AACH;;AACD,eAAKV,MAAL,CAAY2E,MAAZ,GAAqB,KAAKjE,OAAL,CAAakE,QAAb,EAArB;AACH;AACD;AACJ;AACA;;;AACYlB,QAAAA,eAAe,GAAO;AAC1B,cAAI,CAAC,KAAKvD,YAAV,EAAwB;;AACxB,cAAI,KAAKc,UAAL,GAAkB,CAAlB,IAAuB,KAAKD,UAAL,GAAkB,CAAzC,IAA8C,KAAKE,SAAL,GAAiB,CAAnE,EAAqE;AACjE,gBAAG,KAAKhB,WAAR,EAAqB,KAAKA,WAAL,CAAiB2B,MAAjB,GAA0B,KAA1B;AACrB,gBAAG,KAAK1B,YAAR,EAAsB,KAAKA,YAAL,CAAkBuB,IAAlB,CAAuBG,MAAvB,GAAgC,KAAhC;AACtB;AACH;;AACD,cAAG,KAAK3B,WAAR,EAAqB,KAAKA,WAAL,CAAiB2B,MAAjB,GAA0B,IAA1B;AACrB,cAAG,KAAK1B,YAAR,EAAsB,KAAKA,YAAL,CAAkBuB,IAAlB,CAAuBG,MAAvB,GAAgC,IAAhC;;AACtB,cAAG,KAAKL,eAAL,IAAwB,IAA3B,EAAgC;AAC5B,iBAAKrB,YAAL,CAAkBwE,MAAlB,GAA2B,KAAKnD,eAAL,CAAqB,KAAKR,UAA1B,EAAsC,KAAKE,SAA3C,CAA3B;AACA;AACH;;AACD,cAAI+C,MAAa,GAAG,EAApB;;AACA,kBAAQ,KAAKjD,UAAb;AACI,iBAAK;AAAA;AAAA,sCAAS6D,GAAd;AACIZ,cAAAA,MAAM,0BAAS,KAAK/C,SAApB;AACA;;AACJ,iBAAK;AAAA;AAAA,sCAAS4D,KAAd;AACIb,cAAAA,MAAM,GAAM,KAAK/C,SAAL,GAAiB,EAAvB,iBAAN;AACA;AANR;;AAQA,cAAG+C,MAAM,IAAI,EAAb,EAAgB,KAAK/D,WAAL,CAAiB2B,MAAjB,GAA0B,KAAK1B,YAAL,CAAkBuB,IAAlB,CAAuBG,MAAvB,GAAgC,KAA1D;AAChB,eAAK1B,YAAL,CAAkBwE,MAAlB,GAA2BV,MAA3B;AACH;AACD;AACJ;AACA;;;AACIc,QAAAA,YAAY,CAACC,EAAD,EAA4B;AACpC,eAAK1D,aAAL,GAAqB0D,EAArB;AACH;AACD;AACJ;AACA;;;AACIC,QAAAA,aAAa,CAACD,EAAD,EAA2B;AACpC,eAAKzD,cAAL,GAAsByD,EAAtB;AACH;AACD;AACJ;AACA;;;AACIE,QAAAA,cAAc,CAACF,EAAD,EAAoD;AAC9D,eAAKxD,eAAL,GAAuBwD,EAAvB;AACH;;AAEW,YAARjC,QAAQ,GAAgC;AACxC,iBAAO,KAAKvC,KAAL,CAAWuC,QAAlB;AACH;;AACgB,YAAboC,aAAa,GAAE;AACf,iBAAO,KAAK9D,SAAZ;AACH;;AA/OoC,O","sourcesContent":["import { Color, Component, Label, Node, Sprite, SpriteFrame, path } from \"cc\";\r\nimport { ResMgr, folder_icon, folder_item } from \"../../manager/ResMgr\";\r\nimport { EventMgr, Evt_Currency_Updtae, Evt_Item_Change, Evt_Res_Update } from \"../../manager/EventMgr\";\r\nimport { ItemUtil } from \"../../utils/ItemUtils\";\r\nimport { CardQuality, CfgMgr, ItemType, ThingTypeName } from \"../../manager/CfgMgr\";\r\nimport proto from \"../../net/Protocol\";\r\n\r\nexport class AwardItem extends Component {\r\n    private qualBg: Sprite;\r\n    private roleMaskBg: Sprite;\r\n    private icon: Sprite;\r\n    private roleMask: Sprite;\r\n    private numLab: Label;\r\n    private nameLab: Label;\r\n    private effectValBg:Node;\r\n    private effectValLab: Label;\r\n    private select: Node;\r\n    protected $loadSub: Promise<any>;\r\n    protected complete: Function;\r\n    protected hasLoad = false;\r\n    private _data:{itemData: number[] | proto.base.IThing, select?: boolean};\r\n    private itemId:number;\r\n    private itemNum:number;\r\n    private qualBgUrl:string;\r\n    private roleMaskBgUrl:string;\r\n    private iconUrl:string;\r\n    private roleMaskUrl:string;\r\n    private itemName:string;\r\n    private effectType:number;\r\n    private showEffect:number;\r\n    private effectVal:number;\r\n    private isCheckHave:boolean = false;\r\n    private numLabInitCol:Color;\r\n    private thingType:string;\r\n    private _formatNameCb:(name:string) => string = null;\r\n    private _formatCountCb:(num:number) => string = null;\r\n    private _formatEffectCb:(effectType:number, effectVal:number) => string = null;\r\n    protected onLoad(): void {\r\n        this.qualBg = this.node.getChildByName(\"qualBg\")?.getComponent(Sprite);\r\n        this.roleMaskBg = this.node.getChildByName(\"roleMaskBg\")?.getComponent(Sprite);\r\n        this.icon = this.node.getChildByName(\"icon\")?.getComponent(Sprite);\r\n        this.roleMask = this.node.getChildByName(\"roleMask\")?.getComponent(Sprite);\r\n        this.numLab = this.node.getChildByName(\"numLab\")?.getComponent(Label);\r\n        this.nameLab = this.node.getChildByName(\"nameLab\")?.getComponent(Label);\r\n        this.effectValBg = this.node.getChildByName(\"effectValBg\");\r\n        this.effectValLab = this.node.getChildByName(\"effectValLab\")?.getComponent(Label);\r\n        this.select = this.node.getChildByName(\"select\");\r\n        if(this.select) this.select.active = false;\r\n        if(this.numLab) this.numLabInitCol = this.numLab.color.clone();\r\n        EventMgr.on(Evt_Item_Change, this.onItemChange, this);\r\n        EventMgr.on(Evt_Res_Update, this.onResUpdate, this);\r\n        EventMgr.on(Evt_Currency_Updtae, this.onCurrencyUpdate, this);\r\n        this.hasLoad = true;\r\n        this.complete?.();\r\n    }\r\n\r\n    protected get loadSub() {\r\n        if (this.$loadSub) return this.$loadSub;\r\n        let thisObj = this;\r\n        this.$loadSub = new Promise((resolve, reject) => {\r\n            thisObj.complete = resolve;\r\n        });\r\n    }\r\n    private onItemChange():void{\r\n        if(!this.isCanUpdate) return;\r\n        this.setCountCol();\r\n        \r\n    }\r\n    private onResUpdate():void{\r\n        this.setCountCol();\r\n    }\r\n    private onCurrencyUpdate():void{\r\n        this.setCountCol();\r\n    }\r\n    private get isCanUpdate():boolean{\r\n        if(!this.isCheckHave || !this._data) return false;\r\n        return true;\r\n    }\r\n    private setCountCol():void{\r\n        if(this.numLab){\r\n            if(this.isCheckHave && !ItemUtil.CheckItemIsHave(this.thingType, this.itemNum, this.itemId)){\r\n                this.numLab.color = new Color().fromHEX(\"#BF1600\");\r\n            }else{\r\n                this.numLab.color = this.numLabInitCol;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 设置消耗物品数据\r\n     * @param data number index 0 物品id index 1 物品数量, SPlayerDataItem道具数据结构\r\n     * @param isCheckHave 是否检测拥有\r\n     */\r\n    async SetData(data:{itemData: number[] | proto.base.IThing, select?: boolean }, isCheckHave:boolean = false) {\r\n        if (!this.hasLoad) await this.loadSub;\r\n        this._data = data;\r\n        this.isCheckHave = isCheckHave;\r\n        if(this._data.itemData instanceof Array){\r\n            if(this._data.itemData.length != 2){\r\n                console.error(`AwardItem.SetData非法数据！`)\r\n                return;\r\n            }\r\n            this.setItem({id:this._data.itemData[0], count: this._data.itemData[1]});\r\n        }else {\r\n            this.setThing(this._data.itemData as proto.base.IThing);\r\n        }\r\n        this.setCountCol();\r\n        this.formatName();\r\n        this.formatCount();\r\n        this.formatEffectVal();\r\n        if (this.qualBg && this.qualBgUrl) this.qualBg.spriteFrame = await ResMgr.LoadResAbSub(this.qualBgUrl, SpriteFrame);\r\n        if (this.icon) this.icon.spriteFrame = await ResMgr.LoadResAbSub(this.iconUrl, SpriteFrame);\r\n        if(this.roleMaskBg){\r\n            if(this.roleMaskBgUrl){\r\n                this.roleMaskBg.node.active = true;\r\n                this.roleMaskBg.spriteFrame = await ResMgr.LoadResAbSub(this.roleMaskBgUrl, SpriteFrame);\r\n            }else{\r\n                this.roleMaskBg.node.active = false;\r\n            }\r\n        }\r\n        if(this.roleMask){\r\n            if(this.roleMaskUrl){\r\n                this.roleMask.node.active = true;\r\n                this.roleMask.spriteFrame = await ResMgr.LoadResAbSub(this.roleMaskUrl, SpriteFrame);\r\n            }else{\r\n                this.roleMask.node.active = false;\r\n            }\r\n        }\r\n    }\r\n    private setItem(data: { id: number, count: number }) {\r\n        let stdItem = CfgMgr.Getitem(data.id);\r\n        if (!stdItem){\r\n            console.error(`AwardItem.SetData找不到物品id${data.id}`);\r\n            return;\r\n        }\r\n        \r\n        this.thingType = ThingTypeName.Item;\r\n        this.itemId = data.id;\r\n        this.itemNum = data.count;\r\n        this.iconUrl = null;\r\n        this.qualBgUrl = null;\r\n        this.roleMaskBgUrl = null;\r\n        this.roleMaskUrl = null;\r\n        this.itemName = \"\";\r\n        this.effectType = -1;\r\n        this.effectVal = -1;\r\n        this.showEffect = stdItem.HideBag;\r\n        let valStr:string = \"\";\r\n        this.effectType = stdItem.Itemtpye;\r\n        this.effectVal = stdItem.ItemEffect1;\r\n        this.itemName = stdItem.ItemName;\r\n        this.iconUrl = path.join(folder_item, stdItem.Icon, \"spriteFrame\");\r\n        this.qualBgUrl = path.join(folder_icon, \"quality\", CardQuality[stdItem.Quality] + \"_bag_bg\", \"spriteFrame\");\r\n            \r\n        \r\n        \r\n    }\r\n    protected async setThing(thing: proto.base.IThing) {\r\n        this.thingType = thing.type;\r\n        this.itemId = 0;\r\n        this.iconUrl = null;\r\n        this.qualBgUrl = null;\r\n        this.roleMaskBgUrl = null;\r\n        this.roleMaskUrl = null;\r\n        this.itemName = \"\";\r\n        this.effectType = -1;\r\n        this.effectVal = -1;\r\n        this.showEffect = 0;\r\n        if(thing.type == ThingTypeName.Item){\r\n            this.setItem({ id: thing.item.id, count: thing.item.count });\r\n        }\r\n        \r\n    }\r\n    /**\r\n     * 格式化奖励名称\r\n     */\r\n    private formatName():void{\r\n        if (!this.nameLab) return;\r\n        if(this._formatNameCb != null){\r\n            this.nameLab.string = this._formatNameCb(this.itemName);\r\n            return;\r\n        }\r\n        this.nameLab.string = `${this.itemName}`;\r\n    }\r\n    /**\r\n     * 格式化奖励数量\r\n     */\r\n    private formatCount():void{\r\n        if (!this.numLab || !this.itemNum) return;\r\n        if(this._formatCountCb != null){\r\n            this.numLab.string = this._formatCountCb(this.itemNum);\r\n            return;\r\n        }\r\n        this.numLab.string = this.itemNum.toString();\r\n    }\r\n    /**\r\n     * 格式化道具效果\r\n     */\r\n    private formatEffectVal():void{\r\n        if (!this.effectValLab) return;\r\n        if (this.showEffect > 0 || this.effectType < 0 || this.effectVal < 0){\r\n            if(this.effectValBg) this.effectValBg.active = false;\r\n            if(this.effectValLab) this.effectValLab.node.active = false;\r\n            return;\r\n        }\r\n        if(this.effectValBg) this.effectValBg.active = true;\r\n        if(this.effectValLab) this.effectValLab.node.active = true;\r\n        if(this._formatEffectCb != null){\r\n            this.effectValLab.string = this._formatEffectCb(this.effectType, this.effectVal);\r\n            return;\r\n        }\r\n        let valStr:string = \"\";\r\n        switch (this.effectType) {\r\n            case ItemType.exp:\r\n                valStr = `经验值${this.effectVal}`;\r\n                break;\r\n            case ItemType.speed:\r\n                valStr = `${this.effectVal / 60}分钟`;\r\n                break;\r\n        } \r\n        if(valStr == \"\")this.effectValBg.active = this.effectValLab.node.active = false;\r\n        this.effectValLab.string = valStr;\r\n    }\r\n    /**\r\n     * 格式化名称回调\r\n     */\r\n    FormatNameCb(cb:(name:string) => string){\r\n        this._formatNameCb = cb;\r\n    }\r\n    /**\r\n     * 格式化数量回调\r\n     */\r\n    FormatCountCb(cb:(num:number) => string){\r\n        this._formatCountCb = cb;\r\n    }\r\n    /**\r\n     * 格式化道具效果回调\r\n     */\r\n    FormatEffectCb(cb:(effectType:number, effectVal:number) => string){\r\n        this._formatEffectCb = cb;\r\n    }\r\n\r\n    get itemData(): number[] | proto.base.IThing{\r\n        return this._data.itemData;\r\n    }\r\n    get thingTypeData(){\r\n        return this.thingType;\r\n    }\r\n}"]}