{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/fight/GameScene.ts"],"names":["cardLoca","node","isMy","area","cardData","card","index","TouchInstId","data","fromInstId","undefined","_decorator","Component","director","find","Input","instantiate","Label","math","Node","ParticleSystem","path","Rect","sp","Sprite","SpriteFrame","tween","UITransform","v3","Vec3","view","GameSet","CardState","SceneCard","PlaneView","Second","TimeStamp","Utils","folder_icon","ResMgr","Skill","Battle_End_Round","EventMgr","Evt_BattleDoubleUpdate","Evt_ShowBattleDoubleEffect","Session","proto","Req","Ret","Route","PlayerData","battleDataMgr","BattleRoundOperationState","SkillUtils","CfgMgr","EffectTarget","MsgPanel","ShowArea","FightData","GameObj","SpriteLabel","AudioMgr","AudioDefine","ccclass","property","GameScene","handCenter","handRotation","myCardEnterV","adCardEnterV","PeekHandV","handQuat","areaList","areaSize","adTeamLayout","myTeamLayout","cardMap","selectEffects","handCards","selectedCard","areaTarget","canvas","areaCardLay","handCardLay","peekCardLay","uiView","handView","ui","myDeck","myHand","myDrop","myDel","myEnergy","adDeck","adHand","adDrop","adDel","adEnergy","revealCard","showArea","myhead","myNameLab","myRevealEffect","adhead","adNameLab","adRevealEffect","ruondBtn","roundBtnLab","progress","jshhEffect","qxjshhEffect","notTimeEffect","roundBtnMaskBg","exitBtn","energyLab","doubleBtn","doubleLab","isWaitInput","mask","zero","dropToHand","canMove","canDrop","operateHandle","roundProgress","roundState","isntance","_instance","prevLoad","loadSub","Promise","resolve","reject","GetResources","prefab","addComponent","Show","getScene","addChild","active","hasLoad","sub","onShow","Hide","RemoveAll","Reset","onHide","parent","removeChild","StopChannel","Channels","channel","Play","FlushRoundBtnStrState","EndRound","FlushRevealPlayer","AddTouchEffect","e","w","h","TestSize","checkTouch","PixelSize","emit","clickEffect","getChildByName","getComponent","Skeleton","clearAnimation","setAnimation","setCompleteListener","roomData","getPlayerDoubleResidue","getPlayerId","server","pb","Server","create","id","creatRoomData","serverId","roomId","Send","console","log","on","onBattleroomping","onBattleDoubleUpdate","hideViewCard","debug","off","DelTouchEffect","addCont","isUpdate","num","getRoomDoubleNum","oldNum","Number","string","worldPosition","Settlement","myPower","adPower","mywin","adwin","result","decode","res","code","onBattleroomdouble","onLoad","SceneHight","mainCamera","position","y","ls","s","k","split","pop","getChildByPath","forward","negative","rx","ry","rz","EulerAngles","setWorldRotationFromEuler","child","children","UNIT_Y","HandPlane","plane","getWorldRotation","v","localRightDown","set","x","z","CardHide","transformMat4","mat","getEulerAngles","getWorldPosition","i","frameSelect","p","clone","setPosition","setSiblingIndex","push","layout","concat","sk","CheckAnimation","getCurrent","animation","name","hitTest1","hitTest2","hitSize","contentSize","rect","width","p1","p2","setWorldPosition","ScreenToPlane","viewSize","height","setLocalLeftDown","setLocalRightUp","toString","setLocalRightDown","font","size","getVisibleSizeInPixel","ShowPoint","ScenePlane","ScreamRotation","quat","out","Quat","fromEuler","forEach","value","destroy","removeAllChildren","Create","loadHandle","skillTarget","attacker","targets","myarea","adarea","myAreas","adAreas","idx","loca","EndAllAction","EndAll","action","end","obj","running","StartOperate","playHandCard","EventType","TOUCH_START","onTouchStart","TOUCH_END","onTouchEnd","TOUCH_CANCEL","EndOperate","UnSelect","TOUCH_MOVE","onTouchMove","StopDrag","LayoutAllHandCards","LayoutAllArea","pt","getLocation","State","Handing","HitTest","msg","instId","flushSelectEffect","Drag","length","Math","abs","invertMat","Id","isDragging","viewCard","failType","state","pos","EndViewCard","filed","sd","skeletonData","desc","View","InitData","ViewCard","isFull","FlushPlayerInfo","isPlayerA","cfg","GetHead","deckAttr","avatarId","headName","icon","LoadResAbSub","join","spriteFrame","FlushRound","curRoundNum","maxRound","color","fillRange","PlaceRound","CancelRound","FlushRoundTime","time","isHaveEnergy","totalTime","rote","b","FlushEnergy","Energy","tt","fromSkillId","findCard","target","tag","update","dt","sorts","getSiblingIndex","sort","a","AddHandCard","cards","findIndex","FlushData","splice","total","CardWide","LayoutHands","promises","newCard","promise","SendToHand","all","ps","CopyCardToUnVisible","fromData","fromCard","fileLocation","location","MoveTo","receive","FlushHandCard","datas","max","SendMyCardToArea","error","PlayToMyArea","rotation","SendAdCardToArea","PlayToAdArea","FlushTerrain","ispLayerA","ownerPlayerId","terrainDatas","Reveal","TerrainInstIds","base","BattleRoomGamePlayData","terrains","levelData","reveal","players","player","playerId","terrain","my","ad","selfInstId","instId1","instId2","destory","std","Get","configId","filedUrl","AreaIcon","ainmName","loop","terrainState","BattleRoomInTerrainState","TerrainStateUnknown","TerrainStateHide","peek","indexOf","AffectText","currentRound","TerrainStateShow","scale","to","start","TerrainStateDestroy","SkeletonData","LockTerrain","toInstId","FlushAreaPower","power","areaNode","apower","bpower","aeffect","beffect","old","FlushAreaCrads","CheckMatrix","LayoutArea","CloseCard","TurnBack","ShowCard","Open","BattleRoomCardLocation","Hand","Deck","Drop","Del","Terrain","areaName","PlaySkill","count","curRound","self","TryToFindTarget","output","skillId","RemoveSkill","Stop","toPlayerId","toSkillId","CardDataChange","changeCard","RmoveCardFormArea","removeTag","delLoca","RemoveCardFormHand","locaNode","warn","setWorldRotation","CardBackToArea","formIsPlayerA","toIsPlayerA","areaIdx","cardIdx","fromNode","fromLocation","AddCard","sourceInstId","sourceLocation","tager","sourceCard","isMove","AddCardToArea","targetIdx","Showing","AutoPlayHand","RemoveDeckToUnVisible","delNode","tagNode","AddCardToDeck","targetPlayer","head","tagObj","fromPlayerId","AddCardToHand","fromLoca","CardAreaMove","targetNode","PeekTerrain","isplayerA","playerIdA","terrainData","areas","PeekHandCards"],"mappings":"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","sourcesContent":["import { _decorator, Color, Component, director, EventTouch, find, geometry, Input, instantiate, Label, math, MeshRenderer, Node, ParticleSystem, path, Prefab, Rect, Scene, sp, Sprite, SpriteFrame, Terrain, tween, UITransform, v3, Vec3, view } from 'cc';\r\nimport { GameSet } from '../../manager/GameSet';\r\nimport { CardState, SceneCard } from './display/SceneCard';\r\nimport { PlaneView, Second, TimeStamp, Utils } from '../../utils/Utils';\r\nimport { folder_icon, ResMgr } from '../../manager/ResMgr';\r\nimport { Skill } from './display/Skill';\r\nimport { Battle_End_Round, EventMgr, Evt_BattleDoubleUpdate, Evt_ShowBattleDoubleEffect } from '../../manager/EventMgr';\r\nimport { Session } from '../../net/Session';\r\nimport proto, { Req, Ret, Route } from '../../net/Protocol';\r\nimport { PlayerData } from '../player/PlayerData';\r\nimport { battleDataMgr } from '../battle/BattleDataMgr';\r\nimport { BattleRoundOperationState } from '../player/PlayerStruct';\r\nimport { SkillUtils } from './SkillUtils';\r\nimport { CfgMgr } from '../../manager/CfgMgr';\r\nimport { EffectTarget } from './display/TestSkill';\r\nimport { MsgPanel } from '../common/MsgPanel';\r\nimport { Tips } from '../common/Tips';\r\nimport { ShowArea } from './display/ShowArea';\r\nimport { FightData } from './FightData';\r\nimport { GameObj } from '../../manager/GameRoot';\r\nimport { SpriteLabel } from '../../component/SpriteLabel';\r\nimport { AudioMgr } from '../../manager/AudioMgr';\r\nimport { AudioDefine } from '../../define/AudioDefine';\r\nconst { ccclass, property } = _decorator;\r\n\r\ntype OutStruct = {\r\n    fromInstId?: (string | null);\r\n    card?: (proto.base.IBattleRoomCardData | null);\r\n    fromSkillId?: (number | null);\r\n}\r\n\r\ntype CardLoca = {\r\n    isMy: boolean, card: SceneCard, area: number, index: number\r\n}\r\n\r\nfunction cardLoca(node: Node, isMy: boolean): CardLoca {\r\n    let area = -1;\r\n    if (node instanceof SceneCard) area = node.cardData.area;\r\n    return {\r\n        isMy: isMy,\r\n        card: <unknown>node as SceneCard,\r\n        area: area,\r\n        index: -1,\r\n    }\r\n}\r\n\r\nfunction TouchInstId(data: any) {\r\n    if (data.fromInstId && data['touchInstId'] && data.fromInstId != data['touchInstId']) return data['touchInstId'];\r\n    return undefined;\r\n}\r\n\r\n@ccclass('GameScene')\r\nexport class GameScene extends Component {\r\n    protected static _instance: GameScene;\r\n    static get isntance() {\r\n        return this._instance;\r\n    }\r\n    private static hasLoad = false;\r\n    private static loadHandle: Function;\r\n    private static sub: Promise<any> = new Promise((resolve, reject) => { GameScene.loadHandle = resolve });\r\n\r\n    static async prevLoad() {\r\n        if (!this._instance) {\r\n            let loadSub = new Promise((resolve, reject) => {\r\n                ResMgr.GetResources(\"prefabs/fight/FightScene\", (prefab: Prefab) => {\r\n                    let node: Node = instantiate(prefab);\r\n                    GameScene._instance = node.addComponent(GameScene);\r\n                    resolve(GameScene._instance);\r\n                })\r\n            });\r\n            return loadSub;\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n\r\n    static async Show() {\r\n        if (!this._instance) await this.prevLoad();\r\n        director.getScene().addChild(this._instance.node);\r\n        this._instance.node.active = true;\r\n        if (!this.hasLoad) await this.sub;\r\n        this._instance.onShow();\r\n    }\r\n    static async Hide() {\r\n        if (!this.hasLoad) await this.sub;\r\n        Skill.RemoveAll();\r\n        this._instance.Reset();\r\n        this._instance.onHide();\r\n        this._instance.node.parent && this._instance.node.parent.removeChild(this._instance.node);\r\n    }\r\n\r\n    private async onShow() {\r\n        AudioMgr.StopChannel(AudioDefine.Channels[\"audio/bgm/*\"].channel);\r\n        AudioMgr.Play(\"audio/bgm/MainTheme\", 0, 0.3);\r\n\r\n        this.Reset();\r\n        this.FlushRoundBtnStrState(BattleRoundOperationState.EndRound);\r\n        this.FlushRevealPlayer(null);\r\n\r\n        Utils.AddTouchEffect(this.ruondBtn, (e) => {\r\n            if (this.selectedCard || this.areaTarget) return false;\r\n            let [w, h] = Utils.TestSize(this.ruondBtn, true);\r\n            if (!this.uiView.checkTouch(e, this.ruondBtn, w * GameSet.PixelSize, h * GameSet.PixelSize)) return false;\r\n            if (!this.isWaitInput) return false;\r\n            EventMgr.emit(Battle_End_Round);\r\n            let clickEffect: sp.Skeleton = this.ruondBtn.getChildByName(\"clickEffect\").getComponent(sp.Skeleton);\r\n            clickEffect.node.active = true;\r\n            clickEffect.clearAnimation();\r\n            clickEffect.setAnimation(0, \"animation\", false);\r\n            clickEffect.setCompleteListener(() => {\r\n                clickEffect.node.active = false;\r\n            });\r\n            return true;\r\n        }, this, this.canvas);\r\n\r\n        Utils.AddTouchEffect(this.doubleBtn, (e) => {\r\n            if (this.selectedCard || this.areaTarget) return false;\r\n            let [w, h] = Utils.TestSize(this.doubleBtn, true);\r\n            w -= 300, h -= 450;\r\n            if (!this.uiView.checkTouch(e, this.doubleBtn, w * GameSet.PixelSize, h * GameSet.PixelSize)) return false;\r\n            if (!battleDataMgr.roomData) {\r\n                MsgPanel.Show(\"房间不存在了\")\r\n                return;\r\n            }\r\n            if (battleDataMgr.getPlayerDoubleResidue(battleDataMgr.getPlayerId(true))) {\r\n                MsgPanel.Show(\"加倍次数不足\")\r\n                return;\r\n            }\r\n            let server: proto.pb.IServer = proto.pb.Server.create();\r\n            server.id = battleDataMgr?.creatRoomData?.serverId || \"\";\r\n            let data = new Req['battle.protocol.battleroomdouble']();\r\n            data.server = server;\r\n            data.roomId = battleDataMgr.roomData.roomId;\r\n            Session.Send(Route['battle.protocol.battleroomdouble'], data);\r\n            console.log(\"发送加倍---->\");\r\n            return true;\r\n        }, this, this.canvas);\r\n\r\n        Utils.AddTouchEffect(this.exitBtn, (e) => {\r\n            if (this.selectedCard || this.areaTarget) return false;\r\n            let [w, h] = Utils.TestSize(this.exitBtn, true);\r\n            if (!this.uiView.checkTouch(e, this.exitBtn, w * GameSet.PixelSize, h * GameSet.PixelSize)) return false;\r\n            let server: proto.pb.IServer = proto.pb.Server.create();\r\n            server.id = battleDataMgr?.creatRoomData?.serverId || \"\";\r\n            let data = new Req['battle.protocol.battleroomleave']();\r\n            data.server = PlayerData.server;\r\n            data.roomId = battleDataMgr?.roomData?.roomId || battleDataMgr?.creatRoomData?.roomId;\r\n            Session.Send(Route['battle.protocol.battleroomleave'], data);\r\n            console.log(\"发送离开房间---->\")\r\n            return true;\r\n        }, this, this.canvas);\r\n        \r\n        Session.on(Route['battle.protocol.battleroomping'], this.onBattleroomping, this);\r\n        EventMgr.on(Evt_BattleDoubleUpdate, this.onBattleDoubleUpdate, this);\r\n        EventMgr.on(\"op_start\", this.hideViewCard, this);\r\n        this.onBattleDoubleUpdate(0, false);\r\n    }\r\n\r\n    private onHide() {\r\n        AudioMgr.StopChannel(AudioDefine.Channels[\"audio/bgm/*\"].channel);\r\n        GameSet.debug = false;\r\n        Session.off(Route['battle.protocol.battleroomping'], this.onBattleroomping, this);\r\n        EventMgr.off(Evt_BattleDoubleUpdate, this.onBattleDoubleUpdate, this);\r\n        Utils.DelTouchEffect(this.ruondBtn, this.canvas);\r\n        Utils.DelTouchEffect(this.doubleBtn, this.canvas);\r\n    }\r\n    private onBattleDoubleUpdate(addCont: number = 0, isUpdate: boolean = true): void {\r\n        let num: number = battleDataMgr.getRoomDoubleNum(addCont);\r\n        let oldNum: number = Number(this.doubleLab.string);\r\n        this.doubleLab.string = `${num}`;\r\n        if (isUpdate && num > oldNum) {\r\n            EventMgr.emit(Evt_ShowBattleDoubleEffect, this.doubleBtn.worldPosition);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 结算区域战力\r\n     */\r\n    async Settlement() {\r\n        for (let area of this.areaList) {\r\n            let myPower = Number(area.getChildByName(\"power1\").getComponent(Label).string);\r\n            let adPower = Number(area.getChildByName(\"power2\").getComponent(Label).string);\r\n            area.getChildByName(\"mywin01\").active = false;\r\n            area.getChildByName(\"adwin01\").active = false;\r\n            let mywin = area.getChildByName(\"mywin02\");\r\n            let adwin = area.getChildByName(\"adwin02\");\r\n            if (myPower > adPower) {\r\n                mywin.active = true;\r\n                adwin.active = false;\r\n                await Second(0.5);\r\n            } else if (myPower < adPower) {\r\n                mywin.active = false;\r\n                adwin.active = true;\r\n                await Second(0.5);\r\n            } else {\r\n                mywin.active = false;\r\n                adwin.active = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    //房间ping结果返回\r\n    private onBattleroomping(data: any): void {\r\n        return;\r\n        let result = Ret['battle.protocol.battleroomping'].decode(data);\r\n        if (result.res.code !== 200) {\r\n            //房间不存在了\r\n        }\r\n    }\r\n\r\n    private onBattleroomdouble(): void {\r\n\r\n    }\r\n    // 参数相关\r\n    public handCenter = v3();     //手卡中点\r\n    public handRotation = v3();   //手卡角度\r\n    public myCardEnterV = v3();   //自己飞入手卡的起始位置\r\n    public adCardEnterV = v3();   //对手飞入手卡的起始位置\r\n    public PeekHandV: Vec3;\r\n    public handQuat: math.Quat;   //手牌角度\r\n\r\n    // 布局节点相关\r\n    public areaList: Node[] = [];       //区域节点列表\r\n    public areaSize: Rect[] = [];       //区域碰撞检测数据\r\n    public adTeamLayout: Node[][] = []; //对方布局\r\n    public myTeamLayout: Node[][] = []; //自己布局\r\n    private cardMap: { [id: string]: CardLoca } = {};// 场景中所有卡的相对路由\r\n    protected selectEffects: Node[] = [];\r\n\r\n    // 操作相关\r\n    public handCards: SceneCard[] = []; //自己手卡列表\r\n    public selectedCard: SceneCard;     //选中的手牌或自己区域里的牌\r\n    public areaTarget: number;          //操作过程选中放置卡牌的目标区域\r\n    public canvas: Node;                //2d画布\r\n    protected areaCardLay: Node;\r\n    protected handCardLay: Node;\r\n    protected peekCardLay: Node; //窥视卡显示层\r\n    protected uiView: PlaneView;\r\n    protected handView: PlaneView;\r\n    protected ui: Node;\r\n    protected myDeck: Node;\r\n    protected myHand: Node;\r\n    protected myDrop: Node;\r\n    protected myDel: Node;\r\n    protected myEnergy: Node;\r\n    protected adDeck: Node;\r\n    protected adHand: Node;\r\n    protected adDrop: Node;\r\n    protected adDel: Node;\r\n    protected adEnergy: Node;\r\n    protected revealCard: SceneCard;\r\n    protected showArea: ShowArea;\r\n\r\n    //ui\r\n    public myhead: Sprite;\r\n    public myNameLab: Label;\r\n    public myRevealEffect: sp.Skeleton;\r\n    public adhead: Sprite;\r\n    public adNameLab: Label;\r\n    public adRevealEffect: sp.Skeleton;\r\n\r\n    public ruondBtn: Node;\r\n    public roundBtnLab: Label;\r\n    progress: Sprite;\r\n    public jshhEffect: Node;\r\n    public qxjshhEffect: Node;\r\n    public notTimeEffect: Node;\r\n    private roundBtnMaskBg: Node;\r\n    public exitBtn: Node;\r\n\r\n    public energyLab: SpriteLabel;\r\n    public doubleBtn: Node;\r\n    public doubleLab: SpriteLabel;\r\n    public isWaitInput: boolean = false;\r\n    protected mask: Node;\r\n    protected zero: Vec3;\r\n\r\n    protected dropToHand: boolean;\r\n    protected canMove: (instId: string, area?: number) => boolean;\r\n    protected canDrop: (instId: string, area?: number) => number;\r\n    protected operateHandle: (instId: string, targetArea: number, cardState?: number) => number;\r\n    protected async onLoad() {\r\n        await Second(0);\r\n        this.areaCardLay = this.node.getChildByName(\"areaCardLay\");\r\n        this.handCardLay = this.node.getChildByName(\"myHand\");\r\n        this.peekCardLay = this.node.getChildByName(\"peekCardLay\");\r\n        this.mask = this.node.getChildByName(\"mask\");\r\n\r\n        GameSet.SceneHight = GameSet.mainCamera.node.position.y;\r\n\r\n        const ls = [\"ui\", \"myDeck\", \"myHand\", \"myDrop\", \"myDel\", \"costmodel/myEnergy\", \"adDeck\", \"adHand\", \"adDrop\", \"adDel\", \"ui/adEnergy\"];\r\n        for (let s of ls) {\r\n            let k = s.split(\"/\").pop();\r\n            this[k] = this.node.getChildByPath(s);\r\n            this[k].active = true;\r\n        }\r\n\r\n        this.canvas = find(\"Canvas\");\r\n        let forward = GameSet.mainCamera.node.forward.negative();\r\n        let [rx, ry, rz] = Utils.EulerAngles(v3(0, 1, 0), forward);\r\n        this.myHand.setWorldRotationFromEuler(rx, ry, rz);\r\n        this.ui.setWorldRotationFromEuler(rx, ry, rz);\r\n\r\n        let child = this.myHand.children[0];\r\n        this.handView = new PlaneView(GameSet.mainCamera, this.myHand, Vec3.UNIT_Y);\r\n        GameSet.HandPlane = this.handView.plane;\r\n        this.handQuat = child.getWorldRotation();\r\n        let v = this.handView.localRightDown, handCenter = v3();\r\n        handCenter.set(v.x - 1, v.y, v.z - GameSet.CardHide / 4);\r\n        Vec3.transformMat4(this.handCenter, handCenter, this.handView.mat);\r\n\r\n        this.myHand.getWorldRotation().getEulerAngles(this.handRotation);\r\n        this.myDeck.getWorldPosition(this.myCardEnterV);\r\n        this.adDeck.getWorldPosition(this.adCardEnterV);\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            let area = this.node.getChildByName(\"area\" + i);\r\n            let frameSelect = area.getChildByName(\"frame_select\");\r\n            let p = frameSelect.worldPosition.clone();\r\n            this.node.addChild(frameSelect);\r\n            frameSelect.setPosition(p.x, p.y, p.z);\r\n            frameSelect.setSiblingIndex(3);\r\n            this.selectEffects.push(frameSelect);\r\n            this.areaList.push(area);\r\n            let layout = [];\r\n            let children = area.getChildByPath(\"team1\").children.concat();\r\n            for (let child of children) {\r\n                layout.push(child);\r\n            }\r\n            let sk = area.getChildByName(\"filed\").getComponent(sp.Skeleton);\r\n            sk.setCompleteListener(() => {\r\n                if (Utils.CheckAnimation(sk, \"idle\") && sk?.getCurrent(0)?.animation.name != \"idle\") sk.setAnimation(0, \"idle\", true);\r\n            });\r\n\r\n            let hitTest1 = area.getChildByName(\"hitTest1\");\r\n            let hitTest2 = area.getChildByName(\"hitTest2\");\r\n            hitTest1.name = hitTest1.name + \"_\" + area.name;\r\n            hitTest2.name = hitTest2.name + \"_\" + area.name;\r\n            let hitSize = hitTest1.getComponent(UITransform).contentSize;\r\n            let rect = new Rect(hitTest1.worldPosition.x, 5, hitSize.width, 20);\r\n            this.areaSize[i] = rect;\r\n            this.myTeamLayout[i] = layout;\r\n            area['hitTest1'] = hitTest1;\r\n            area['hitTest2'] = hitTest2;\r\n            let p1 = hitTest1.worldPosition.clone();\r\n            let p2 = hitTest2.worldPosition.clone();\r\n            this.node.addChild(hitTest1);\r\n            this.node.addChild(hitTest2);\r\n            hitTest1.setSiblingIndex(4);\r\n            hitTest2.setSiblingIndex(4);\r\n            hitTest1.setWorldPosition(p1);\r\n            hitTest2.setWorldPosition(p2);\r\n\r\n            layout = [];\r\n            children = area.getChildByPath(\"team2\").children.concat();\r\n            for (let child of children) {\r\n                layout.push(child);\r\n            }\r\n            this.adTeamLayout[i] = layout;\r\n\r\n        }\r\n\r\n        this.PeekHandV = v3(...Utils.ScreenToPlane(GameSet.viewSize.width / 2, GameSet.viewSize.height / 2, GameSet.mainCamera, GameSet.HandPlane));\r\n\r\n        this.uiView = new PlaneView(GameSet.mainCamera, this.ui, Vec3.UNIT_Y);\r\n        this.uiView.setLocalLeftDown(this.ui.getChildByName(\"my\"), 2.5, 4);\r\n        this.uiView.setLocalRightUp(this.ui.getChildByName(\"ad\"), 2.7, 2.5);\r\n        // this.uiView.setLocalLeftUp(this.ui.getChildByName(\"double\"), 9, 5);\r\n        console.log(\"**************\", this.ui.getChildByName(\"double\").position.toString())\r\n        // this.uiView.setLocalRightDown(this.ui.getChildByName(\"myEnergy\"), 10, 13);\r\n\r\n        this.ruondBtn = this.ui.getChildByName(\"roundBtn\");\r\n        this.roundBtnLab = this.ui.getChildByPath(\"roundBtn/btnLab\").getComponent(Label);\r\n        this.jshhEffect = this.ui.getChildByPath(\"roundBtn/jshhEffect\");\r\n        this.qxjshhEffect = this.ui.getChildByPath(\"roundBtn/qxjshhEffect\");\r\n        this.notTimeEffect = this.ui.getChildByPath(\"roundBtn/notTimeEffect\");\r\n        this.roundBtnMaskBg = this.ui.getChildByPath(\"roundBtn/maskBg\");\r\n        this.progress = this.ui.getChildByPath(\"roundBtn/progress\").getComponent(Sprite);\r\n        this.uiView.setLocalRightDown(this.ruondBtn, 2, 8.5);\r\n\r\n        this.exitBtn = this.ui.getChildByPath(\"exitBtn\");\r\n        this.uiView.setLocalLeftDown(this.exitBtn, 2, 8.5);\r\n\r\n        this.myhead = this.ui.getChildByPath(\"my/myhead\").getComponent(Sprite);\r\n        this.myNameLab = this.ui.getChildByPath(\"my/myNameLab\").getComponent(Label);\r\n        this.myRevealEffect = this.ui.getChildByPath(\"my/revealEffect\").getComponent(sp.Skeleton);\r\n        this.adhead = this.ui.getChildByPath(\"ad/adhead\").getComponent(Sprite);\r\n        this.adNameLab = this.ui.getChildByPath(\"ad/adNameLab\").getComponent(Label);\r\n        this.adRevealEffect = this.ui.getChildByPath(\"ad/revealEffect\").getComponent(sp.Skeleton);\r\n\r\n        this.doubleBtn = this.ui.getChildByPath(\"double\");\r\n        this.doubleLab = this.ui.getChildByPath(\"double/effect/doubleLab\").addComponent(SpriteLabel);\r\n        this.doubleLab.font = \"sheets/numberImg/num2\";\r\n        this.energyLab = this.node.getChildByPath(\"costmodel/myEnergy\").addComponent(SpriteLabel);\r\n        this.energyLab.font = \"sheets/numberImg/num3\";\r\n\r\n        let size = view.getVisibleSizeInPixel();\r\n        GameSet.ShowPoint = v3(...Utils.ScreenToPlane(size.width / 2, size.height / 2, GameSet.mainCamera, GameSet.ScenePlane, 22));\r\n\r\n        GameSet.ScreamRotation = math.quat();\r\n        let out = v3();\r\n        this.myHand.getWorldRotation().getEulerAngles(out)\r\n        math.Quat.fromEuler(GameSet.ScreamRotation, out.x, 0, 0);\r\n\r\n        this.myHand.children.forEach(value => {\r\n            value.parent.removeChild(value);\r\n            value.destroy();\r\n        })\r\n        this.myHand.removeAllChildren();\r\n\r\n        this.zero = this.node.worldPosition.clone();\r\n        this.zero.y += 6;\r\n\r\n        this.revealCard = SceneCard.Create();\r\n        this.showArea = ShowArea.Create();\r\n\r\n        if (!GameScene._instance) GameScene._instance = this;\r\n        GameScene.hasLoad = true;\r\n        if (GameScene.loadHandle) GameScene.loadHandle();\r\n    }\r\n\r\n    protected skillTarget(isMy: boolean, attacker: Node, targets: Node[], myarea: number[] = [0, 1, 2], adarea: number[] = [0, 1, 2]) {\r\n        let myAreas = [], adAreas = [];\r\n        for (let idx of myarea) {\r\n            let area = this.areaList[idx];\r\n            if (idx >= 0 && area != undefined) myAreas.push(area['hitTest1']);//area.getChildByName(\"hitTest1_\" + area.name));\r\n        }\r\n        for (let idx of adarea) {\r\n            let area = this.areaList[idx];\r\n            if (idx >= 0 && area != undefined) adAreas.push(area['hitTest2']);//area.getChildByName(\"hitTest2_\" + area.name));\r\n        }\r\n        let loca = [];\r\n        if (isMy) {\r\n            loca = [myAreas, this.myDeck, this.myHand, this.myDrop, this.myDel, this.myEnergy, adAreas, this.adDeck, this.adHand, this.adDrop, this.adDel, this.adEnergy];\r\n        } else {\r\n            loca = [adAreas, this.adDeck, this.adHand, this.adDrop, this.adDel, this.adEnergy, myAreas, this.myDeck, this.myHand, this.myDrop, this.myDel, this.myEnergy];\r\n        }\r\n        return new EffectTarget(attacker, targets, ...loca);\r\n    }\r\n\r\n    /**\r\n     * 停止所有动作\r\n     */\r\n    EndAllAction() {\r\n        Skill.EndAll();\r\n        for (let card of this.handCards) {\r\n            card?.action?.end();\r\n        }\r\n        for (let k in this.cardMap) {\r\n            let obj = this.cardMap[k];\r\n            if (obj?.card?.action?.running) obj?.card?.action?.end();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 开始操作\r\n     * @param canMove \r\n     * @param canDrop \r\n     * @param playHandCard \r\n     */\r\n    StartOperate(canMove: (instId: string) => boolean, canDrop: (instId: string, area?: number) => number, playHandCard: (instId: string, targetArea: number) => number) {\r\n        this.canMove = canMove;\r\n        this.canDrop = canDrop;\r\n        this.operateHandle = playHandCard;\r\n        this.canvas.on(Input.EventType.TOUCH_START, this.onTouchStart, this);\r\n        this.canvas.on(Input.EventType.TOUCH_END, this.onTouchEnd, this);\r\n        this.canvas.on(Input.EventType.TOUCH_CANCEL, this.onTouchEnd, this);\r\n    }\r\n    /**\r\n     * 结束操作\r\n     */\r\n    EndOperate() {\r\n        this.UnSelect();\r\n        this.canvas.off(Input.EventType.TOUCH_START, this.onTouchStart, this);\r\n        this.canvas.off(Input.EventType.TOUCH_END, this.onTouchEnd, this);\r\n        this.canvas.off(Input.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n        this.canvas.off(Input.EventType.TOUCH_CANCEL, this.onTouchEnd, this);\r\n    }\r\n    /**\r\n     * 中断选卡操作\r\n     */\r\n    UnSelect() {\r\n        if (this.selectedCard) {\r\n            this.selectedCard.StopDrag();\r\n            this.LayoutAllHandCards();\r\n            this.LayoutAllArea();\r\n            this.selectedCard = undefined;\r\n        }\r\n    }\r\n    /**点击 */\r\n    protected onTouchStart(e: EventTouch) {\r\n        if (this.mask.active) return;\r\n        let pt = e.getLocation();\r\n        //先计算是否点击到手牌\r\n        let [x, y, z] = Utils.ScreenToPlane(pt.x, pt.y, GameSet.mainCamera, GameSet.HandPlane);\r\n        for (let card of this.handCards) {\r\n            if (card.State == CardState.Handing && card.HitTest(x, y, z)) {\r\n                let msg = this.canMove(card.instId);\r\n                if (msg) {\r\n                    // MsgPanel.Show(msg);\r\n                    continue;\r\n                }\r\n                //if (this.selectedCard == undefined) this.flushSelectEffect(true);\r\n                this.selectedCard = card;\r\n                this.selectedCard['isHandCard'] = true;\r\n                this.flushSelectEffect(true);\r\n                // this.selectedCard.parent.removeChild(this.selectedCard);\r\n                // this.node.addChild(this.selectedCard);\r\n                this.canvas.on(Input.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n                return;\r\n            }\r\n        }\r\n        //再计算是否点击到自己的区域牌\r\n        [x, y, z] = Utils.ScreenToPlane(pt.x, pt.y, GameSet.mainCamera, GameSet.ScenePlane);\r\n        for (let k in this.cardMap) {\r\n            let obj = this.cardMap[k];\r\n            let card = obj?.card;\r\n            if (obj?.isMy && card && card.HitTest && card.HitTest(x, y, z)) {\r\n                let area = obj?.area;\r\n                let msg = this.canMove(card.instId, area);\r\n                if (msg) {\r\n                    // MsgPanel.Show(msg);\r\n                    continue;\r\n                }\r\n                this.selectedCard = card;\r\n                this.selectedCard['isHandCard'] = false;\r\n                this.node.addChild(this.selectedCard);\r\n                this.canvas.on(Input.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    /**拖动操作 */\r\n    protected onTouchMove(e?: EventTouch) {\r\n        let p = e.getLocation();\r\n        if (this.selectedCard) {\r\n            // 拖动中\r\n            this.selectedCard.Drag(p.x, p.y);\r\n\r\n            let x: number, y: number, z: number;\r\n            this.dropToHand = false;\r\n            this.areaTarget = undefined;\r\n\r\n            if (this.selectedCard['isHandCard']) {\r\n                // 拖动的是手牌\r\n                [x, y, z] = Utils.ScreenToPlane(p.x, p.y, GameSet.mainCamera, GameSet.ScenePlane);\r\n                for (let i = 0; i < this.areaSize.length; i++) {\r\n                    let rect = this.areaSize[i];\r\n                    if (Math.abs(x - rect.x) <= rect.width / 2 && Math.abs(z - rect.y) <= rect.height / 2) {\r\n                        // this.flushSelectEffect(i);\r\n                        if (!this.canDrop(this.selectedCard.instId, i)) {\r\n                            this.areaTarget = i;\r\n                        } else {\r\n                            // console.log(\"cannotDrop\", this.canDrop(this.selectedCard.instId, i));\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n                if (this.areaTarget == undefined) {\r\n                    // this.flushSelectEffect();\r\n                } else return;\r\n            }\r\n\r\n            // 计算是否触碰到手牌区域\r\n            [x, y, z] = Utils.ScreenToPlane(p.x, p.y, GameSet.mainCamera, GameSet.HandPlane);\r\n            let out = v3();\r\n            Vec3.transformMat4(out, v3(x, y, z), this.handView.invertMat);\r\n            if (Math.abs(out.z) >= 9.8) {\r\n                this.dropToHand = true;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**松手后的计算 */\r\n    protected onTouchEnd(e: EventTouch) {\r\n        this.canvas.off(Input.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n        this.flushSelectEffect();\r\n        if (this.selectedCard != undefined) {\r\n            let instId = this.selectedCard.Id;\r\n            if (!this.selectedCard.isDragging && this.selectedCard.cardData) {\r\n                this.viewCard(this.selectedCard.cardData, this.selectedCard.getWorldPosition());\r\n            }\r\n            this.selectedCard.StopDrag();\r\n\r\n            // 处理场景区域操作\r\n            if (this.areaTarget != undefined) {\r\n                let failType = this.operateHandle(instId, this.areaTarget, this?.selectedCard?.state);\r\n                this.areaTarget = undefined;\r\n                this.selectedCard = undefined;\r\n                if (failType) {\r\n\r\n                }\r\n            } else if (this.dropToHand) {\r\n                this.dropToHand = undefined;\r\n                let failType = this.operateHandle(instId, undefined, this?.selectedCard?.state);\r\n                this.selectedCard = undefined;\r\n                this.areaTarget = undefined;\r\n                if (failType) {\r\n\r\n                }\r\n            } else {\r\n                this.LayoutAllHandCards();\r\n                this.LayoutAllArea();\r\n                this.selectedCard = undefined;\r\n                this.areaTarget = undefined;\r\n            }\r\n        } else if (this.mask.active) {\r\n            this.hideViewCard();\r\n        } else {\r\n            let pt = e.getLocation();\r\n            let [x, y, z] = Utils.ScreenToPlane(pt.x, pt.y, GameSet.mainCamera, GameSet.HandPlane);\r\n            for (let card of this.handCards) {\r\n                if (card.cardData && card.HitTest(x, y, z)) {\r\n                    this.viewCard(card.cardData, card.getWorldPosition());\r\n                    return;\r\n                }\r\n            }\r\n            //再计算是否点击到自己的区域牌\r\n            [x, y, z] = Utils.ScreenToPlane(pt.x, pt.y, GameSet.mainCamera, GameSet.ScenePlane);\r\n            for (let k in this.cardMap) {\r\n                let obj = this.cardMap[k];\r\n                let card = obj?.card;\r\n                if (card?.cardData && card?.HitTest(x, y, z)) {\r\n                    this.viewCard(card.cardData, card.getWorldPosition());\r\n                    return;\r\n                }\r\n            }\r\n\r\n            //计算是否触碰地形区域\r\n            // for (let area of this.areaList) {\r\n            //     let icon = area.getChildByName(\"hitTest\");\r\n            //     let p = icon.worldPosition;\r\n            //     let size = icon.getComponent(UITransform).contentSize;\r\n            //     // console.log(\"hitTest\", Math.abs(p.x - x), size.width * icon.scale.x, Math.abs(p.z - z), size.height * icon.scale.y);\r\n            //     if (Math.abs(p.x - x) < size.width * icon.scale.x && Math.abs(p.z - z) <= size.height * icon.scale.y) {\r\n            //         this.viewCard(area);\r\n            //         return;\r\n            //     }\r\n            // }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 展示详细信息\r\n     * @param data \r\n     * @param pos \r\n     */\r\n    protected async viewCard(data: proto.base.IBattleRoomCardData | Node, pos?: Vec3) {\r\n        if (data instanceof Node) {\r\n            let area = data;\r\n            this.revealCard.EndViewCard();\r\n            this.mask.active = true;\r\n            this.node.addChild(this.showArea);\r\n            let filed = area.getChildByName(\"filed\");\r\n            let sd = filed.active ? filed.getComponent(sp.Skeleton).skeletonData : undefined;\r\n            let desc = area.getChildByName(\"desc\").getComponent(Label).string;\r\n            let myPower = area.getChildByName(\"power1\").getComponent(Label).string;\r\n            let adPower = area.getChildByName(\"power2\").getComponent(Label).string;\r\n            this.showArea.View(sd, desc, myPower, adPower, area.worldPosition);\r\n        } else {\r\n            this.showArea.Hide();\r\n            let cardData: proto.base.IBattleRoomCardData = data;\r\n            this.node.addChild(this.revealCard);\r\n            this.revealCard.active = true;\r\n            await this.revealCard.InitData(true, cardData);\r\n            if (!this.mask.active) {\r\n                this.mask.active = true;\r\n                if (!pos) pos = this.zero;\r\n                this.revealCard.setWorldPosition(pos);\r\n                this.revealCard.ViewCard();\r\n            }\r\n        }\r\n    }\r\n    protected hideViewCard() {\r\n        this.mask.active = false;\r\n        this.showArea.Hide();\r\n        this.revealCard.EndViewCard();\r\n        this.revealCard.active = false;\r\n    }\r\n\r\n    /**区域选中效果 */\r\n    protected flushSelectEffect(value: boolean = false) {//,area?: number) {\r\n        for (let i = 0; i < this.areaList.length; i++) {\r\n            let isFull = !this.canDrop(this.selectedCard?.instId, i);\r\n            // this.areaList[i].getChildByName(\"frame_select\").active = value && isFull;//i == area;\r\n            this.selectEffects[i].active = value && isFull;\r\n        }\r\n    }\r\n    /**刷新对战玩家信息 */\r\n    FlushPlayerInfo(isPlayerA: boolean, data: proto.base.IBattleRoomPlayerData) {\r\n        let cfg = CfgMgr.GetHead(data?.deckAttr?.avatarId);\r\n        let headName: string = \"\";\r\n        if (cfg) {\r\n            headName = cfg.icon;\r\n        } else {\r\n            this.myhead.node.active = false;\r\n        }\r\n        this.myhead.node.active = true;\r\n        if (isPlayerA) {\r\n            this.myNameLab.string = data.name;\r\n            ResMgr.LoadResAbSub(path.join(folder_icon, \"head/\", headName, \"spriteFrame\"), SpriteFrame, res => {\r\n                this.myhead.spriteFrame = res;\r\n            });\r\n        } else {\r\n            ResMgr.LoadResAbSub(path.join(folder_icon, \"head/\", headName, \"spriteFrame\"), SpriteFrame, res => {\r\n                this.adhead.spriteFrame = res;\r\n            });\r\n            this.adNameLab.string = data.name;\r\n        }\r\n    }\r\n    /**刷新回合数 */\r\n    FlushRound(curRoundNum: number, maxRound: number) {\r\n        this.progress.color.set(192, 40, 255, 140);\r\n        this.progress.fillRange = 0;\r\n        this.progress.node.active = false;\r\n        this.roundProgress = `  ${curRoundNum}/${maxRound}`;\r\n        this.roundBtnLab.string = this.roundState + \"\\n\" + this.roundProgress;\r\n    }\r\n    protected roundProgress = \"\";\r\n    protected roundState = \"\";\r\n    /**刷新回合按钮文本状态 */\r\n    FlushRoundBtnStrState(state: BattleRoundOperationState) {\r\n        switch (state) {\r\n            case BattleRoundOperationState.EndRound:\r\n                this.roundState = `结束回合...`;\r\n                this.roundBtnLab.string = this.roundState + \"\\n\" + this.roundProgress;\r\n                break;\r\n            case BattleRoundOperationState.PlaceRound:\r\n                this.roundState = `放置中...`;\r\n                break;\r\n            case BattleRoundOperationState.CancelRound:\r\n                this.roundState = `取消结束回合`;\r\n                this.roundBtnLab.string = this.roundState;\r\n                break;\r\n        }\r\n    }\r\n    /**\r\n     * 刷新优先揭示卡牌玩家特效\r\n     * @param isPlayerA \r\n     */\r\n    FlushRevealPlayer(isPlayerA: boolean): void {\r\n        if (isPlayerA == null) {\r\n            this.myRevealEffect.node.active = false;\r\n            this.adRevealEffect.node.active = false;\r\n            return;\r\n        }\r\n        if (isPlayerA) {\r\n            this.myRevealEffect.node.active = true;\r\n            this.myRevealEffect.clearAnimation();\r\n            this.myRevealEffect.setAnimation(0, \"blue\", false);\r\n            this.myRevealEffect.setCompleteListener(() => {\r\n                this.myRevealEffect.node.active = false;\r\n            })\r\n            this.adRevealEffect.node.active = false;\r\n        } else {\r\n            this.myRevealEffect.node.active = false;\r\n            this.adRevealEffect.node.active = true;\r\n            this.adRevealEffect.clearAnimation();\r\n            this.adRevealEffect.setAnimation(0, \"red\", false);\r\n            this.adRevealEffect.setCompleteListener(() => {\r\n                this.adRevealEffect.node.active = false;\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    /**刷新回合按钮文本 */\r\n    FlushRoundTime(time: number, isHaveEnergy: boolean, roundState: BattleRoundOperationState, totalTime: number = 30) {\r\n        this.progress.node.active = true;\r\n        let rote: number = time / totalTime;\r\n        this.progress.fillRange = rote;\r\n        let b: number = rote * 255;\r\n        this.progress.color.set(192, 40, b, 140);\r\n        this.roundBtnMaskBg.active = false;\r\n        //出牌阶段\r\n        if (roundState == BattleRoundOperationState.EndRound) {\r\n            this.qxjshhEffect.active = false;\r\n            //出牌能量不足只出强制结束回合特效\r\n            if (!isHaveEnergy) {\r\n                this.jshhEffect.active = true;\r\n                this.notTimeEffect.active = false;\r\n            } else {\r\n                this.jshhEffect.active = false;\r\n                if (time > 0 && time <= 5) {\r\n                    this.notTimeEffect.active = true;\r\n                } else {\r\n                    this.notTimeEffect.active = false;\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        //可取消阶段\r\n        if (roundState == BattleRoundOperationState.CancelRound) {\r\n            this.qxjshhEffect.active = true;\r\n            this.jshhEffect.active = false;\r\n            this.notTimeEffect.active = false;\r\n            return;\r\n        }\r\n        //放置阶段\r\n        if (roundState == BattleRoundOperationState.PlaceRound) {\r\n            this.qxjshhEffect.active = false;\r\n            this.jshhEffect.active = false;\r\n            this.notTimeEffect.active = false;\r\n            this.roundBtnMaskBg.active = true;\r\n            return;\r\n        }\r\n    }\r\n\r\n    /**刷新能量 */\r\n    async FlushEnergy(num: number, data?: OutStruct) {\r\n        FightData.Energy = num;\r\n        let tt = TimeStamp();\r\n        if (data && data.fromSkillId) {\r\n            let attacker = this.findCard(data.fromInstId);\r\n            let target = this.findCard(TouchInstId(data));\r\n            let tag = this.skillTarget(true, attacker?.card, [target?.card]);\r\n            await Skill.Play(data, tag, true);\r\n        }\r\n        this.energyLab.string = `${num}`;\r\n        return TimeStamp(tt);\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        if (!GameScene.hasLoad) return;\r\n        let sorts = [];\r\n        let children = this.areaCardLay.children;\r\n        for (let child of children) {\r\n            sorts.push({ index: child.getSiblingIndex(), node: child });\r\n        }\r\n        sorts.sort((a, b) => a.node.position.z - b.node.position.z);\r\n        for (let i = 0; i < sorts.length; i++) {\r\n            let obj = sorts[i];\r\n            if (obj.index != i) {\r\n                obj.node.setSiblingIndex(i);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * 从卡组发牌到手卡\r\n     * @param data \r\n     * @returns \r\n     */\r\n    async AddHandCard(data: proto.base.IBattleRoomOpOutput_CardDeckTopToHandTail) {\r\n        let tt = TimeStamp();\r\n        if (data.fromSkillId) {\r\n            let attacker = this.findCard(data.fromInstId);\r\n            let target = this.findCard(TouchInstId(data)) || attacker;\r\n            await Skill.Play(data, this.skillTarget(true, attacker?.card, [target?.card]));\r\n        }\r\n\r\n        let cards = data.cards;\r\n        // 排除相同的\r\n        for (let card of this.handCards) {\r\n            let index = cards.findIndex(value => value.instId == card.instId);\r\n            if (index != -1) {\r\n                card.FlushData(true, cards[index]);\r\n                cards.splice(index, 1);\r\n            }\r\n        }\r\n        // 刷新一下已有手牌的布局，为飞进来的卡牌让出位置\r\n        let p = Vec3.clone(this.handCenter);\r\n        let total = (this.handCards.length + cards.length - 1) * GameSet.CardWide;\r\n        p.x = this.handCenter.x - total - GameSet.CardWide / 2;\r\n        for (let i = 0; i < this.handCards.length; i++) {\r\n            let card = this.handCards[i];\r\n            this.handCardLay.addChild(card);\r\n            card.LayoutHands(p, this.handQuat);\r\n            p.x += GameSet.CardWide;\r\n        }\r\n\r\n        // 开始飞入\r\n        let promises = [];\r\n        for (let i = 0; i < cards.length; i++) {\r\n            let cardData: proto.base.IBattleRoomCardData = cards[i];\r\n            let newCard: SceneCard = SceneCard.Create();\r\n            newCard.InitData(true, cardData, this.handRotation);\r\n            // this.node.addChild(newCard);\r\n            this.handCards.push(newCard);\r\n            let promise = newCard.SendToHand(this.myCardEnterV, p, this.handQuat);\r\n            this.handCardLay.addChild(newCard);\r\n            promises.push(promise);\r\n            // this.handCards.push(newCard);\r\n            p.x += GameSet.CardWide;\r\n        }\r\n        await Promise.all(promises);\r\n        return TimeStamp(tt);\r\n    }\r\n\r\n    /**\r\n     * 刷新所有手牌布局\r\n     * @returns \r\n     */\r\n    async LayoutAllHandCards() {\r\n        // 刷新一下已有手牌的布局，为飞进来的卡牌让出位置\r\n        let p = Vec3.clone(this.handCenter);\r\n        let total = (this.handCards.length - 1) * GameSet.CardWide;\r\n        p.x = this.handCenter.x - total - GameSet.CardWide / 2;\r\n        let tt = TimeStamp();\r\n        let ps = [];\r\n        for (let i = 0; i < this.handCards.length; i++) {\r\n            let card = this.handCards[i];\r\n            ps.push(card.LayoutHands(p, this.handQuat));\r\n            p.x += GameSet.CardWide;\r\n        }\r\n        await Promise.all(ps);\r\n        return TimeStamp(tt);\r\n    }\r\n\r\n    /**\r\n     * 从任意位置飞到不可视位置\r\n     * @param isPlayerA \r\n     * @param data \r\n     * @param fromData \r\n     */\r\n    async CopyCardToUnVisible(isPlayerA: boolean, data: OutStruct, fromData: proto.base.IBattleRoomCardData) {\r\n        let tt = TimeStamp();\r\n        let fromCard = this.findCard(fromData.instId);\r\n        if (!fromCard && data['fromLocation']) fromCard = cardLoca(this.fileLocation(isPlayerA, data['fromLocation']), isPlayerA);\r\n        if (data.fromSkillId) {\r\n            let attacker = this.findCard(data.fromInstId);\r\n            let target = this.findCard(TouchInstId(data)) || fromCard;\r\n            let tag = this.skillTarget(isPlayerA, attacker?.card, [target?.card], [attacker.area], [target?.area]);\r\n            await Skill.Play(data, tag, isPlayerA);\r\n        }\r\n\r\n        let card: SceneCard = SceneCard.Create();\r\n        card.InitData(isPlayerA, data.card, this.zero);\r\n        let target = this.fileLocation(isPlayerA, data.card.location, data.card.area);\r\n        this.handCardLay.addChild(card);\r\n        card.setWorldPosition(fromCard?.card.worldPosition || this.zero);\r\n        await card.MoveTo(target.worldPosition);\r\n        card.receive();\r\n        return TimeStamp(tt);\r\n    }\r\n\r\n\r\n    /**\r\n     * 更新手牌\r\n     */\r\n    async FlushHandCard(datas: proto.base.IBattleRoomCardData[]) {\r\n        let ls = {};\r\n        this.handCards.forEach(value => ls[value.instId] = value);\r\n        this.handCards.length = 0;\r\n        for (let i = 0; i < datas.length; i++) {\r\n            let data = datas[i];\r\n            if (ls[data.instId]) {\r\n                ls[data.instId].FlushData(true, datas[i]);\r\n                this.handCards.push(ls[data.instId]);\r\n                delete ls[data.instId];\r\n            } else {\r\n                let card = SceneCard.Create();\r\n                card.InitData(true, data, this.handRotation);\r\n                this.handCardLay.addChild(card);\r\n                if (this.selectedCard) card.setWorldPosition(this.selectedCard.worldPosition);\r\n                this.handCards.push(card);\r\n            }\r\n        }\r\n        for (let k in ls) {\r\n            ls[k].receive();\r\n            delete ls[k];\r\n        }\r\n        let tt = TimeStamp();\r\n        let ps = [];\r\n        let p = Vec3.clone(this.handCenter);\r\n        let total = Math.max(0, this.handCards.length - 1) * GameSet.CardWide;\r\n        p.x = this.handCenter.x - total - GameSet.CardWide / 2;\r\n        for (let i = 0; i < this.handCards.length; i++) {\r\n            let card = this.handCards[i];\r\n            ps.push(card.LayoutHands(p, this.handQuat));\r\n            p.x += GameSet.CardWide;\r\n        }\r\n        await Promise.all(ps);\r\n        return TimeStamp(tt);\r\n    }\r\n\r\n    /**\r\n     * 出牌到区域\r\n     * @param cardData \r\n     * @param area \r\n     * @param index \r\n     */\r\n    async SendMyCardToArea(cardData: proto.base.IBattleRoomCardData, area: number, index: number) {\r\n        if (this.cardMap[cardData.instId]) {\r\n            let obj = this.cardMap[cardData.instId];\r\n            console.error(\"场景中已有相同id的卡 area:\" + obj.area + \" index:\" + obj.index);\r\n            obj.card?.receive?.();\r\n            delete this.cardMap[cardData.instId];\r\n        }\r\n        let newCard: SceneCard = SceneCard.Create();\r\n        if (this.selectedCard) newCard.setWorldPosition(this.selectedCard.worldPosition);\r\n        // this.node.addChild(newCard);\r\n        this.areaCardLay.addChild(newCard);\r\n        this.cardMap[cardData.instId] = { isMy: true, card: newCard, area: area, index: index };\r\n        newCard.InitData(true, cardData, this.handRotation);\r\n        let set = this.myTeamLayout[area][index];\r\n        let tt = TimeStamp();\r\n        await newCard.PlayToMyArea(set.worldPosition, set.rotation);\r\n        // this.areaCardLay.addChild(newCard);\r\n        return TimeStamp(tt);\r\n    }\r\n\r\n    /**\r\n     * 添加对手牌\r\n     * @param cardData \r\n     * @param area \r\n     * @param index \r\n     */\r\n    async SendAdCardToArea(cardData: proto.base.IBattleRoomCardData, area: number, index: number) {\r\n        if (this.cardMap[cardData.instId]) {\r\n            let obj = this.cardMap[cardData.instId];\r\n            console.error(\"场景中已有相同id的卡 area:\" + obj.area + \" index:\" + obj.index);\r\n            obj.card?.receive?.();\r\n            delete this.cardMap[cardData.instId];\r\n        }\r\n        let tt = TimeStamp();\r\n        let newCard: SceneCard = SceneCard.Create();\r\n        // this.node.addChild(newCard);\r\n        this.areaCardLay.addChild(newCard);\r\n        newCard.setWorldPosition(this.adCardEnterV.x, this.adCardEnterV.y, this.adCardEnterV.z);\r\n        this.cardMap[cardData.instId] = { isMy: false, card: newCard, area: area, index: index };\r\n        newCard.InitData(false, cardData, this.handRotation);\r\n        let set = this.adTeamLayout[area][index];\r\n        await newCard.PlayToAdArea(set.worldPosition);\r\n        // this.areaCardLay.addChild(newCard);\r\n        return TimeStamp(tt);\r\n    }\r\n\r\n    /**\r\n     * 刷新区域状态\r\n     * @param data \r\n     */\r\n    async FlushTerrain(ispLayerA: boolean, data: proto.base.IBattleRoomGamePlayData | (proto.base.IBattleRoomTerrainData[]), ownerPlayerId: string) {\r\n        let terrainDatas: proto.base.IBattleRoomTerrainData[];\r\n        let Reveal = [];//第几回合开启\r\n        let TerrainInstIds = [];//地形实际的instId\r\n        if (data instanceof proto.base.BattleRoomGamePlayData) {\r\n            terrainDatas = data.terrains;\r\n            Reveal = data.levelData.reveal;\r\n            for (let k in data.players) {\r\n                let player = data.players[k];\r\n                let isMy = player.playerId == ownerPlayerId;\r\n                for (let i = 0; i < player.terrain.length; i++) {\r\n                    if (!TerrainInstIds[i]) TerrainInstIds[i] = { my: \"\", ad: \"\" };\r\n                    if (isMy) {\r\n                        TerrainInstIds[i].my = player.terrain[i].selfInstId;\r\n                    } else {\r\n                        TerrainInstIds[i].ad = player.terrain[i].selfInstId;\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            terrainDatas = data as proto.base.IBattleRoomTerrainData[];\r\n        }\r\n        for (let i = 0; i < terrainDatas.length; i++) {\r\n            let terrain = terrainDatas[i];\r\n            let area = this.areaList[terrain.area];\r\n            if (!this.cardMap[terrain.instId]) {\r\n                let card = area.getChildByName(\"hitTest\");\r\n                card['instId'] = terrain.instId;\r\n                this.cardMap[terrain.instId] = { isMy: true, card: <unknown>card as SceneCard, area: undefined, index: undefined };\r\n            }\r\n            if (TerrainInstIds[i]) {\r\n                let instId1 = TerrainInstIds[i].my, instId2 = TerrainInstIds[i].ad;\r\n                if (!this.cardMap[instId1]) {\r\n                    let card = area['hitTest1'];//area.getChildByName(\"hitTest1_area\" + i);\r\n                    card['instId'] = instId1;\r\n                    this.cardMap[instId1] = { isMy: true, card: <unknown>card as SceneCard, area: i, index: undefined };\r\n                }\r\n                if (!this.cardMap[instId2]) {\r\n                    let card = area['hitTest2'];//area.getChildByName(\"hitTest2_area\" + i);\r\n                    card['instId'] = instId2;\r\n                    this.cardMap[instId2] = { isMy: false, card: <unknown>card as SceneCard, area: i, index: undefined };\r\n                }\r\n            }\r\n\r\n            area[\"instId\"] = terrain.instId;\r\n            let desc = area.getChildByName('desc').getComponent(Label), mask = area.getChildByName('mask'), destory = area.getChildByName('destory'), filed = area.getChildByName(\"filed\").getComponent(sp.Skeleton);\r\n            desc.node.active = false;\r\n            mask.active = false;\r\n            destory.active = false;\r\n            let std = CfgMgr.Get(\"Area\")[terrain.configId];\r\n            let filedUrl = std ? `spine/${std.AreaIcon}/${std.AreaIcon}` : \"spine/filed_0000/filed_0000\";\r\n            let ainmName: string, loop = false;\r\n            desc.node.active = false;\r\n            switch (terrain.terrainState) {\r\n                case proto.base.BattleRoomInTerrainState.TerrainStateUnknown:\r\n                    // area.getChildByName('mask').active = true;\r\n                    desc.string = \"未知\";\r\n                    break;\r\n                case proto.base.BattleRoomInTerrainState.TerrainStateHide:\r\n                    if (terrain.peek && terrain.peek.indexOf(ownerPlayerId) > -1) {\r\n                        ainmName = \"idle\";\r\n                        loop = true;\r\n                        // desc.node.active = true;\r\n                        desc.string = std.AffectText;\r\n                    } else {\r\n                        ainmName = \"idle\";\r\n                        loop = true;\r\n                        // desc.node.active = true;\r\n                        if (Reveal[i]) {\r\n                            if (Reveal[i] - FightData.currentRound == 1) {\r\n                                desc.string = \"下回合揭示\";\r\n                            } else {\r\n                                desc.string = \"第\" + Reveal[i] + \"回合揭示\";\r\n                            }\r\n                            desc.node.active = true;\r\n                        } else {\r\n                            desc.string = \"未揭示\";\r\n                        }\r\n                    }\r\n                    break;\r\n                case proto.base.BattleRoomInTerrainState.TerrainStateShow:\r\n                    ainmName = \"show\";\r\n                    if (desc.string != std.AffectText) {\r\n                        // desc.node.active = true;\r\n                        desc.string = std.AffectText;\r\n                        let scale = desc.node.scale.x;\r\n                        tween(desc.node).to(0.1, { scale: v3(scale * 1.5, scale * 1.5, scale * 1.5) }).to(0.1, { scale: v3(scale, scale, scale) }).start();\r\n                        await Second(0.2);\r\n                        // for (let k in this.cardMap) {\r\n                        //     let obj = this.cardMap[k];\r\n                        //     if (obj.area == terrain.area) {\r\n                        //         obj.card.Shake(2.5);\r\n                        //     }\r\n                        // }\r\n                    }\r\n                    break;\r\n                case proto.base.BattleRoomInTerrainState.TerrainStateDestroy:\r\n                    area.getChildByName('destory').active = true;\r\n                    break\r\n            }\r\n            if (ainmName) {\r\n                filed.node.active = true;\r\n                if (filedUrl && filed['filedUrl'] != filedUrl) {\r\n                    filed['filedUrl'] = filedUrl;\r\n                    filed.skeletonData = await ResMgr.LoadResAbSub(filedUrl, sp.SkeletonData);\r\n                    filed.setAnimation(0, ainmName, loop);\r\n                }\r\n            } else {\r\n                filed.node.active = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 锁定\r\n     * @param isPlayerA \r\n     * @param data \r\n     */\r\n    async LockTerrain(isPlayerA: boolean, data: proto.base.IBattleRoomOpOutput_LockZone) {\r\n        let attacker = this.findCard(data.fromInstId);\r\n        let cardLoca: CardLoca = this.findCard(data.toInstId);\r\n        if (data.fromSkillId) {\r\n            let tag = this.skillTarget(isPlayerA, attacker?.card, [cardLoca?.card], [cardLoca?.area]);\r\n            await Skill.Play(data, tag, isPlayerA);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 刷新战力\r\n     * @param isPlayerA \r\n     * @param area \r\n     * @param power \r\n     */\r\n    FlushAreaPower(isPlayerA: boolean, area: number, power: number) {\r\n        let areaNode = this.areaList[area];\r\n        let apower: Label, bpower: Label, aeffect: ParticleSystem, beffect: ParticleSystem;\r\n        if (isPlayerA) {\r\n            apower = areaNode.getChildByName(\"power1\").getComponent(Label);\r\n            bpower = areaNode.getChildByName(\"power2\").getComponent(Label);\r\n            aeffect = areaNode.getChildByName(\"mywin01\").getComponent(ParticleSystem);\r\n            beffect = areaNode.getChildByName(\"adwin01\").getComponent(ParticleSystem);\r\n        } else {\r\n            apower = areaNode.getChildByName(\"power2\").getComponent(Label);\r\n            bpower = areaNode.getChildByName(\"power1\").getComponent(Label);\r\n            aeffect = areaNode.getChildByName(\"adwin01\").getComponent(ParticleSystem);\r\n            beffect = areaNode.getChildByName(\"mywin01\").getComponent(ParticleSystem);\r\n        }\r\n        if (apower.string) {\r\n            let old = Number(apower.string);\r\n            if (old < power) {\r\n            }\r\n        }\r\n        apower.string = power + \"\";\r\n\r\n        if (power > Number(bpower.string) || 0) {\r\n            aeffect.node.active = true;\r\n            beffect.node.active = false;\r\n        } else if (power < Number(bpower.string) || 0) {\r\n            aeffect.node.active = false;\r\n            beffect.node.active = true;\r\n        } else {\r\n            aeffect.node.active = false;\r\n            beffect.node.active = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 刷新指定阵营状态\r\n     * @param isPlayerA \r\n     * @param area \r\n     * @param terrains \r\n     */\r\n    async FlushAreaCrads(isPlayerA: boolean, area: number, terrains: proto.base.IBattleRoomTerrainPlayerData) {\r\n        let datas = terrains.cards;\r\n\r\n        //先清理数据不同步的卡牌\r\n        for (let k in this.cardMap) {\r\n            let obj = this.cardMap[k];\r\n            if (obj.card instanceof GameObj && obj.area == area && obj.isMy == isPlayerA && datas.findIndex(value => value.instId == obj.card.instId) == -1) {\r\n                obj.card?.receive?.();\r\n                obj.card = undefined;\r\n                delete this.cardMap[k];\r\n            }\r\n        }\r\n        for (let i = 0; i < datas.length; i++) {\r\n            let data = datas[i];\r\n            let obj = this.cardMap[data.instId];\r\n\r\n            if (!obj) {\r\n                let newCard: SceneCard = SceneCard.Create();\r\n                this.areaCardLay.addChild(newCard);\r\n                obj = {\r\n                    isMy: isPlayerA,\r\n                    card: newCard,\r\n                    area: area,\r\n                    index: i\r\n                }\r\n                this.cardMap[data.instId] = obj;\r\n                obj.card?.InitData?.(isPlayerA, data, this.handRotation);\r\n            } else {\r\n                obj.area = area;\r\n                obj.index = i;\r\n                obj.card?.FlushData?.(isPlayerA, data);\r\n            }\r\n        }\r\n        let tt = TimeStamp();\r\n        await this.LayoutAllArea();\r\n        return TimeStamp(tt);\r\n    }\r\n\r\n    /**\r\n     * 刷新布局\r\n     */\r\n    async LayoutAllArea() {\r\n        for (let k in this.cardMap) {\r\n            let obj = this.cardMap[k];\r\n            if (obj.card as SceneCard && obj.area != undefined && obj.index != undefined) {\r\n                let layout = obj.isMy ? this.myTeamLayout[obj.area][obj.index] : this.adTeamLayout[obj.area][obj.index];\r\n                if (!layout) {\r\n                    console.error(\"找不到地形上的卡片：\" + obj?.area + \",\" + obj?.index);\r\n                }\r\n                if (obj.card && obj.card.parent != this.areaCardLay) this.areaCardLay.addChild(obj.card);\r\n                if (!obj.card?.CheckMatrix?.(layout.worldPosition)) {\r\n                    await obj.card?.LayoutArea?.(layout.worldPosition);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 盖牌\r\n     * @param datas \r\n     */\r\n    async CloseCard(data: proto.base.IBattleRoomCardData) {\r\n        let obj = this.cardMap[data.instId];\r\n        if (obj) {\r\n            await obj.card?.TurnBack?.();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 显示卡\r\n     * @param datas \r\n     */\r\n    async ShowCard(data: proto.base.IBattleRoomCardData) {\r\n        let obj = this.cardMap[data.instId];\r\n        if (!obj) return 0;\r\n        // if (obj.card.parent) obj.card.setSiblingIndex(obj.card.parent.children.length - 1)\r\n        // this.node.addChild(obj.card);\r\n        let tt = TimeStamp();\r\n        obj.card?.FlushData?.(obj.isMy, data);\r\n        await obj.card?.Open?.();\r\n        this.areaCardLay.addChild(obj.card);\r\n        // for (let k in this.cardMap) {\r\n        //     let other = this.cardMap[k];\r\n        //     if (other != obj && other.card.state == CardState.Fightting && other.card.isMy != obj.card.isMy && other.area == obj.area) {\r\n        //         other.card.Shake(2.5);\r\n        //     }\r\n        // }\r\n        return TimeStamp(tt);\r\n    }\r\n\r\n    /**获取位置 */\r\n    protected fileLocation(isPlayerA: boolean, location: number, area: number = 0, idx?: number) {\r\n        switch (location) {\r\n            case proto.base.BattleRoomCardLocation.Hand:\r\n                return isPlayerA ? this.myHand : this.adHand;\r\n            case proto.base.BattleRoomCardLocation.Deck:\r\n                return isPlayerA ? this.myDeck : this.adDeck;\r\n            case proto.base.BattleRoomCardLocation.Drop:\r\n                return isPlayerA ? this.myDrop : this.adDrop;\r\n            case proto.base.BattleRoomCardLocation.Del:\r\n                return isPlayerA ? this.myDel : this.adDel;\r\n            case proto.base.BattleRoomCardLocation.Terrain:\r\n                if (idx != undefined) {\r\n                    return isPlayerA ? this.myTeamLayout[area][idx] : this.myTeamLayout[area][idx];\r\n                }\r\n                let areaName = isPlayerA ? \"hitTest1\" : \"hitTest2\";\r\n                let areaNode = this.areaList[area];\r\n                if (areaNode) return area[areaName];//areaNode.getChildByName(areaName + \"_\" + areaNode.name);\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    /**\r\n     * 播放技能\r\n     * @param isPlayerA \r\n     * @param data \r\n     */\r\n    async PlaySkill(isPlayerA: boolean, data: proto.base.IBattleRoomOpOutput_EffectSkill) {\r\n        // 如果当前回合已起效则跳过,count<0表示未起效\r\n        if (!data.instId || !data.count.length || data.count[battleDataMgr.curRound] == undefined) return;\r\n        if (data.count[battleDataMgr.curRound] == -1 || data.count[battleDataMgr.curRound] < -2) return;\r\n        let attacker = this.cardMap[data.instId];\r\n        if (!attacker) this.handCards.find(value => value.Id == data.instId);\r\n        let targets = [], self = this, myAreas = [], adAreas = [];\r\n        data.targets.forEach(value => {\r\n            targets.push(this.findCard(value.instId) || self.fileLocation(isPlayerA, value.location));\r\n            if (battleDataMgr.isPlayerA(value.playerId)) {\r\n                myAreas.push(value.area);\r\n            } else {\r\n                adAreas.push(value.area);\r\n            }\r\n        });\r\n        let tag: EffectTarget;\r\n        if (!targets.length && attacker) {\r\n            tag = this.skillTarget(isPlayerA, attacker?.card, targets);\r\n            if (!SkillUtils.TryToFindTarget(isPlayerA, attacker?.card, tag, data)) {\r\n                tag = this.skillTarget(isPlayerA, attacker?.card, targets, [attacker.area]);\r\n            }\r\n        } else if (attacker) {\r\n            tag = this.skillTarget(isPlayerA, attacker?.card, targets, [attacker.area]);\r\n        } else {\r\n            return;\r\n        }\r\n        let output = { fromInstId: data.instId, fromSkillId: data.skillId };\r\n        let tt = TimeStamp();\r\n        await Skill.Play(output, tag, isPlayerA, undefined, true);\r\n        return TimeStamp(tt);\r\n    }\r\n\r\n    /**\r\n     * 删除技能\r\n     * @param isPlayerA \r\n     * @param data \r\n     */\r\n    RemoveSkill(isPlayerA: boolean, data: proto.base.IBattleRoomOpOutput_Nullify) {\r\n        Skill.Stop(data.toPlayerId, data.toSkillId, data.toInstId);\r\n    }\r\n\r\n    /**\r\n     * 卡数据变更\r\n     * @param isPlayerA \r\n     * @param data \r\n     * @returns \r\n     */\r\n    async CardDataChange(isPlayerA: boolean, data: proto.base.IBattleRoomOpOutput_CardDataChange) {\r\n        let tt = TimeStamp();\r\n        let attacker = this.findCard(data.fromInstId);\r\n        let changeCard = this.findCard(data.card.instId);\r\n        let target = this.findCard(TouchInstId(data)) || changeCard;\r\n        if (data.fromSkillId) {\r\n            let tag = this.skillTarget(isPlayerA, attacker?.card, [target?.card], [attacker?.area], [target?.area]);\r\n            await Skill.Play(data, tag, isPlayerA);\r\n        }\r\n        changeCard?.card?.FlushData?.(isPlayerA, data.card);\r\n        await Second(0.25);\r\n        return TimeStamp(tt);\r\n    }\r\n\r\n    /**\r\n     * 查找卡\r\n     * @param instId \r\n     * @returns \r\n     */\r\n    protected findCard(instId: string): CardLoca {\r\n        if (!instId) return undefined;\r\n        let card = this.handCards.find(value => value.instId == instId);\r\n        if (card) {\r\n            return { isMy: true, card: card, area: -1, index: -1 };\r\n        } else {\r\n            return this.cardMap[instId];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 从场景移除一张卡片到指定区域\r\n     * @param isPlayerA \r\n     * @param data \r\n     * @param loca \r\n     * @returns \r\n     */\r\n    async RmoveCardFormArea(isPlayerA: boolean, data: proto.base.IBattleRoomOpOutput_TerrainToDrop | proto.base.IBattleRoomOpOutput_TerrainToDel, loca: number) {\r\n        let tt = TimeStamp();\r\n\r\n        let removeTag = this.cardMap[data.card.instId];\r\n        let attacker = this.findCard(data.fromInstId);\r\n        let target = this.findCard(TouchInstId(data)) || removeTag;\r\n        if (removeTag) {\r\n            if (data.fromSkillId) {\r\n                let tag = this.skillTarget(isPlayerA, attacker?.card, [target.card], [attacker?.area], [target.area]);\r\n                await Skill.Play(data, tag, isPlayerA);\r\n            }\r\n            delete this.cardMap[data.card.instId];\r\n            let delLoca = this.fileLocation(isPlayerA, loca);\r\n            if (delLoca) await removeTag.card?.MoveTo?.(delLoca.worldPosition);\r\n            removeTag.card?.receive?.();\r\n        }\r\n        this.LayoutAllArea();\r\n        return TimeStamp(tt);\r\n    }\r\n\r\n    /**\r\n     * 移除手牌上的一张卡到指定位置\r\n     * @param isPlayerA \r\n     * @param data \r\n     * @param loca \r\n     * @returns \r\n     */\r\n    async RemoveCardFormHand(isPlayerA: boolean, data: proto.base.IBattleRoomOpOutput_HandToDel, loca: number) {\r\n        let tt = TimeStamp();\r\n        let obj: Node;\r\n        if (isPlayerA) {\r\n            let index = this.handCards.findIndex(value => value.instId == data.card.instId);\r\n            obj = this.handCards[index];\r\n            this.handCards.splice(index, 1);\r\n        } else {\r\n            obj = this.adHand;\r\n        }\r\n        if (data.fromSkillId) {\r\n            let attacker = this.findCard(data.fromInstId);\r\n            let target = this.findCard(TouchInstId(data)) || cardLoca(obj, isPlayerA);\r\n            let tag = this.skillTarget(isPlayerA, attacker?.card, [target?.card], [attacker?.area], [target?.area]);\r\n            await Skill.Play(data, tag, isPlayerA);\r\n        }\r\n        let locaNode = this.fileLocation(isPlayerA, loca);\r\n        if (isPlayerA) {\r\n            if (obj instanceof SceneCard) {\r\n                await obj.MoveTo(locaNode.worldPosition);\r\n                obj.receive();\r\n            } else {\r\n                console.warn(\"找不到可移除的手牌\" + data.card.instId);\r\n            }\r\n        } else {\r\n            let card = SceneCard.Create();\r\n            card.InitData(isPlayerA, data.card);\r\n            card.setWorldRotation(this.handQuat);\r\n            this.handCardLay.addChild(card);\r\n            card.setWorldPosition(this.adHand.worldPosition);\r\n            await card.MoveTo(locaNode.worldPosition, this.handQuat);\r\n            card.receive();\r\n        }\r\n        this.LayoutAllHandCards();\r\n        return TimeStamp(tt);\r\n    }\r\n\r\n    /**\r\n     * 非可视区域的卡牌飞到场景区域上\r\n     * @param formIsPlayerA 卡牌来源是否第一视觉玩家\r\n     * @param toIsPlayerA 卡牌目标是否第一视觉玩家\r\n     * @param areaIdx 添加卡牌的目标区域下标\r\n     * @param cardIdx 添加卡牌的目标下标\r\n     * @param data 添加卡牌数据\r\n     */\r\n    async CardBackToArea(isPlayerA: boolean, formIsPlayerA: boolean, toIsPlayerA: boolean, areaIdx: number, cardIdx: number, data: proto.base.IBattleRoomOpOutput_AddCardToTerrain) {\r\n        let tt = TimeStamp();\r\n        let fromNode: Node = this.fileLocation(formIsPlayerA, data.fromLocation);\r\n        if (data.fromSkillId) {\r\n            let attacker = this.findCard(data.fromInstId);//定位此技能的发起卡牌\r\n            let target = this.findCard(TouchInstId(data));\r\n            if (!fromNode) fromNode = target?.card;\r\n            let tag = this.skillTarget(isPlayerA, attacker?.card, [target?.card], [attacker?.area], [target?.area]);\r\n            await Skill.Play(data, tag, isPlayerA);\r\n        }\r\n        let layout = (toIsPlayerA ? this.myTeamLayout : this.adTeamLayout)[areaIdx][cardIdx];\r\n        let obj = this.cardMap[data.card.instId];\r\n        if (!obj) {\r\n            let card = SceneCard.Create();\r\n            card.InitData(isPlayerA, data.card, this.zero);\r\n            this.areaCardLay.addChild(card);\r\n            obj = { isMy: toIsPlayerA, card: card, area: areaIdx, index: cardIdx };\r\n            this.cardMap[data.card.instId] = obj;\r\n        }\r\n        obj.card.setWorldPosition(fromNode?.worldPosition || this.zero);\r\n        await obj.card?.MoveTo?.(layout.worldPosition);\r\n        //await obj.card?.Open?.();\r\n        return TimeStamp(tt);\r\n    }\r\n\r\n    /**\r\n     * 复制对方的卡或者把对方的卡挪过来用\r\n     * @param isPlayerA 是否自己\r\n     * @param data \r\n     */\r\n    async AddCard(isPlayerA: boolean, data: proto.base.IBattleRoomOpOutput_AddCard) {\r\n        let tt = TimeStamp();\r\n        let fromCard: CardLoca = this.findCard(data.sourceInstId);\r\n        if (!fromCard) fromCard = cardLoca(this.fileLocation(isPlayerA, data.sourceLocation), isPlayerA);\r\n        if (data.fromSkillId) {\r\n            let attacker = this.findCard(data.fromInstId);// this.cardMap[data.fromInstId];\r\n            let tager = this.findCard(TouchInstId(data)) || fromCard;\r\n            let tag = this.skillTarget(isPlayerA, attacker?.card, [tager?.card], [attacker?.area], [fromCard?.area]);\r\n            await Skill.Play(data, tag);\r\n        }\r\n\r\n        let sourceCard: SceneCard, target: SceneCard;\r\n        // 处理来源\r\n        if (data.sourceLocation == proto.base.BattleRoomCardLocation.Hand) {\r\n            // 来源卡位于自己手牌\r\n            let index = this.handCards.findIndex(value => value.instId == data.sourceInstId);\r\n            if (index != -1) {\r\n                sourceCard = this.handCards[index];\r\n                if (data.isMove) {\r\n                    this.handCards.splice(index, 1);\r\n                    this.LayoutAllHandCards();\r\n                }\r\n            }\r\n        } else if (data.sourceLocation == proto.base.BattleRoomCardLocation.Terrain) {\r\n            // 来源卡位于场景上\r\n            fromCard = this.cardMap[data.sourceInstId];\r\n            if (fromCard) {\r\n                if (data.isMove) delete this.cardMap[data.sourceInstId];\r\n                sourceCard = fromCard.card;\r\n            }\r\n        }\r\n        if (data.isMove) target = sourceCard;\r\n        if (!target) {\r\n            target = SceneCard.Create();\r\n            target.InitData(isPlayerA, data.card);\r\n            target.setWorldPosition(target.worldPosition);\r\n        }\r\n        switch (data.card.location) {\r\n            case proto.base.BattleRoomCardLocation.Hand:\r\n                if (isPlayerA) {\r\n                    this.handCardLay.addChild(target);\r\n                    this.handCards.push(target);\r\n                    await this.LayoutAllHandCards();\r\n                } else {\r\n                    await target.MoveTo(this.adHand.worldPosition, this.handQuat);\r\n                }\r\n                break;\r\n\r\n            case proto.base.BattleRoomCardLocation.Terrain:\r\n                this.areaCardLay.addChild(target);\r\n                let idx = 0;\r\n                for (let k in this.cardMap) {\r\n                    if (this.cardMap[k].area == data.card.area && this.cardMap[k].isMy == isPlayerA) {\r\n                        if (this.cardMap[k].index != undefined) {\r\n                            idx = Math.max(this.cardMap[k].index + 1, idx);\r\n                        }\r\n                    }\r\n                }\r\n                this.cardMap[data.card.instId] = {\r\n                    isMy: isPlayerA,\r\n                    card: target,\r\n                    area: data.card.area,\r\n                    index: idx\r\n                }\r\n                await this.LayoutAllArea();\r\n                await target.Open();\r\n                break;\r\n\r\n            default:\r\n                this.areaCardLay.addChild(target);\r\n                let loca = this.fileLocation(isPlayerA, proto.base.BattleRoomCardLocation.Deck);\r\n                await target.MoveTo(loca.worldPosition);\r\n                target.receive();\r\n        }\r\n        return TimeStamp(tt);\r\n    }\r\n\r\n    /**\r\n     * 从各个地方飞向指定区域\r\n     * @param isPlayerA \r\n     * @param data \r\n     * @param fromData \r\n     * @param targetIdx \r\n     */\r\n    async AddCardToArea(isPlayerA: boolean, data: OutStruct, fromData: proto.base.IBattleRoomCardData, area: number, targetIdx: number) {\r\n        let tt = TimeStamp();\r\n        let fromCard: CardLoca = this.findCard(fromData?.instId);\r\n        if (!fromCard && data['fromLocation'] != undefined) fromCard = cardLoca(this.fileLocation(isPlayerA, data['fromLocation']), isPlayerA);\r\n        if (data.fromSkillId) {\r\n            let attacker = this.findCard(data.fromInstId);// this.cardMap[data.fromInstId];\r\n            let target = this.findCard(TouchInstId(data)) || fromCard;\r\n            let tag = this.skillTarget(isPlayerA, attacker?.card, [target?.card], [attacker?.area], [area || fromCard?.area]);\r\n            await Skill.Play(data, tag);\r\n        }\r\n\r\n        let obj = this.cardMap[data.card.instId];\r\n        if (obj) {\r\n            obj.area = data.card.area;\r\n            obj.index = targetIdx;\r\n            obj.isMy = isPlayerA;\r\n        } else {\r\n            let card = SceneCard.Create();\r\n            card.InitData(data.card, v3());\r\n            this.handCardLay.addChild(card);\r\n            obj = {\r\n                isMy: isPlayerA,\r\n                card: card,\r\n                area: data.card.area,\r\n                index: targetIdx\r\n            };\r\n            this.cardMap[data.card.instId] = obj;\r\n        }\r\n        let target = this.fileLocation(isPlayerA, proto.base.BattleRoomCardLocation.Terrain, data.card.area, targetIdx);\r\n        obj.card?.setWorldPosition(fromCard?.card?.worldPosition || this.zero);\r\n        await obj.card?.MoveTo?.(target.worldPosition);\r\n        if (obj.card.state != CardState.Showing) await obj.card?.Open?.();\r\n        return TimeStamp(tt);\r\n    }\r\n\r\n    /**\r\n     * 手牌自动出牌\r\n     * @param cardData \r\n     * @param area \r\n     * @param cardIdx \r\n     * @returns \r\n     */\r\n    async AutoPlayHand(cardData: proto.base.IBattleRoomCardData, area: number, cardIdx: number) {\r\n        let tt = TimeStamp();\r\n        let card: SceneCard;\r\n        for (let index = 0; index < this.handCards.length; index++) {\r\n            if (this.handCards[index].instId == cardData.instId) {\r\n                card = this.handCards[index];\r\n                this.handCards.splice(index, 1);\r\n            }\r\n        }\r\n        if (card) {\r\n            let obj = {\r\n                isMy: true,\r\n                card: card,\r\n                area: area,\r\n                index: cardIdx\r\n            };\r\n            this.cardMap[cardData.instId] = obj;\r\n            card.parent = this.areaCardLay;\r\n            let target = this.fileLocation(true, proto.base.BattleRoomCardLocation.Terrain, cardData.area, cardIdx);\r\n            await card.MoveTo(target.worldPosition);\r\n            await card.PlayToMyArea(target.worldPosition, target.rotation);\r\n        }\r\n        this.LayoutAllHandCards();\r\n        return TimeStamp(tt);\r\n    }\r\n\r\n    /**\r\n     * 非可视区域卡牌转变\r\n     * （例：弃牌区到删除区、卡组区到弃牌区）\r\n     * @param isPlayerA 是否第一视觉玩家\r\n     * @param data 卡牌数据\r\n     */\r\n    async RemoveDeckToUnVisible(isPlayerA: boolean, data: proto.base.IBattleRoomOpOutput_DeckToDel, loca: number) {\r\n        let tt = TimeStamp();\r\n        let attacker = this.findCard(data.fromInstId);//定位发起技能的卡牌\r\n        let delNode = isPlayerA ? this.myDeck : this.adDeck;\r\n        let target = this.findCard(TouchInstId(data)) || cardLoca(delNode, isPlayerA);\r\n        let tag = this.skillTarget(isPlayerA, attacker?.card, [target?.card], [attacker?.area], []);\r\n        if (data.fromSkillId) await Skill.Play(data, tag, isPlayerA);\r\n        let card: SceneCard = SceneCard.Create();\r\n        card.InitData(isPlayerA, data.card);\r\n        this.node.addChild(card);\r\n        let tagNode = this.fileLocation(isPlayerA, loca);\r\n        if (tagNode) {\r\n            card.setWorldPosition(tagNode.worldPosition.x, tagNode.worldPosition.y, tagNode.worldPosition.z);\r\n        } else {\r\n            card.setWorldPosition(this.zero);\r\n        }\r\n        await card.MoveTo(delNode.worldPosition);\r\n        return TimeStamp(tt);\r\n    }\r\n\r\n    /**\r\n     * 非可视区域添加卡牌\r\n     * （例：复制一张卡到卡组区域、系统发卡牌到卡组区域）\r\n     * @param isPlayerA 是否第一视觉玩家\r\n     * @param data 卡牌数据\r\n     */\r\n    async AddCardToDeck(isPlayerA: boolean, targetPlayer: boolean, data: proto.base.IBattleRoomOpOutput_AddCardToDeck) {\r\n        let attacker = this.findCard(data.fromInstId);//尝试定位发起技能的卡牌\r\n        // let head = data.card.area ? this.node.getChildByPath(\"ui/my\") : this.node.getChildByPath(\"ui/ad\");\r\n        let head = this.fileLocation(targetPlayer, data.card.location);\r\n        let tag = this.skillTarget(isPlayerA, attacker?.card, [head]);\r\n        if (data.fromSkillId) await Skill.Play(data, tag);\r\n        if (data.card.location == proto.base.BattleRoomCardLocation.Deck) return;//不可见的地方用特效\r\n        let card: SceneCard = SceneCard.Create();\r\n        card.InitData(isPlayerA, data.card);\r\n        this.node.addChild(card);\r\n        let tagObj = this.findCard(data.fromPlayerId);//this.fileLocation(isPlayerA, proto.base.BattleRoomCardLocation.Drop);\r\n        if (tagObj) {\r\n            card.setWorldPosition(tagObj.card.worldPosition);\r\n        } else {\r\n            let tagNode = this.fileLocation(isPlayerA, data.fromLocation);\r\n            if (tagNode) {\r\n                card.setWorldPosition(tagNode.worldPosition);\r\n            } else {\r\n                card.setWorldPosition(this.zero);\r\n            }\r\n        }\r\n        await card.MoveTo(head.worldPosition);\r\n        card.receive();\r\n    }\r\n\r\n    /**\r\n     * 从各个方向添加卡牌到手牌上\r\n     * @param isPlayerA \r\n     * @param data \r\n     * @param fromLocation \r\n     * @param fromCard \r\n     */\r\n    async AddCardToHand(isPlayerA: boolean, data: proto.base.IBattleRoomOpOutput_AddCardToHand, fromLocation?: number, fromCard?: proto.base.IBattleRoomCardData) {\r\n        let tt = TimeStamp();\r\n        let fromLoca: CardLoca;\r\n        if (fromCard) fromLoca = this.findCard(fromCard.instId);\r\n        if (!fromLoca) fromLoca = cardLoca(this.fileLocation(isPlayerA, data['fromLocation'] || fromLocation), isPlayerA);\r\n        // if (!fromNode) fromNode = this.findCard(TouchInstId(data));\r\n        let target = this.findCard(TouchInstId(data)) || fromLoca;\r\n\r\n        if (data.fromSkillId) {\r\n            let attacker = this.findCard(data.fromInstId);//this.cardMap[data.fromInstId];\r\n            let tag = this.skillTarget(isPlayerA, attacker?.card, [target?.card], [attacker?.area], [target?.area]);\r\n            await Skill.Play(data, tag);\r\n        }\r\n\r\n        if (isPlayerA) {\r\n            if (!this.handCards.find(value => value.instId == data.card.instId)) {\r\n                let card: SceneCard = SceneCard.Create();\r\n                card.InitData(isPlayerA, data.card, v3());\r\n                this.handCards.push(card);\r\n                this.handCardLay.addChild(card);\r\n                card.setWorldPosition(fromLoca?.card?.worldPosition || this.zero);\r\n                let v = Vec3.clone(this.handCenter);\r\n                let total = this.handCards.length * GameSet.CardWide;\r\n                v.x = this.handCenter.x - total - GameSet.CardWide / 2;\r\n                v.x += (GameSet.CardWide * this.handCards.length);\r\n                await card.MoveTo(v, this.handQuat);\r\n            }\r\n        } else {\r\n            let card: SceneCard = SceneCard.Create();\r\n            card.InitData(isPlayerA, data.card, v3());\r\n            card.setWorldPosition(this.zero);\r\n            await card.MoveTo(this.adHand.worldPosition, this.handQuat);\r\n        }\r\n\r\n        return TimeStamp(tt);\r\n    }\r\n\r\n    /**\r\n     * 卡牌在区域上移动\r\n     * @param isPlayerA 移动目的地的玩家是否第一视觉玩家\r\n     * @param areaIdx 移动目的地的区域下标\r\n     * @param cardIdx 移动目的地的卡牌下标\r\n     * @param data \r\n     */\r\n    async CardAreaMove(isPlayerA: boolean, areaIdx: number, cardIdx: number, data: proto.base.IBattleRoomOpOutput_TerrainToTerrain) {\r\n        let tt = TimeStamp();\r\n        let attacker = this.findCard(data.fromInstId);\r\n        let obj = this.cardMap[data.card.instId];\r\n        let target = this.findCard(TouchInstId(data)) || obj;\r\n        if (data.fromSkillId) {\r\n            let tag = this.skillTarget(isPlayerA, attacker?.card, [target?.card], [attacker?.area], [target?.area]);\r\n            await Skill.Play(data, tag, isPlayerA);\r\n        }\r\n\r\n        if (obj) {\r\n            obj.isMy = isPlayerA;\r\n            obj.area = areaIdx;\r\n            obj.index = cardIdx;\r\n            let targetNode: Node = isPlayerA ? this.myTeamLayout[areaIdx][cardIdx] : this.adTeamLayout[areaIdx][cardIdx];\r\n            obj.card?.FlushData?.(isPlayerA, data.card);\r\n            await obj.card?.MoveTo?.(targetNode.worldPosition)\r\n        } else {\r\n            this.AddCardToArea(isPlayerA, data, undefined, areaIdx, cardIdx)\r\n        }\r\n        return TimeStamp(tt);\r\n    }\r\n\r\n    /**\r\n     * 窥视区域\r\n     * @param data \r\n     */\r\n    async PeekTerrain(isplayerA: boolean, data: proto.base.IBattleRoomOpOutput_Peek, playerIdA: string) {\r\n        let attacker = this.findCard(data.fromInstId);\r\n        let target = this.findCard(TouchInstId(data)) || attacker;\r\n        let terrains: proto.base.IBattleRoomTerrainData[] = [];\r\n        for (let k in data.terrainData) {\r\n            terrains.push(data.terrainData[k])\r\n        }\r\n        if (data.fromSkillId) {\r\n            let areas = [];\r\n            for (let k in data.terrainData) {\r\n                let terrain = data.terrainData[k];\r\n                // let target = this.fileLocation(false, proto.base.BattleRoomCardLocation.Terrain, terrain.area);\r\n                // if (target) areas.push(target);\r\n                areas.push(terrain.area);\r\n            }\r\n            let tag = this.skillTarget(true, attacker?.card, [target?.card], [attacker?.area], areas);\r\n            await Skill.Play(data, tag);\r\n        }\r\n        await this.FlushTerrain(isplayerA, terrains, playerIdA);\r\n    }\r\n\r\n    /**\r\n     * 窥视卡片\r\n     * @param data \r\n     * @param loca \r\n     */\r\n    async PeekHandCards(data: proto.base.IBattleRoomOpOutput_Peek, loca: number = proto.base.BattleRoomCardLocation.Hand) {\r\n        let attacker = this.findCard(data.fromInstId);\r\n        if (data.fromSkillId) {\r\n            // let target = this.fileLocation(false, loca);\r\n            let target = this.findCard(TouchInstId(data)) || cardLoca(this.fileLocation(false, loca), true);\r\n            let tag = this.skillTarget(true, attacker?.card, [target?.card], [attacker?.area], [target?.area]);\r\n            await Skill.Play(data, tag);\r\n        }\r\n        let head = this.node.getChildByPath(\"ui/ad\");\r\n        let cards = [];\r\n        for (let k in data.handCards) {\r\n            let cardData = data.handCards[k];\r\n            let card = SceneCard.Create();\r\n            card.InitData(false, cardData, this.handQuat);\r\n            this.handCardLay.addChild(card);\r\n            card.setWorldPosition(head.worldPosition.x, head.worldPosition.y, head.worldPosition.z);\r\n            cards.push(card);\r\n        }\r\n        let ps = [];\r\n        let v = Vec3.clone(this.PeekHandV);\r\n        let total = Math.max(0, cards.length - 1) * GameSet.CardWide;\r\n        v.x = this.handCenter.x - total - GameSet.CardWide / 2;\r\n        for (let i = 0; i < cards.length; i++) {\r\n            let card = cards[i];\r\n            ps.push(card.LayoutHands(v, this.handQuat));\r\n            v.x += GameSet.CardWide;\r\n        }\r\n        await Promise.all(ps);\r\n        await Second(3);\r\n        ps.length = 0;\r\n        for (let i = 0; i < cards.length; i++) {\r\n            let card = cards[i];\r\n            ps.push(card.MoveTo(this.adHand.worldPosition, this.handQuat));\r\n        }\r\n        await Promise.all(ps);\r\n        while (cards.length) {\r\n            cards.pop().receive();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 重置\r\n     */\r\n    Reset() {\r\n\r\n        if (this.myNameLab) {\r\n            this.myNameLab.string = \"\";\r\n            this.adNameLab.string = \"\";\r\n            // this.roundLab.string = \"\";\r\n        }\r\n        this.doubleLab.string = `1`;\r\n        this.roundBtnMaskBg.active = true;\r\n        this.progress.fillRange = 0;\r\n        this.isWaitInput = false;\r\n        this.qxjshhEffect.active = false;\r\n        this.notTimeEffect.active = false;\r\n        this.jshhEffect.active = false;\r\n        for (let k in this.cardMap) {\r\n            let obj = this.cardMap[k];\r\n            obj.card?.receive && obj.card?.receive();\r\n        }\r\n        this.cardMap = {};\r\n\r\n        for (let area of this.areaList) {\r\n            area.getChildByName(\"mywin01\").active = false;\r\n            area.getChildByName(\"mywin02\").active = false;\r\n            area.getChildByName(\"adwin01\").active = false;\r\n            area.getChildByName(\"adwin02\").active = false;\r\n            area.getChildByName(\"desc\").getComponent(Label).string = \"\";\r\n            area.getChildByName(\"power1\").getComponent(Label).string = \"\";\r\n            area.getChildByName(\"power2\").getComponent(Label).string = \"\";\r\n        }\r\n\r\n        while (this.handCards.length) {\r\n            let card = this.handCards.pop();\r\n            card.receive();\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n"]}