{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/fight/FightLogPanel.ts"],"names":["FightLogPanel","Button","EditBox","Label","VList","Panel","PlayerData","LocalStorage","FightLogItem","Req","Route","Session","EventMgr","Evt_BattleLogGet","Evt_BattleLogInfo","MsgPanel","prefab","logList","btn","closeBtn","editBox","logInfoCont","maxRoundLab","versionLab","completeLab","roomIdLab","waitSecondLab","aiWaitSecondLab","areaIdLab","buildInfoLab","infoBtn","logicInfoBtn","infoCloseBtn","playList","logDatas","curSelectData","selectPlayer","onLoad","find","updateCell","cell","cellInfo","logData","index","cellItem","getComponent","addComponent","SetData","playerData","createContext","players","getChildByName","string","playerId","name","level","isAi","aiGroupId","cardIdStr","cards","length","card","cardId","active","isSelect","selectCell","lastCell","lastInfo","node","on","EventType","CLICK","onBtnClick","flush","onShow","cellCount","key","player","datas","GetObject","element","push","roomId","createTime","sort","a","b","console","log","onUpdateBattleLog","onBattleLogInfo","onHide","list","Show","roundTotal","version","isComplete","waitSecond","aiWaitSecond","areaIds","buildInfo","selectIndex","Hide","data","Send","replayRoomId","beginRound","viewPlayerId","logicReplay"],"mappings":"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","sourcesContent":["import { Button, EditBox, Label, Node } from \"cc\";\r\nimport { CellInfo, VList } from \"../../component/VList\";\r\nimport { Panel } from \"../../manager/GameRoot\";\r\nimport { PlayerData } from \"../player/PlayerData\";\r\nimport LocalStorage from \"../../utils/LocalStorage\";\r\nimport { FightLogItem } from \"./FightLogItem\";\r\nimport proto, { Req, Route } from \"../../net/Protocol\";\r\nimport { Session } from \"../../net/Session\";\r\nimport { EventMgr, Evt_BattleLogGet, Evt_BattleLogInfo } from \"../../manager/EventMgr\";\r\nimport { MsgPanel } from \"../common/MsgPanel\";\r\n\r\nexport class FightLogPanel extends Panel {\r\n    protected prefab: string = \"prefabs/fight/FightLogPanel\";\r\n    private logList: VList;\r\n    private btn: Button;\r\n    private closeBtn: Button;\r\n    private editBox: EditBox;\r\n    private logInfoCont: Node;\r\n    private maxRoundLab: Label;\r\n    private versionLab: Label;\r\n    private completeLab: Label;\r\n    private roomIdLab: EditBox;\r\n    private waitSecondLab: Label;\r\n    private aiWaitSecondLab: Label;\r\n    private areaIdLab: Label;\r\n    private buildInfoLab: Label;\r\n    private infoBtn: Button;\r\n    private logicInfoBtn: Button;\r\n    private infoCloseBtn: Button;\r\n    private playList: VList;\r\n    private logDatas: proto.base.IBattleRecordData[];\r\n    private curSelectData: proto.base.IBattleRoomReplaySummary;\r\n    private selectPlayer: proto.base.IBattleRoomPlayerContext;\r\n    protected onLoad() {\r\n        this.logList = this.find(\"logList\", VList);\r\n        this.logList.updateCell = (cell: Node, cellInfo: CellInfo) => {\r\n            let logData: proto.base.IBattleRecordData = this.logDatas[cellInfo.index];\r\n            let cellItem: FightLogItem = cell.getComponent(FightLogItem) || cell.addComponent(FightLogItem);\r\n            cellItem.SetData(logData);\r\n        }\r\n\r\n        this.btn = this.find(\"btn\", Button);\r\n        this.closeBtn = this.find(\"closeBtn\", Button);\r\n        this.editBox = this.find(\"editBox\", EditBox);\r\n        this.logInfoCont = this.find(\"logInfoCont\");\r\n        this.maxRoundLab = this.find(\"logInfoCont/maxRoundLab\", Label);\r\n        this.versionLab = this.find(\"logInfoCont/versionLab\", Label);\r\n        this.completeLab = this.find(\"logInfoCont/completeLab\", Label);\r\n        this.roomIdLab = this.find(\"logInfoCont/roomIdLab\", EditBox);\r\n        this.waitSecondLab = this.find(\"logInfoCont/waitSecondLab\", Label);\r\n        this.aiWaitSecondLab = this.find(\"logInfoCont/aiWaitSecondLab\", Label);\r\n        this.areaIdLab = this.find(\"logInfoCont/areaIdLab\", Label);\r\n        this.buildInfoLab = this.find(\"logInfoCont/buildInfoLab\", Label);\r\n        this.infoBtn = this.find(\"logInfoCont/infoBtn\", Button);\r\n        this.logicInfoBtn = this.find(\"logInfoCont/logicInfoBtn\", Button);\r\n        this.infoCloseBtn = this.find(\"logInfoCont/infoCloseBtn\", Button);\r\n        this.playList = this.find(\"logInfoCont/playList\", VList);\r\n        this.playList.updateCell = (cell: Node, cellInfo: CellInfo) => {\r\n            let playerData: proto.base.IBattleRoomPlayerContext = this.curSelectData.createContext.players[cellInfo.index];\r\n            cell.getChildByName(\"playerIdLab\").getComponent(Label).string = \"玩家id：\" + playerData.playerId;\r\n            cell.getChildByName(\"playerIdNameLab\").getComponent(Label).string = \"玩家名称：\" + playerData.name;\r\n            cell.getChildByName(\"levelLab\").getComponent(Label).string = \"玩家等级：\" + playerData.level;\r\n            cell.getChildByName(\"isAiLab\").getComponent(Label).string = \"是否AI：\" + playerData.isAi + \" AIId：\" + playerData.aiGroupId;\r\n            cell.getChildByName(\"deckIdLab\").getComponent(Label).string = \"卡组id：\" + playerData.playerId;\r\n            let cardIdStr: string = \"卡牌id：\";\r\n            for (let index = 0; index < playerData.cards.length; index++) {\r\n                const card = playerData.cards[index];\r\n                cardIdStr += card.cardId;\r\n                cardIdStr += \"、\";\r\n            }\r\n            cell.getChildByName(\"cardIdLab\").getComponent(Label).string = \"卡组id：\" + cardIdStr;\r\n            cell.getChildByName(\"select\").active = cellInfo.isSelect;\r\n            if (cellInfo.isSelect) {\r\n                this.selectPlayer = this.curSelectData.createContext.players[cellInfo.index];\r\n            }\r\n        }\r\n        this.playList.selectCell = (cell: Node, cellInfo: CellInfo, lastCell?: Node, lastInfo?: CellInfo) => {\r\n            if (cell) cell.getChildByName(\"select\").active = cellInfo.isSelect;\r\n            this.selectPlayer = this.curSelectData.createContext.players[cellInfo.index];\r\n            if (lastCell && lastInfo) lastCell.getChildByName(\"select\").active = lastInfo.isSelect;\r\n        }\r\n        this.closeBtn.node.on(Button.EventType.CLICK, this.onBtnClick, this);\r\n        this.btn.node.on(Button.EventType.CLICK, this.onBtnClick, this);\r\n        this.infoBtn.node.on(Button.EventType.CLICK, this.onBtnClick, this);\r\n        this.infoCloseBtn.node.on(Button.EventType.CLICK, this.onBtnClick, this);\r\n        this.logicInfoBtn.node.on(Button.EventType.CLICK, this.onBtnClick, this);\r\n    }\r\n\r\n    public flush(...args: any[]): void {\r\n        this.editBox.string = \"\";\r\n        this.logInfoCont.active = false;\r\n        this.selectPlayer = null;\r\n        this.curSelectData = null;\r\n\r\n    }\r\n\r\n    protected onShow(): void {\r\n        this.logDatas = [];\r\n        this.logList.cellCount = 0;\r\n        let key: string = `battleLog_${PlayerData.player.playerId}`;\r\n        let datas: any[] = LocalStorage.GetObject(key);\r\n        if (datas) {\r\n            for (let index = 0; index < datas.length; index++) {\r\n                const element = datas[index];\r\n                this.logDatas.push({\r\n                    roomId: element.roomId,\r\n                    createTime: element?.createTime || 0,\r\n                    playerId: PlayerData.player.playerId,\r\n                })\r\n            }\r\n\r\n        }\r\n        this.logDatas.sort((a: proto.base.IBattleRecordData, b: proto.base.IBattleRecordData) => {\r\n            return b.createTime - a.createTime;\r\n        });\r\n        this.logList.cellCount = this.logDatas.length;\r\n        // let data = new Req[\"battle_mgr.protocol.getbattlerecentrecords\"]();\r\n        // data.count = 1;\r\n        //Session.Send(data);\r\n        console.log(\"发送获取战报记录---->\");\r\n        EventMgr.on(Evt_BattleLogGet, this.onUpdateBattleLog, this);\r\n        EventMgr.on(Evt_BattleLogInfo, this.onBattleLogInfo, this);\r\n    }\r\n\r\n    protected onHide(...args: any[]): void {\r\n\r\n    }\r\n\r\n    private onUpdateBattleLog(list: proto.base.IBattleRecordData[]): void {\r\n        this.logDatas = list;\r\n        this.logList.cellCount = this.logDatas.length;\r\n    }\r\n\r\n    private onBattleLogInfo(logData: proto.base.IBattleRoomReplaySummary): void {\r\n        for (const key in logData) {\r\n            this.curSelectData = logData[key];\r\n            break;\r\n        }\r\n        if (!this.curSelectData) {\r\n            MsgPanel.Show(\"战报异常\")\r\n            return;\r\n        }\r\n        this.logInfoCont.active = true;\r\n        this.maxRoundLab.string = `最大回合数：${this.curSelectData.roundTotal}`;\r\n        this.versionLab.string = `回放版本号：${this.curSelectData.version}`;\r\n        this.completeLab.string = `是否正常结束：${this.curSelectData.isComplete}`;\r\n        this.roomIdLab.string = `${this.curSelectData.createContext.roomId}`;\r\n        this.waitSecondLab.string = `等待输入时长：${this.curSelectData.createContext.waitSecond}`;\r\n        this.aiWaitSecondLab.string = `AI等待输入时长：${this.curSelectData.createContext.aiWaitSecond}`;\r\n        this.areaIdLab.string = `地形配置id：${this.curSelectData.createContext.areaIds}`;\r\n        this.buildInfoLab.string = `构建信息：${this.curSelectData.buildInfo}`;\r\n        this.playList.cellCount = this.curSelectData.createContext.players.length;\r\n        this.playList.selectIndex(0);\r\n    }\r\n\r\n    private onBtnClick(btn: Button): void {\r\n        switch (btn) {\r\n            case this.closeBtn:\r\n                this.Hide();\r\n                break;\r\n            case this.btn:\r\n                let roomId: string;\r\n                if (this.editBox.string && this.editBox.string.length > 0) {\r\n                    roomId = this.editBox.string;\r\n                    let data = new Req[\"battle_mgr.protocol.getbattlereplayroom\"]();\r\n                    data.roomId = [roomId];\r\n                    Session.Send(Route[\"battle_mgr.protocol.getbattlereplayroom\"], data);\r\n                    console.log(\"发送获取战报详情---->\")\r\n                }\r\n\r\n                break;\r\n            case this.infoBtn:\r\n                if (this.curSelectData && this.selectPlayer) {\r\n                    let data = new Req[\"battle_mgr.protocol.createbattlereplayroom\"]();\r\n                    data.replayRoomId = this.curSelectData.createContext.roomId;\r\n                    data.beginRound = 1;\r\n                    data.viewPlayerId = this.selectPlayer.playerId;\r\n                    Session.Send(Route[\"battle_mgr.protocol.createbattlereplayroom\"], data);\r\n                    console.log(\"以玩家\" + data.viewPlayerId + \"视角创建战报房间---->\" + data.replayRoomId);\r\n                }\r\n                break;\r\n            case this.logicInfoBtn:\r\n                if (this.curSelectData && this.selectPlayer) {\r\n                    let data = new Req[\"battle_mgr.protocol.createbattlereplayroom\"]();\r\n                    data.replayRoomId = this.curSelectData.createContext.roomId;\r\n                    data.beginRound = 1;\r\n                    data.logicReplay = true;\r\n                    data.viewPlayerId = this.selectPlayer.playerId;\r\n                    Session.Send(Route[\"battle_mgr.protocol.createbattlereplayroom\"], data);\r\n                    console.log(\"以玩家\" + data.viewPlayerId + \"视角创建战报房间---->\" + data.replayRoomId);\r\n                }\r\n                break;\r\n            case this.infoCloseBtn:\r\n                this.logInfoCont.active = false;\r\n                break;\r\n        }\r\n    }\r\n}"]}