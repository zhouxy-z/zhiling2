{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/fight/opOutput/Out_WaitPlayerShow.ts"],"names":["Out_WaitPlayerShow","proto","Req","Ret","Route","Session","DateUtils","BattleBaseComp","battleDataMgr","start","on","onBattleroomroundshowend","server","pb","Server","create","id","creatRoomData","serverId","data","roomId","roomData","Send","reset","off","onUpdate","dt","ServerTime","timeout","exit","result","decode","res","code"],"mappings":";;;yGAUaA,kB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAVNC,MAAAA,K;AAASC,MAAAA,G,iBAAAA,G;AAAKC,MAAAA,G,iBAAAA,G;AAAKC,MAAAA,K,iBAAAA,K;;AACjBC,MAAAA,O,iBAAAA,O;;AACAC,MAAAA,S,iBAAAA,S;;AACAC,MAAAA,c,iBAAAA,c;;AACAC,MAAAA,a,iBAAAA,a;;;;;;;AAGT;AACA;AACA;oCACaR,kB,GAAN,MAAMA,kBAAN;AAAA;AAAA,4CAA+F;AAExFS,QAAAA,KAAK,GAAS;AACpB;AAAA;AAAA,kCAAQC,EAAR,CAAW;AAAA;AAAA,8BAAM,wCAAN,CAAX,EAA4D,KAAKC,wBAAjE,EAA2F,IAA3F;AACA,cAAIC,MAAwB,GAAG;AAAA;AAAA,8BAAMC,EAAN,CAASC,MAAT,CAAgBC,MAAhB,EAA/B;AACAH,UAAAA,MAAM,CAACI,EAAP,GAAY;AAAA;AAAA,8CAAcC,aAAd,CAA4BC,QAAxC;AACA,cAAIC,IAAI,GAAG,IAAI;AAAA;AAAA,0BAAI,wCAAJ,CAAJ,EAAX;AACAA,UAAAA,IAAI,CAACP,MAAL,GAAcA,MAAd;AACAO,UAAAA,IAAI,CAACC,MAAL,GAAc;AAAA;AAAA,8CAAcC,QAAd,CAAuBD,MAArC;AACA;AAAA;AAAA,kCAAQE,IAAR,CAAa;AAAA;AAAA,8BAAM,wCAAN,CAAb,EAA8DH,IAA9D;AACH;;AAESI,QAAAA,KAAK,GAAS;AACpB;AAAA;AAAA,kCAAQC,GAAR,CAAY;AAAA;AAAA,8BAAM,wCAAN,CAAZ,EAA6D,KAAKb,wBAAlE,EAA4F,IAA5F;AACH;;AAESc,QAAAA,QAAQ,CAACC,EAAD,EAAmB;AACjC,cAAI;AAAA;AAAA,sCAAUC,UAAV,IAAwB,KAAKR,IAAL,CAAUS,OAAtC,EAA+C;AAC3C,iBAAKC,IAAL;AACH;AACJ;;AAEOlB,QAAAA,wBAAwB,CAACQ,IAAD,EAAkB;AAC9C,cAAIW,MAAM,GAAG;AAAA;AAAA,0BAAI,wCAAJ,EAA8CC,MAA9C,CAAqDZ,IAArD,CAAb;AACA,cAAI,KAAKC,MAAL,IAAeU,MAAM,CAACV,MAA1B,EAAkC;AAClC,cAAIU,MAAM,CAACE,GAAP,CAAWC,IAAX,IAAmB,GAAvB,EAA4B,KAAKJ,IAAL;AAC/B;;AA1BiG,O","sourcesContent":["import proto, { Req, Ret, Route } from \"../../../net/Protocol\";\r\nimport { Session } from \"../../../net/Session\";\r\nimport { DateUtils } from \"../../../utils/DateUtils\";\r\nimport { BattleBaseComp } from \"../../battle/BattleBaseComp\";\r\nimport { battleDataMgr } from \"../../battle/BattleDataMgr\";\r\nimport { PlayerData } from \"../../player/PlayerData\";\r\n\r\n/**\r\n * 等待客户端表现完毕\r\n */\r\nexport class Out_WaitPlayerShow extends BattleBaseComp<proto.base.IBattleRoomOpOutput_WaitPlayerShow> {\r\n\r\n    protected start(): void {\r\n        Session.on(Route[\"battle.protocol.battleroomroundshowend\"], this.onBattleroomroundshowend, this);\r\n        let server: proto.pb.IServer = proto.pb.Server.create();\r\n        server.id = battleDataMgr.creatRoomData.serverId;\r\n        let data = new Req[\"battle.protocol.battleroomroundshowend\"]();\r\n        data.server = server;\r\n        data.roomId = battleDataMgr.roomData.roomId;\r\n        Session.Send(Route[\"battle.protocol.battleroomroundshowend\"], data);\r\n    }\r\n\r\n    protected reset(): void {\r\n        Session.off(Route[\"battle.protocol.battleroomroundshowend\"], this.onBattleroomroundshowend, this);\r\n    }\r\n\r\n    protected onUpdate(dt: number): void {\r\n        if (DateUtils.ServerTime >= this.data.timeout) {\r\n            this.exit();\r\n        }\r\n    }\r\n\r\n    private onBattleroomroundshowend(data: any): void {\r\n        let result = Ret[\"battle.protocol.battleroomroundshowend\"].decode(data);\r\n        if (this.roomId != result.roomId) return;\r\n        if (result.res.code == 200) this.exit();\r\n    }\r\n\r\n}"]}