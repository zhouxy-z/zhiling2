{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/utils/Md5Utils.ts"],"names":["Md5Utils","hash","message","msgBytes","stringToUtf8Bytes","blocks","padMessage","a0","b0","c0","d0","i","length","block","slice","M","Uint32Array","j","A","B","C","D","F","g","K","leftRotate","S","toHexString","n","s","str","bytes","c","charCodeAt","push","bitLength","lengthBytes","Array","concat","byte","toString","padStart"],"mappings":"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","sourcesContent":["\r\nexport class Md5Utils {\r\n    private static readonly S: number[] = [\r\n        7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22,\r\n        5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20,\r\n        4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23,\r\n        6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21\r\n    ];\r\n    \r\n    private static readonly K: number[] = [\r\n        0xd76aa478, 0xe8c7b756, 0x242070db, 0xc1bdceee,\r\n        0xf57c0faf, 0x4787c62a, 0xa8304613, 0xfd469501,\r\n        0x698098d8, 0x8b44f7af, 0xffff5bb1, 0x895cd7be,\r\n        0x6b901122, 0xfd987193, 0xa679438e, 0x49b40821,\r\n        0xf61e2562, 0xc040b340, 0x265e5a51, 0xe9b6c7aa,\r\n        0xd62f105d, 0x02441453, 0xd8a1e681, 0xe7d3fbc8,\r\n        0x21e1cde6, 0xc33707d6, 0xf4d50d87, 0x455a14ed,\r\n        0xa9e3e905, 0xfcefa3f8, 0x676f02d9, 0x8d2a4c8a,\r\n        0xfffa3942, 0x8771f681, 0x6d9d6122, 0xfde5380c,\r\n        0xa4beea44, 0x4bdecfa9, 0xf6bb4b60, 0xbebfbc70,\r\n        0x289b7ec6, 0xeaa127fa, 0xd4ef3085, 0x04881d05,\r\n        0xd9d4d039, 0xe6db99e5, 0x1fa27cf8, 0xc4ac5665,\r\n        0xf4292244, 0x432aff97, 0xab9423a7, 0xfc93a039,\r\n        0x655b59c3, 0x8f0ccc92, 0xffeff47d, 0x85845dd1,\r\n        0x6fa87e4f, 0xfe2ce6e0, 0xa3014314, 0x4e0811a1,\r\n        0xf7537e82, 0xbd3af235, 0x2ad7d2bb, 0xeb86d391\r\n    ];\r\n\r\n    public static hash(message: string): string {\r\n        const msgBytes = this.stringToUtf8Bytes(message);\r\n        const blocks = this.padMessage(msgBytes);\r\n        \r\n        let a0 = 0x67452301;\r\n        let b0 = 0xefcdab89;\r\n        let c0 = 0x98badcfe;\r\n        let d0 = 0x10325476;\r\n\r\n        for (let i = 0; i < blocks.length; i += 16) {\r\n            const block = blocks.slice(i, i + 16);\r\n            const M = new Uint32Array(16);\r\n            \r\n            for (let j = 0; j < 16; j++) {\r\n            M[j] = (block[j * 4 + 3] << 24) | \r\n                    (block[j * 4 + 2] << 16) | \r\n                    (block[j * 4 + 1] << 8) | \r\n                    block[j * 4];\r\n            }\r\n\r\n            let A = a0;\r\n            let B = b0;\r\n            let C = c0;\r\n            let D = d0;\r\n\r\n            for (let j = 0; j < 64; j++) {\r\n            let F, g;\r\n            if (j < 16) {\r\n                F = (B & C) | (~B & D);\r\n                g = j;\r\n            } else if (j < 32) {\r\n                F = (D & B) | (~D & C);\r\n                g = (5 * j + 1) % 16;\r\n            } else if (j < 48) {\r\n                F = B ^ C ^ D;\r\n                g = (3 * j + 5) % 16;\r\n            } else {\r\n                F = C ^ (B | ~D);\r\n                g = (7 * j) % 16;\r\n            }\r\n\r\n            F = F + A + this.K[j] + M[g];\r\n            A = D;\r\n            D = C;\r\n            C = B;\r\n            B = B + this.leftRotate(F, this.S[j]);\r\n            }\r\n\r\n            a0 += A;\r\n            b0 += B;\r\n            c0 += C;\r\n            d0 += D;\r\n        }\r\n\r\n        return this.toHexString(a0) + this.toHexString(b0) + this.toHexString(c0) + this.toHexString(d0);\r\n    }\r\n\r\n    private static leftRotate(n: number, s: number): number {\r\n        return (n << s) | (n >>> (32 - s));\r\n    }\r\n\r\n    private static stringToUtf8Bytes(str: string): number[] {\r\n        const bytes = [];\r\n        for (let i = 0; i < str.length; i++) {\r\n            let c = str.charCodeAt(i);\r\n            if (c < 0x80) {\r\n            bytes.push(c);\r\n            } else if (c < 0x800) {\r\n            bytes.push(0xc0 | (c >> 6));\r\n            bytes.push(0x80 | (c & 0x3f));\r\n            } else {\r\n            bytes.push(0xe0 | (c >> 12));\r\n            bytes.push(0x80 | ((c >> 6) & 0x3f));\r\n            bytes.push(0x80 | (c & 0x3f));\r\n            }\r\n        }\r\n        return bytes;\r\n    }\r\n\r\n    private static padMessage(bytes: number[]): number[] {\r\n        const bitLength = bytes.length * 8;\r\n        bytes.push(0x80);\r\n        \r\n        while ((bytes.length * 8) % 512 !== 448) {\r\n            bytes.push(0x00);\r\n        }\r\n        \r\n        const lengthBytes = new Array(8);\r\n        for (let i = 0; i < 8; i++) {\r\n            lengthBytes[i] = (bitLength >>> (i * 8)) & 0xff;\r\n        }\r\n        \r\n        return bytes.concat(...lengthBytes);\r\n    }\r\n    \r\n    private static toHexString(n: number): string {\r\n        let s = '';\r\n        for (let i = 0; i < 4; i++) {\r\n            const byte = (n >>> (i * 8)) & 0xff;\r\n            s += byte.toString(16).padStart(2, '0');\r\n        }\r\n        return s;\r\n    }\r\n}"]}