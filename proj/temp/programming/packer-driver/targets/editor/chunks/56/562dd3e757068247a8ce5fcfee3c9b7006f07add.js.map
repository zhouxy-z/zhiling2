{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/component/SpriteLabel.ts"],"names":["createFont","spriteFrames","isNumber","fontSet","i","length","spriteFrame","name","replace","result","match","FontNbReg","key","Number","isNaN","FontSyReg","AssetManager","CCString","Color","Component","Layout","Node","Size","Sprite","SpriteFrame","UITransform","_decorator","ccclass","property","disallowMultiple","requireComponent","FontSets","HtmlReg","seed","SpriteLabelPool","ChPool","SpriteLabel","tooltip","type","hasInit","_grayscale","stylels","value","chs","size","originalSize","sizeScale","colorValue","font","fontFolder","onLoad","fontSets","folder","push","init","string","t","ab","instance","getBundle","loadDir","err","data","layout","getComponent","SetLayout","Type","HORIZONTAL","childern","node","children","styles","child","sp","height","getOriginalSize","color","toHEX","info","getAssetInfo","uuid","path","url","ls","split","pop","join","Promise","resolve","reject","fontsets","fontset","k","Math","max","concat","sprite","removeChild","indexOf","undefined","console","error","strs","defaultFont","sy","ch","active","addComponent","sizeMode","SizeMode","RAW","trim","layer","addChild","grayscale","min","fromHEX","scale","warn","width","w","h","setContentSize","rect","offsetX","updateLayout","alignHorizontal","resizeMode","ResizeMode","CONTAINER","horizontalDirection","HorizontalDirection","LEFT_TO_RIGHT","affectedByScale","VERTICAL","alignVertical","verticalDirection","VerticalDirection","TOP_TO_BOTTOM","NONE","startAxis","AxisDirection","spacingX","spacingY","fontSize","ResetSize","style","charAt","ResetColor","str"],"mappings":"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","sourcesContent":["import { AssetManager, CCString, Color, Component, Layout, Node, Size, Sprite, SpriteFrame, UITransform, _decorator } from \"cc\";\r\nconst { ccclass, property, disallowMultiple, requireComponent } = _decorator;\r\n\r\n/**字体 */\r\ntype FontSet = { [key: string | number]: SpriteFrame };\r\n/**字体集 */\r\nlet FontSets: { [dir: string]: FontSet } = {};\r\n\r\n/**数字 */\r\nconst FontNbReg = /[0-9]+/;\r\nconst FontSyReg = /[\\,\\.\\+\\-\\*\\/\\%\\&\\$\\@\\￥]/;\r\n/**富文本 */\r\nconst HtmlReg = /\\<[^\\>]+\\>/g;\r\n\r\n\r\n/**解析字体 */\r\nfunction createFont(spriteFrames: SpriteFrame[], isNumber: boolean = true) {\r\n    let fontSet = {};\r\n    for (let i = 0; i < spriteFrames.length; i++) {\r\n        let spriteFrame = spriteFrames[i];\r\n        let name = spriteFrame.name.replace(\"$$$\", \"\");\r\n        //Logger.log(\"createFont\", name, spriteFrame);\r\n        if (isNumber) {\r\n            let result = name.match(FontNbReg);\r\n            if (result && result.length) {\r\n                let key = Number(result[0]);\r\n                if (isNaN(key) == false) {\r\n                    fontSet[key] = spriteFrame;\r\n                    continue;\r\n                }\r\n            }\r\n            result = name.match(FontSyReg);\r\n            if (result && result.length) {\r\n                fontSet[result[0]] = spriteFrame;\r\n            }\r\n        } else {\r\n            fontSet[name] = spriteFrame;\r\n        }\r\n    }\r\n    return fontSet;\r\n}\r\n\r\nlet seed = 0;\r\nlet SpriteLabelPool: SpriteLabel[] = [];\r\nlet ChPool: Node[] = [];\r\n\r\n/**图片字体 */\r\n@ccclass('SpriteLabel')\r\n@disallowMultiple(true)\r\n@requireComponent(Layout)\r\nexport class SpriteLabel extends Component {\r\n\r\n    @property({ tooltip: \"数字模式会自动识别图片名称头部数字为对应的键值，\\n非数字模式则需要保证图片名字为对应字符键值\" })\r\n    private isNumber = false;\r\n\r\n    @property({ type: CCString, tooltip: \"字体集目录路径，如果节点已有图片则会使用此图片目录为字体集目录\" })\r\n    private fontFolder = undefined;\r\n\r\n    get font() {\r\n        if (!this.fontFolder) return \"\";\r\n        return this.fontFolder.replace(\"db://assets/res/\", \"\");\r\n    }\r\n    \r\n    set font(value: string) {\r\n        //Logger.log(\"set folderUrl\", this.hasInit);\r\n        this.fontFolder = value.replace(\"db://assets/res/\", \"\");\r\n        if (this.hasInit) {\r\n            this.onLoad();\r\n        }else{\r\n            let fontSets = [];\r\n            let folder = this.fontFolder;\r\n            if (FontSets[folder]) {\r\n                fontSets.push(FontSets[folder]);\r\n                this.init(fontSets, []);\r\n                this.string = this.value;\r\n            } else {\r\n                let t = this;\r\n                let ab = AssetManager.instance.getBundle(\"res\");\r\n                ab.loadDir(folder, SpriteFrame, (err: Error, data: SpriteFrame[]) => {\r\n                    let fontSet = createFont(data, t.isNumber);\r\n                    FontSets[folder] = fontSet;\r\n                    fontSets.push(FontSets[folder]);\r\n                    t.init(fontSets, []);\r\n                    t.string = t.value;\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    private hasInit = false;\r\n    protected async onLoad() {\r\n        //Logger.log(\"onLoad \" + this.fontFolder);\r\n        let layout = this.getComponent(Layout);\r\n        this.SetLayout(layout.type || Layout.Type.HORIZONTAL);\r\n\r\n        let fontSets = [];\r\n        let childern = this.node.children;\r\n        let ab = AssetManager.instance.getBundle(\"res\");\r\n        let styles: { color: string, size: number }[] = [];\r\n        let t = this;\r\n        for (let i = 0; i < childern.length; i++) {\r\n            let child = childern[i];\r\n            let sp = child.getComponent(Sprite);\r\n            //Logger.log(child.name, sp.getComponent(UITransform));\r\n            styles.push({ size: sp.getComponent(UITransform).height / sp.spriteFrame.getOriginalSize().height, color: sp.color.toHEX(\"#rrggbb\") });\r\n            let info: any = ab.getAssetInfo(sp.spriteFrame.uuid);\r\n            if (info && info.path) {\r\n                let url = info.path;\r\n                let ls = url.split(/[\\\\\\/]/);\r\n                ls.pop(); ls.pop();\r\n                url = ls.join(\"/\");\r\n                if (FontSets[url]) {\r\n                    fontSets.push(FontSets[url]);\r\n                } else {\r\n                    await new Promise<void>((resolve, reject) => {\r\n                        ab.loadDir(url, SpriteFrame, (err: Error, data: SpriteFrame[]) => {\r\n                            let fontSet = createFont(data, t.isNumber);\r\n                            FontSets[url] = fontSet;\r\n                            resolve();\r\n                        });\r\n                    })\r\n                    fontSets.push(FontSets[url]);\r\n                }\r\n            }\r\n        }\r\n        if (this.font) {\r\n            let folder = this.font;\r\n            if (FontSets[folder]) {\r\n                fontSets.push(FontSets[folder]);\r\n            } else {\r\n                await new Promise<void>((resolve, reject) => {\r\n                    ab.loadDir(folder, SpriteFrame, (err: Error, data: SpriteFrame[]) => {\r\n                        let fontSet = createFont(data, t.isNumber);\r\n                        FontSets[folder] = fontSet;\r\n                        resolve();\r\n                    });\r\n                })\r\n                fontSets.push(FontSets[folder]);\r\n            }\r\n        }\r\n        this.init(fontSets, styles);\r\n        this.string = this.value;\r\n        this.hasInit = true;\r\n    }\r\n\r\n    private _grayscale: boolean = false;\r\n    private fontSet: FontSet[] = [];\r\n    private stylels: { color: string, size: number }[] = [];\r\n    private value: string = \"\";\r\n    private chs: Sprite[] = [];\r\n    private init(fontsets: FontSet[], styles: { color: string, size: number }[] = []) {\r\n        this._grayscale = false;\r\n        if(this.fontSet)\r\n            this.fontSet.length = 0;\r\n        else\r\n            this.fontSet = [];\r\n        this.fontSet.push(...fontsets);\r\n        this.stylels = styles;\r\n        this.originalSize = 1;\r\n        for (let fontset of fontsets) {\r\n            for (let k in fontset) {\r\n                this.originalSize = Math.max(this.originalSize, fontset[k].getOriginalSize().height);\r\n            }\r\n        }\r\n        if(this.chs)\r\n            this.chs.length = 0;\r\n        else\r\n            this.chs = [];\r\n        if (this.node.children?.length > 0) {\r\n            let children = this.node.children.concat();\r\n            for (let i = 0; i < children.length; i++) {\r\n                let child = children[i];\r\n                let sprite = child.getComponent(Sprite);\r\n                if (!sprite) {\r\n                    this.node.removeChild(child);\r\n                } else {\r\n                    if (this.chs.indexOf(sprite) == -1) {\r\n                        this.chs.push(sprite);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // this.fontSize = this.size || this.originalSize;\r\n        let layout = this.getComponent(Layout);\r\n        this.SetLayout(layout.type || Layout.Type.HORIZONTAL);\r\n    }\r\n\r\n    /**获取字符串内容 */\r\n    get string() {\r\n        return this.value;\r\n    }\r\n    /**设置字符串 */\r\n    set string(value: any) {\r\n        if (value == undefined) {\r\n            console.error(value);\r\n        }\r\n        this.value = value.replace(HtmlReg, \"\");\r\n        if (!this.fontSet || !this.fontSet.length) return;\r\n        let strs = value.split(\"\");\r\n        let chs = this.chs;\r\n        let i = 0;\r\n        let layout = this.getComponent(Layout);\r\n        let defaultFont = this.fontSet[this.fontSet.length - 1];\r\n        let sy = undefined;\r\n        for (; i < strs.length; i++) {\r\n            let fontset = this.fontSet[i] || defaultFont;\r\n            let ch = chs[i];\r\n            if (ch) {\r\n                ch.node.active = true;\r\n                ch.spriteFrame = fontset[strs[i]];\r\n                // ch.node.setSiblingIndex(i);\r\n            } else {\r\n                let node = ChPool.length > 0 ? ChPool.pop() : new Node();\r\n                ch = node.addComponent(Sprite);\r\n                ch.spriteFrame = fontset[strs[i]];\r\n                ch.sizeMode = Sprite.SizeMode.RAW;\r\n                ch.trim = false;\r\n                chs[i] = ch;\r\n                ch.node.active = true;\r\n                ch.node.layer = this.node.layer;\r\n                this.node.addChild(node);\r\n                // node.setSiblingIndex(i);\r\n            }\r\n            ch.grayscale = this._grayscale;\r\n            let colorValue = this.stylels.length ? this.stylels[Math.min(i, this.stylels.length - 1)].color || this.colorValue : this.colorValue;\r\n            ch.color = (new Color()).fromHEX(colorValue);\r\n            let scale = this.stylels.length ? this.stylels[Math.min(i, this.stylels.length - 1)].size || this.sizeScale : this.sizeScale;\r\n\r\n            if (ch.spriteFrame) {\r\n                var size = ch.spriteFrame.getOriginalSize();\r\n            } else {\r\n                console.warn(\"找不到字符图片:\" + strs[i]);\r\n                var size = new Size(ch.getComponent(UITransform).width, ch.getComponent(UITransform).height);\r\n            }\r\n            let w = size.width * scale;\r\n            let h = size.height * scale;\r\n            if (sy == undefined) sy = h / 2;\r\n            // Logger.log(ch.name, this.stylels.length, this.sizeScale, scale);\r\n            ch.getComponent(UITransform).setContentSize(w, h);\r\n\r\n            let rect = ch.spriteFrame['_rect'];\r\n            let originalSize = ch.spriteFrame['_originalSize'];\r\n            let offsetX = -1 * (originalSize.width / 2 - rect.width / 2);\r\n            //let offsetY = originalSize.height / 2 - rect.height / 2;\r\n            if (!this.stylels[i]) {\r\n                ch.trim = false;\r\n                if (layout.type == Layout.Type.HORIZONTAL) {\r\n                    //ch.node.setPosition(0, offsetY * scale);\r\n                }\r\n            }\r\n        }\r\n        for (; i < this.node.children.length; i++) {\r\n            let child = this.node.children[i];\r\n            child.active = false;\r\n        }\r\n        layout.updateLayout(true);\r\n    }\r\n\r\n    /**\r\n     * 设置文本的横纵方向\r\n     * @param type \r\n     */\r\n    SetLayout(type: 1 | 2 | 3 = 1) {\r\n        let layout = this.getComponent(Layout);\r\n        layout.type = type;\r\n        if (type == Layout.Type.HORIZONTAL) {\r\n            layout.alignHorizontal = false;\r\n            layout.resizeMode = Layout.ResizeMode.CONTAINER;\r\n            layout.horizontalDirection = Layout.HorizontalDirection.LEFT_TO_RIGHT;\r\n            layout.affectedByScale = true;\r\n        } else if (type == Layout.Type.VERTICAL) {\r\n            layout.alignVertical = true;\r\n            layout.resizeMode = Layout.ResizeMode.CONTAINER;\r\n            layout.verticalDirection = Layout.VerticalDirection.TOP_TO_BOTTOM;\r\n            layout.affectedByScale = true;\r\n        } else {\r\n            layout.resizeMode = Layout.ResizeMode.NONE;\r\n            layout.startAxis = Layout.AxisDirection.HORIZONTAL;\r\n            layout.verticalDirection = Layout.VerticalDirection.TOP_TO_BOTTOM;\r\n            layout.horizontalDirection = Layout.HorizontalDirection.LEFT_TO_RIGHT;\r\n        }\r\n        this.string = this.value;\r\n    }\r\n\r\n    set grayscale(value: boolean) {\r\n        if (this._grayscale == value) return;\r\n        this._grayscale = value;\r\n        this.string = this.value;\r\n    }\r\n    get grayscale() { return this._grayscale; }\r\n\r\n    /**获取横向间隔 */\r\n    get spacingX() {\r\n        let layout = this.getComponent(Layout);\r\n        return layout.spacingX;\r\n    }\r\n    /**设置横向间隔 */\r\n    set spacingX(value: number) {\r\n        let layout = this.getComponent(Layout);\r\n        layout.spacingX = value;\r\n    }\r\n\r\n    /**获取纵向间隔 */\r\n    get spacingY() {\r\n        let layout = this.getComponent(Layout);\r\n        return layout.spacingY;\r\n    }\r\n    /**设置纵向间隔 */\r\n    set spacingY(value: number) {\r\n        let layout = this.getComponent(Layout);\r\n        layout.spacingY = value;\r\n    }\r\n\r\n    private size: number = 0;\r\n    private originalSize: number = 0;\r\n    private sizeScale: number = 1;\r\n    /**获取字体尺寸 */\r\n    get fontSize() {\r\n        return this.originalSize * this.sizeScale;\r\n    }\r\n    /**设置字体尺寸 */\r\n    set fontSize(value: number) {\r\n        this.size = value;\r\n        if (!this.fontSet || !this.fontSet.length) return;\r\n\r\n        this.sizeScale = value / this.originalSize;\r\n        this.string = this.value;\r\n    }\r\n\r\n    /**重置所有尺寸 */\r\n    ResetSize(value: number) {\r\n        for (let style of this.stylels) {\r\n            style.size = undefined;\r\n        }\r\n        this.fontSize = value;\r\n    }\r\n\r\n    private colorValue = \"#ffffff\";\r\n    /**获取字体颜色 */\r\n    get color() {\r\n        return this.colorValue;\r\n    }\r\n    /**设置字体颜色 */\r\n    set color(value: string) {\r\n        this.colorValue = value.replace(\"0x\", \"#\");\r\n        if (this.colorValue.charAt(0) != \"#\") this.colorValue = \"#\" + this.colorValue;\r\n        if (!this.fontSet || !this.fontSet.length) return;\r\n        this.string = this.value;\r\n    }\r\n    /**重置所有颜色 */\r\n    ResetColor(value: string, str?: string) {\r\n        for (let style of this.stylels) {\r\n            style.color = undefined;\r\n        }\r\n        this.color = str == undefined ? value : str;\r\n    }\r\n}\r\n\r\n"]}