{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/common/ClickTipsPanel.ts"],"names":["ClickTipsPanel","Node","UITransform","Vec2","Vec3","Panel","prefab","tipsCont","moveIsEnd","haveStart","_target","_clickTarget","_targetPatent","_size","_hideCb","isDelay","isMove","dis","onLoad","find","node","getComponent","contentSize","on","EventType","TOUCH_START","onTouchStart","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","TOUCH_CANCEL","onTouchCancel","onShow","flush","target","targetPatent","clickTarget","showWorlPos","dir","hideCb","resetTarger","active","position","setParent","targetTrans","targetRect","getBoundingBox","setContentSize","width","height","newPos","clickTargetTrans","worldPosition","clone","x","newY","y","onHide","children","length","touch","preventSwallow","getDelta","distance","scheduleOnce","Hide"],"mappings":"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","sourcesContent":["import { EventTouch, Node, Rect, Size, UITransform, Vec2, Vec3} from \"cc\";\r\nimport { Panel } from \"../../manager/GameRoot\";\r\n\r\n\r\nexport class ClickTipsPanel extends Panel {\r\n    protected prefab: string = \"prefabs/common/ClickTipsPanel\";\r\n    private tipsCont:Node;\r\n    //滑动是否关闭TOUCH_END事件\r\n    private moveIsEnd: boolean = false;\r\n    private haveStart: boolean = false;\r\n    private _target:Node;\r\n    private _clickTarget:Node;\r\n    private _targetPatent:Node;\r\n    private _size:Size;\r\n    private _hideCb:()=>void = null;\r\n    private isDelay:boolean;\r\n    protected onLoad(): void {\r\n        this.tipsCont = this.find(\"tipsCont\");\r\n        this._size = this.node.getComponent(UITransform).contentSize;\r\n        this.node.on(Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n        this.node.on(Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n        this.node.on(Node.EventType.TOUCH_END, this.onTouchEnd, this);\r\n        this.node.on(Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this);\r\n\r\n    }\r\n    protected onShow(): void {\r\n        \r\n    }\r\n    /**\r\n     * \r\n     * @param target tips目标节点\r\n     * @param targetPatent tips目标节点父节点\r\n     * @param clickTarget 点击目标节点\r\n     * @param showWorlPos 显示坐标（世界）\r\n     * @param dir target在点击目标的方向 0：下方 1：上方\r\n     * @param hideCb tips关闭回调\r\n     */\r\n    public flush(target:Node, targetPatent:Node, clickTarget:Node, showWorlPos:Vec3 = null, dir:number = 0, hideCb:() => void): void {\r\n        if(this._clickTarget == clickTarget){\r\n            this.isDelay = true;\r\n            return;\r\n        }\r\n        this.isDelay = false;\r\n        this.resetTarger();\r\n        this._hideCb = hideCb;\r\n        this._target = target;\r\n        this._target.active = true;\r\n        this._target.position = new Vec3(0, 0);\r\n        this._targetPatent = targetPatent;\r\n        this._clickTarget = clickTarget;\r\n        this._target.setParent(this.tipsCont);\r\n        let targetTrans = target.getComponent(UITransform);\r\n        let targetRect:Rect = targetTrans.getBoundingBox();\r\n        this.tipsCont.getComponent(UITransform).setContentSize(targetRect.width, targetRect.height);\r\n        let newPos:Vec3;\r\n        //有指定位置显示就指定位置显示\r\n        if(showWorlPos){\r\n            newPos = showWorlPos;\r\n        }else{\r\n            let clickTargetTrans = this._clickTarget.getComponent(UITransform);\r\n            newPos = this._clickTarget.worldPosition.clone();\r\n            newPos.x = this._size.width / 2;\r\n            let newY:number;\r\n            //出下方\r\n            if(dir == 0){\r\n                newY = newPos.y - clickTargetTrans.height / 2 - targetRect.height / 2;\r\n               //下方超出边界则出上方\r\n               if(newY < 0){\r\n                    newY = newPos.y + clickTargetTrans.height / 2 + targetRect.height / 2;\r\n               }\r\n               newPos.y = newY;\r\n            }else{\r\n                //出上方\r\n                newY = newPos.y + clickTargetTrans.height / 2 + targetRect.height / 2;\r\n                if(newY > this._size.height){\r\n                    newY = newPos.y - clickTargetTrans.height / 2 - targetRect.height / 2;\r\n                }\r\n            }\r\n        }\r\n        this.tipsCont.worldPosition = newPos;\r\n    }\r\n    protected onHide(): void {\r\n        this.resetTarger();\r\n        if(this._hideCb != null) this._hideCb();\r\n        this._hideCb = null;\r\n    }\r\n    private resetTarger():void{\r\n        if(this.tipsCont.children.length > 0){\r\n            let target:Node = this.tipsCont.children[0];\r\n            if(this._targetPatent){\r\n                target.setParent(this._targetPatent);\r\n                target.active = false;\r\n                this._target = null;\r\n                this._clickTarget = null;\r\n                this._targetPatent = null;\r\n            }\r\n        }\r\n    }\r\n    private onTouchStart(touch: EventTouch): void {\r\n        touch.preventSwallow = true;\r\n        this.haveStart = true;\r\n        this.isMove = false;\r\n        this.dis = new Vec2(0, 0);\r\n        //console.log(\"----->onTouchStart\");\r\n    }\r\n    //是否移动状态\r\n    private isMove = null;\r\n    //点击移动距离\r\n    private dis: Vec2 = new Vec2(0, 0);\r\n    private onTouchMove(touch: EventTouch): void {\r\n        touch.preventSwallow = true;\r\n        if (!this.haveStart) return;\r\n        let dis = touch.getDelta();\r\n        this.dis.x += dis.x;\r\n        this.dis.y += dis.y;\r\n        let distance = this.dis.length();\r\n        //滑动区域20像素算作移动\r\n        if (distance >= 20) this.isMove = true;\r\n        //console.log(\"----->onTouchMove\");\r\n    }\r\n    private onTouchEnd(touch: EventTouch): void {\r\n        touch.preventSwallow = true;\r\n        if (!this.haveStart) return;\r\n        if (this.moveIsEnd && this.isMove) return;\r\n        if(this.isDelay){\r\n            this.scheduleOnce(()=>{\r\n                this.Hide();\r\n            }, 0.05)\r\n        }else{\r\n            this.Hide();\r\n        }\r\n        \r\n        this.haveStart = false;\r\n        this.isMove = false;\r\n        //console.log(\"----->onTouchEnd\");\r\n    }\r\n    private onTouchCancel(touch: EventTouch): void {\r\n        touch.preventSwallow = true;\r\n        this.haveStart = false;\r\n        this.isMove = false;\r\n        //console.log(\"----->onTouchCancel\");\r\n    }\r\n\r\n\r\n\r\n}"]}