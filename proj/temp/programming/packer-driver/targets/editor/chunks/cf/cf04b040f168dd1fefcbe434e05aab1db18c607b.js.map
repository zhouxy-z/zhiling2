{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/fight/opOutput/Out_CopyCard.ts"],"names":["Out_CopyCard","BattleBaseComp","battleDataMgr","proto","start","copyCard","getCard","data","copyInstId","copyPlayerIsA","isPlayerA","playerId","toPlayerIsA","card","location","base","BattleRoomCardLocation","Hand","scene","AddCardToHand","Unknown","isExit","Terrain","cardLocation","getPlayerAreaEmptyCardLocationByIdx","area","AddCardToArea","areaIdx","cardIdx","Deck","Del","Drop","CopyCardToUnVisible","exit","reset"],"mappings":";;;oEASaA,Y;;;;;;;;;;;;;;;;;;;;;;;;;;AATJC,MAAAA,c,iBAAAA,c;;AACAC,MAAAA,a,iBAAAA,a;;AAGFC,MAAAA,K;;;;;;;AAEP;AACA;AACA;8BACaH,Y,GAAN,MAAMA,YAAN;AAAA;AAAA,4CAAmF;AAEjE,cAALI,KAAK,GAAkB;AACnC,cAAIC,QAAwC,GAAG;AAAA;AAAA,8CAAcC,OAAd,CAAsB,KAAKC,IAAL,CAAUC,UAAhC,CAA/C,CADmC,CAEnC;;AACA,cAAIC,aAAsB,GAAG;AAAA;AAAA,8CAAcC,SAAd,CAAwBL,QAAQ,CAACM,QAAjC,CAA7B,CAHmC,CAInC;;AACA,cAAIC,WAAoB,GAAG;AAAA;AAAA,8CAAcF,SAAd,CAAwB,KAAKH,IAAL,CAAUM,IAAV,CAAeF,QAAvC,CAA3B,CALmC,CAMnC;;AACA,kBAAQ,KAAKJ,IAAL,CAAUM,IAAV,CAAeC,QAAvB;AACI,iBAAK;AAAA;AAAA,gCAAMC,IAAN,CAAWC,sBAAX,CAAkCC,IAAvC;AACI;AACA,oBAAM,KAAKC,KAAL,CAAWC,aAAX,CAAyBP,WAAzB,EAAsC,KAAKL,IAA3C,EAAiD;AAAA;AAAA,kCAAMQ,IAAN,CAAWC,sBAAX,CAAkCI,OAAnF,EAA4Ff,QAA5F,CAAN;AACA,kBAAI,KAAKgB,MAAT,EAAiB,OAHrB,CAII;;AACA;;AACJ,iBAAK;AAAA;AAAA,gCAAMN,IAAN,CAAWC,sBAAX,CAAkCM,OAAvC;AACI;AACA,kBAAIC,YAA0B,GAAG;AAAA;AAAA,kDAAcC,mCAAd,CAAkD,KAAKjB,IAAL,CAAUM,IAAV,CAAeF,QAAjE,EAA2E,KAAKJ,IAAL,CAAUM,IAAV,CAAeY,IAA1F,CAAjC;AACA,oBAAM,KAAKP,KAAL,CAAWQ,aAAX,CAAyBd,WAAzB,EAAsC,KAAKL,IAA3C,EAAiDF,QAAjD,EAA2DkB,YAAY,CAACI,OAAxE,EAAiFJ,YAAY,CAACK,OAA9F,CAAN;AACA,kBAAI,KAAKP,MAAT,EAAiB;AACjB;;AACJ,iBAAK;AAAA;AAAA,gCAAMN,IAAN,CAAWC,sBAAX,CAAkCa,IAAvC;AACA,iBAAK;AAAA;AAAA,gCAAMd,IAAN,CAAWC,sBAAX,CAAkCc,GAAvC;AACA,iBAAK;AAAA;AAAA,gCAAMf,IAAN,CAAWC,sBAAX,CAAkCe,IAAvC;AACI;AACA,oBAAM,KAAKb,KAAL,CAAWc,mBAAX,CAA+BpB,WAA/B,EAA4C,KAAKL,IAAjD,EAAuDF,QAAvD,CAAN;AACA,kBAAI,KAAKgB,MAAT,EAAiB,OAHrB,CAII;;AACA;;AACJ;AACI;AAtBR;;AAwBA,eAAKY,IAAL;AACH;;AAESC,QAAAA,KAAK,GAAS,CAEvB;;AAtCqF,O","sourcesContent":["import { BattleBaseComp } from \"../../battle/BattleBaseComp\";\r\nimport { battleDataMgr } from \"../../battle/BattleDataMgr\";\r\nimport { BeforeGameUtils } from \"../../../utils/BeforeGameUtils\";\r\nimport { CardLocation } from \"../../player/PlayerStruct\";\r\nimport proto from \"../../../net/Protocol\";\r\n\r\n/**\r\n * 复制一张卡\r\n */\r\nexport class Out_CopyCard extends BattleBaseComp<proto.base.IBattleRoomOpOutput_CopyCard> {\r\n\r\n    protected async start(): Promise<void> {\r\n        let copyCard: proto.base.IBattleRoomCardData = battleDataMgr.getCard(this.data.copyInstId);\r\n        //复制来源是否第一觉玩家\r\n        let copyPlayerIsA: boolean = battleDataMgr.isPlayerA(copyCard.playerId);\r\n        //是否复制到第一觉玩家\r\n        let toPlayerIsA: boolean = battleDataMgr.isPlayerA(this.data.card.playerId);\r\n        //复制卡来源\r\n        switch (this.data.card.location) {\r\n            case proto.base.BattleRoomCardLocation.Hand:\r\n                //复制的卡出现在屏幕中间然后飞到对应目标玩家的手卡区\r\n                await this.scene.AddCardToHand(toPlayerIsA, this.data, proto.base.BattleRoomCardLocation.Unknown, copyCard);\r\n                if (this.isExit) return;\r\n                // this.scene.AddCardFormSceneCentreToHand(toPlayerIsA, this.data.card);\r\n                break;\r\n            case proto.base.BattleRoomCardLocation.Terrain:\r\n                //复制的卡出现在屏幕中间然后飞到对应目标玩家的场地上区\r\n                let cardLocation: CardLocation = battleDataMgr.getPlayerAreaEmptyCardLocationByIdx(this.data.card.playerId, this.data.card.area);\r\n                await this.scene.AddCardToArea(toPlayerIsA, this.data, copyCard, cardLocation.areaIdx, cardLocation.cardIdx);\r\n                if (this.isExit) return;\r\n                break;\r\n            case proto.base.BattleRoomCardLocation.Deck:\r\n            case proto.base.BattleRoomCardLocation.Del:\r\n            case proto.base.BattleRoomCardLocation.Drop:\r\n                //复制的卡出现在屏幕中间然后飞到对应目标玩家的头像区\r\n                await this.scene.CopyCardToUnVisible(toPlayerIsA, this.data, copyCard);\r\n                if (this.isExit) return;\r\n                // this.scene.AddCardFormSceneCentreToHead(toPlayerIsA, this.data.card);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.exit();\r\n    }\r\n\r\n    protected reset(): void {\r\n\r\n    }\r\n}"]}