{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/trade/RoleMsgPanel.ts"],"names":["RoleMsgPanel","Button","Color","Input","Label","Layout","Sprite","SpriteFrame","UITransform","Widget","instantiate","path","sp","Panel","prefab","figure","quality","level","body","role_name","jobIcon","jobName","power","SoldierNum","okBtn","layout","value","skillLayout","skill_item","spriteFrame","sellNode","sellBtn","sellVaule","get_money_icon","costVaule","role_tips","role","roleData","type","id","onLoad","CloseBy","find","Skeleton","node","on","onClick","flush","things","data","active","soldier_num","SOrderType","SELL","string","getComponent","height","cost_num","CfgMgr","GetCommon","StdCommonType","Bourse","Fees","ToFixed","unit_value","Math","ceil","PlayerData","GetRoleByTypeAndLvAndQuality","enabled","grayscale","children","forEach","updateAlignment","cfg","GetRole","Prefab","skeletonData","ResMgr","LoadResAbSub","join","SkeletonData","setAnimation","folder_icon","CardQuality","color","fromHEX","quality_color","Name","PositionType","JobName","CountPower","GetAttrValueByIndex","Attr","LeaderShip","removeAllChildren","passive_skills","length","index","element","skill_cfg","GetPassiveSkill","skill_id","item","EventType","TOUCH_END","PassiveSkillTipsPanel","Show","getChildByPath","iconUrl","folder_skill","Icon","toString","res","folder_quality","RareLevel","getChildByName","addChild","unit_count","roleInfo","currency","callBack","onSend","canSelectRoleData","roles","GetRoles","iterator","is_show","trade_cd","GetServerTime","is_add","building_id","is_assisting","is_in_main_building","push","SelectHeroPanel","bind","CardType","Trade","Tips","isFengkong","RiskPanel","CheckRisk","Hide","is_ios","IOS","sendData","MsgTypeSend","ExchangesTrade","order_id","payment_things","ThingType","ThingTypeRole","experience","active_skills","is_in_building","battle_power","skills","authorization","rc_token","client_os","Session","Send","onShow","onHide","args","undefined"],"mappings":"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","sourcesContent":["import { Button, Color, Input, Label, Layout, Node, Sprite, SpriteFrame, UITransform, Widget, instantiate, path, sp} from \"cc\";\r\nimport { Panel } from \"../../manager/GameRoot\";\r\n\r\n\r\nexport class RoleMsgPanel extends Panel {\r\n    protected prefab: string = \"prefabs/panel/Trade/RoleMsgPanel\";\r\n\r\n    private figure: Sprite\r\n    private quality: Sprite;\r\n    private level: Label;\r\n    private body: sp.Skeleton;\r\n    private role_name: Label;\r\n    private jobIcon: Sprite;\r\n    private jobName: Label;\r\n    private power: Label;\r\n    private SoldierNum: Label;\r\n    private okBtn: Button;\r\n    private layout: Layout;\r\n    private value: Label;\r\n    private skillLayout: Node;\r\n    private skill_item: Node;\r\n    private spriteFrame: Node;\r\n    private sellNode: Node;\r\n    private sellBtn: Button;\r\n    private sellVaule: Label;\r\n    private get_money_icon: Sprite;\r\n    private costVaule: Label;\r\n    private role_tips: Label;\r\n\r\n    private role: SPlayerDataRole;\r\n    private roleData: SOrderData;\r\n    private type: number;\r\n    private id: string;\r\n\r\n    protected onLoad() {\r\n        this.CloseBy(\"mask\");\r\n        this.CloseBy(\"spriteFrame/Close\");\r\n        this.spriteFrame = this.find(\"spriteFrame\")\r\n        this.figure = this.find(`spriteFrame/juese/figure`, Sprite);\r\n        this.quality = this.find(`spriteFrame/juese/quality`, Sprite);\r\n        this.level = this.find(`spriteFrame/juese/level`, Label);\r\n        this.body = this.find(\"spriteFrame/juese/body\", sp.Skeleton);\r\n        this.role_name = this.find(`spriteFrame/msg/role_name`, Label);\r\n        this.jobIcon = this.find(`spriteFrame/msg/jobLayout/jobIcon`, Sprite);\r\n        this.jobName = this.find(`spriteFrame/msg/jobLayout/jobName`, Label);\r\n        this.power = this.find(`spriteFrame/msg/power`, Label);\r\n        this.SoldierNum = this.find(`spriteFrame/msg/SoldierNum`, Label);\r\n        this.okBtn = this.find(\"spriteFrame/mid/okBtn\", Button);\r\n        this.layout = this.find(\"spriteFrame/skillLayout/ScrollView/view/layout\", Layout)\r\n        this.value = this.find(`spriteFrame/mid/okBtn/layout/value`, Label);\r\n        this.skillLayout = this.find(\"spriteFrame/skillLayout\")\r\n        this.skill_item = this.find(\"spriteFrame/skillLayout/ScrollView/view/layout/item\")\r\n        this.sellNode = this.find(\"spriteFrame/mid/sellNode\");\r\n        this.sellBtn = this.find(\"spriteFrame/mid/sellNode/sellBtn\", Button);\r\n        this.sellVaule = this.find(\"spriteFrame/mid/sellNode/layout/sellVaule\", Label);\r\n        this.get_money_icon = this.find(\"spriteFrame/mid/sellNode/layout/get_money_icon\", Sprite);\r\n        this.costVaule = this.find(\"spriteFrame/mid/sellNode/layout/costVaule\", Label);\r\n        this.role_tips = this.find(\"spriteFrame/mid/sellNode/role_tips\", Label);\r\n\r\n        this.okBtn.node.on(\"click\", this.onClick, this)\r\n        this.sellBtn.node.on(\"click\", this.onClick, this)\r\n        // this.sellBtn.node.on(\"click\", this.onSend, this);\r\n\r\n    }\r\n\r\n    async flush(type: number, roleData: SOrderData,) {\r\n        this.type = type;\r\n        this.roleData = roleData;\r\n        this.role = roleData.things.data[0].role;\r\n        this.skillLayout.active = true;\r\n        let soldier_num = this.role.soldier_num ? this.role.soldier_num : 0;\r\n        if (type == SOrderType.SELL) {\r\n            // this.role_tips.string = CfgMgr.GetText(\"fanyu_1\")\r\n            this.role_tips.string = \"\"\r\n            this.skillLayout.active = false;\r\n            this.spriteFrame.getComponent(UITransform).height = 1150 - this.skillLayout.getComponent(UITransform).height;\r\n            this.okBtn.node.active = false;\r\n            this.sellNode.active = true;\r\n\r\n            let cost_num = CfgMgr.GetCommon(StdCommonType.Bourse).Fees;\r\n            this.sellVaule.string = ToFixed((this.roleData.unit_value - this.roleData.unit_value * cost_num), 2);\r\n            this.costVaule.string = \"(\" + Math.ceil(cost_num * 100 * 100) / 100 + \"%损耗)\";\r\n\r\n            let role = PlayerData.GetRoleByTypeAndLvAndQuality(this.role.type, this.role.level, this.role.quality);\r\n            if (!role) {\r\n                this.sellBtn.enabled = false\r\n                this.sellBtn.node.getComponent(Sprite).grayscale = true;\r\n            } else {\r\n                this.sellBtn.enabled = true\r\n                this.sellBtn.node.getComponent(Sprite).grayscale = false;\r\n            }\r\n        } else {\r\n            this.okBtn.node.active = true;\r\n            this.sellNode.active = false;\r\n        }\r\n        this.spriteFrame.children.forEach((node) => {\r\n            if (node.getComponent(Widget)) {\r\n                node.getComponent(Widget).updateAlignment();\r\n            }\r\n        })\r\n\r\n        let cfg = CfgMgr.GetRole()[this.role.type]\r\n        let prefab = cfg.Prefab;\r\n        this.body.skeletonData = await ResMgr.LoadResAbSub(path.join(\"spine/role_p\", prefab, prefab), sp.SkeletonData);\r\n        this.body.setAnimation(0, `Idle`, true);\r\n        this.quality.spriteFrame = await ResMgr.LoadResAbSub(path.join(folder_icon, \"quality\", CardQuality[this.role.quality] + \"_big\", \"spriteFrame\"), SpriteFrame);\r\n        this.level.string = `Lv.${this.role.level}`;\r\n        this.figure.color = new Color().fromHEX(quality_color[this.role.quality]);\r\n        this.role_name.string = cfg.Name;\r\n        this.jobIcon.spriteFrame = await ResMgr.LoadResAbSub(path.join(folder_icon, \"pos\" + cfg.PositionType, \"spriteFrame\"), SpriteFrame);\r\n        this.jobName.string = JobName[cfg.PositionType];\r\n        this.power.string = CountPower(this.role.type, this.role.level, this.role) + \"\";\r\n        this.SoldierNum.string = GetAttrValueByIndex(this.role, Attr.LeaderShip) + \"\";\r\n\r\n        this.layout.node.removeAllChildren();\r\n        if (this.role.passive_skills && this.role.passive_skills.length > 0) {\r\n            for (let index = 0; index < this.role.passive_skills.length; index++) {\r\n                const element = this.role.passive_skills[index];\r\n                //获取被动技能表\r\n                let skill_cfg: StdPassiveLevel = CfgMgr.GetPassiveSkill(element.skill_id, element.level);\r\n                let item = instantiate(this.skill_item);\r\n                item.on(Input.EventType.TOUCH_END, () => { PassiveSkillTipsPanel.Show({ skill_id: element.skill_id, level: element.level }); })\r\n                if (skill_cfg) {\r\n                    item.getChildByPath(\"lvCont/lvLab\").getComponent(Label).string = element.level + \"\";\r\n                    let iconUrl: string = path.join(folder_skill, skill_cfg.Icon.toString(), \"spriteFrame\");\r\n                    ResMgr.LoadResAbSub(iconUrl, SpriteFrame, res => {\r\n                        item.getChildByPath(\"Mask/icon\").getComponent(Sprite).spriteFrame = res;\r\n                    });\r\n\r\n                    let quality: string = path.join(folder_quality, \"p_skill_bg_\" + skill_cfg.RareLevel, \"spriteFrame\");\r\n                    ResMgr.LoadResAbSub(quality, SpriteFrame, res => {\r\n                        item.getChildByName(\"frame\").getComponent(Sprite).spriteFrame = res\r\n                    });\r\n                    this.layout.node.addChild(item);\r\n                }\r\n            }\r\n        }\r\n        this.value.string = ToFixed(roleData.unit_count * roleData.unit_value, 2);\r\n        this.value.color = PlayerData.roleInfo.currency > roleData.unit_count * roleData.unit_value ? new Color().fromHEX(\"#ffffff\") : new Color().fromHEX(\"#ff3f3f\")\r\n    }\r\n\r\n    private onClick() {\r\n        if (this.type == SOrderType.SELL) {\r\n            let callBack = (role: SPlayerDataRole[]) => {\r\n                if (role && role[0]) {\r\n                    this.id = role[0].id;\r\n                    this.onSend();\r\n                }\r\n            }\r\n            let canSelectRoleData: SPlayerDataRole[] = [];\r\n\r\n            let roles: SPlayerDataRole[] = PlayerData.GetRoles();\r\n            for (const iterator of roles) {\r\n                let is_show = iterator.trade_cd - PlayerData.GetServerTime() > 0;\r\n                let is_add = iterator.type == this.role.type && iterator.quality == this.role.quality && iterator.level == this.role.level\r\n                if (is_add && iterator.building_id == 0 && !iterator.is_assisting && !is_show && !iterator.is_in_main_building) {\r\n                    canSelectRoleData.push(iterator);\r\n                }\r\n            }\r\n            SelectHeroPanel.Show(canSelectRoleData, [], 1, callBack.bind(this), CardType.Trade);\r\n\r\n        } else {\r\n            let currency = PlayerData.roleInfo.currency;\r\n            if (currency < this.roleData.unit_value) {\r\n                Tips.Show(\"货币不足\")\r\n                return;\r\n            }\r\n\r\n            this.id = this.role.id;\r\n            this.onSend();\r\n        }\r\n\r\n    }\r\n\r\n    private onSend() {\r\n        if (isFengkong()) {\r\n            RiskPanel.Show();\r\n            CheckRisk((data: { authorization: string, rc_token: string }) => {\r\n                RiskPanel.Hide();\r\n                let is_ios = IOS ? 1 : 2;\r\n                let sendData = {\r\n                    type: MsgTypeSend.ExchangesTrade,\r\n                    data: {\r\n                        order_id: this.roleData.order_id,\r\n                        payment_things: {\r\n                            data: [{\r\n                                type: ThingType.ThingTypeRole,\r\n                                role: {\r\n                                    id: this.id,\r\n                                    type: this.role.type,\r\n                                    level: this.role.level,\r\n                                    quality: this.role.quality,\r\n                                    experience: this.role.experience ? this.role.experience : 0,\r\n                                    soldier_num: this.role.soldier_num ? this.role.soldier_num : 0,\r\n                                    active_skills: this.role.active_skills ? this.role.active_skills : [],\r\n                                    passive_skills: this.role.passive_skills ? this.role.passive_skills : [],\r\n                                    is_in_building: this.role.is_in_building,\r\n                                    building_id: this.role.building_id ? this.role.building_id : 0,\r\n                                    battle_power: this.role.battle_power ? this.role.battle_power : 0,\r\n                                    skills: this.role.skills ? this.role.skills : [],\r\n                                    is_assisting: this.role.is_assisting,\r\n                                }\r\n                            }]\r\n                        },\r\n                        unit_count: 1,\r\n                        authorization: data.authorization,\r\n                        rc_token: data.rc_token,\r\n                        client_os: is_ios,\r\n                    }\r\n                }\r\n                Session.Send(sendData)\r\n            })\r\n        } else {\r\n            let is_ios = IOS ? 1 : 2;\r\n            let sendData = {\r\n                type: MsgTypeSend.ExchangesTrade,\r\n                data: {\r\n                    order_id: this.roleData.order_id,\r\n                    payment_things: {\r\n                        data: [{\r\n                            type: ThingType.ThingTypeRole,\r\n                            role: {\r\n                                id: this.id,\r\n                                type: this.role.type,\r\n                                level: this.role.level,\r\n                                quality: this.role.quality,\r\n                                experience: this.role.experience ? this.role.experience : 0,\r\n                                soldier_num: this.role.soldier_num ? this.role.soldier_num : 0,\r\n                                active_skills: this.role.active_skills ? this.role.active_skills : [],\r\n                                passive_skills: this.role.passive_skills ? this.role.passive_skills : [],\r\n                                is_in_building: this.role.is_in_building,\r\n                                building_id: this.role.building_id ? this.role.building_id : 0,\r\n                                battle_power: this.role.battle_power ? this.role.battle_power : 0,\r\n                                skills: this.role.skills ? this.role.skills : [],\r\n                                is_assisting: this.role.is_assisting,\r\n                            }\r\n                        }]\r\n                    },\r\n                    unit_count: 1,\r\n                    authorization: \"\",\r\n                    rc_token: \"\",\r\n                    client_os: is_ios,\r\n                }\r\n            }\r\n            Session.Send(sendData);\r\n        }\r\n    }\r\n    protected onShow(): void {\r\n\r\n    }\r\n    protected onHide(...args: any[]): void {\r\n\r\n        this.roleData = undefined;\r\n        this.role = undefined;\r\n        this.spriteFrame.getComponent(UITransform).height = 1150;\r\n    }\r\n}\r\n"]}