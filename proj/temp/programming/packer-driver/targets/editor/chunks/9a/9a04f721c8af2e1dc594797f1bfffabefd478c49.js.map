{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/manager/DragDropMgr.ts"],"names":["DragDropMgr","Node","UITransform","Vec2","Rect","v3","Mat4","on","target","dragLayer","_dragDropEvent","_dragLayer","_dragLayerTrans","getComponent","EventType","TOUCH_START","onTouchBegin","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","TOUCH_CANCEL","onTouchCancel","off","event","preventSwallow","_isTouch","onDragBegin","pos","getUILocation","_tempTouchStartPos","set","touchNode","getTouchNode","_isCanDrag","chekIsCanDrag","_curTouchNode","_isDragging","Math","abs","x","y","_dragNode","parent","_dragData","creatDragNode","dragNode","position","convertToNodeSpaceAR","onDrag","delta","getUIDelta","add","onDragMove","onDragEnd","onDragCancel","resultCont","tempCont","i","_canDropNodeList","length","isIntersects","onDrop","touchPos","targetTrans","targetBox","index","_canDragNodeList","activeInHierarchy","getBoundingBoxToWorld","contains","dargNode","dropNode","dragBox","getWorldBox","dropBox","intersects","node","getWorldMatrix","_tempWorldMatrix","fromSRT","_tempLocalMatrix","getRotation","getPosition","getScale","trans","box","anchorPoint","width","height","multiply","transformMat4","addDragNode","indexOf","push","removeDragNode","splice","addDropNode","removeDropNode","idx","clearAllDropNode","clearAllDragNode","clear"],"mappings":"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","sourcesContent":["import { Node, EventTouch, UITransform, Vec2, Vec3, Rect, v3, Mat4} from \"cc\";\r\nexport interface IDragData <T = any> {\r\n    /**\r\n     * 拖拽目标\r\n     */\r\n    dragNode: Node;\r\n    /**\r\n     * 拖拽目标原坐标\r\n     */\r\n    dragNodePos?: Vec3;\r\n    /** \r\n     * 拖拽父节点\r\n     */\r\n    dragParentNode?: Node;\r\n    /**\r\n     * 是否使用代理(代理就instantiate一个节点作为拖拽节点)\r\n     */\r\n    isAgent?:boolean;\r\n    /**\r\n     * 拖拽数据\r\n     */\r\n    data?: T;\r\n}\r\nexport interface IDragDropEvent {\r\n    /**\r\n     * 拖拽开始\r\n     * @param event \r\n     */\r\n    onDragBegin?(event: EventTouch): void;\r\n\r\n    /**\r\n     * 拖拽移动\r\n     * @param event \r\n     */\r\n    onDragMove?(event: EventTouch): void;\r\n\r\n    /**\r\n     * 拖拽结束\r\n     * @param event \r\n     */\r\n    onDragEnd?(event: EventTouch): void;\r\n    \r\n    /**\r\n     * 拖拽取消\r\n     * @param event \r\n     */\r\n    onDragCancel?(event: EventTouch): void;\r\n\r\n    /**\r\n     * 检查目标是否可拖拽\r\n     * @param node 触摸节点\r\n     */\r\n    chekIsCanDrag(node: Node): boolean;\r\n\r\n    /**\r\n     * 创建拖拽目标\r\n     * @param node 拖拽目标()\r\n     */\r\n    creatDragNode(node:Node): IDragData;\r\n\r\n    /**\r\n     * 拖拽\r\n     * @param dragData 拖拽数据\r\n     */\r\n    onDrag?(dragData:IDragData): void;\r\n\r\n    /**\r\n     * 放下\r\n     * @param dropNode 放下的节点\r\n     * @param dragData 拖拽数据\r\n     */\r\n    onDrop(dropNode: Node, dragData:IDragData): void;\r\n\r\n    \r\n}\r\n\r\n/**\r\n * 拖拽管理器\r\n */\r\nexport class DragDropMgr {\r\n    private static _dragDropEvent: IDragDropEvent;//拖拽接口监听者\r\n    private static _dragData: IDragData = null; //拖拽节点数据\r\n    private static _isCanDrag: boolean = false; //临时记录触摸的节点是否可拖拽\r\n    private static _dragNode: Node = null; //拖拽节点\r\n    private static _curTouchNode: Node = null; //当前触摸节点\r\n    private static _canDropNodeList: Node[] = []; //可放下节点列表\r\n    private static _canDragNodeList: Node[] = []; //可拖拽节点列表\r\n    private static _dragLayer: Node = null; //拖拽层\r\n    private static _dragLayerTrans: UITransform = null; //拖拽层变换组件\r\n    private static _tempTouchStartPos: Vec2 = new Vec2(); //临时记录开始触摸位置\r\n    private static _isTouch: boolean = false; //是否有触摸\r\n    private static _isDragging: boolean = false; //是否拖动中\r\n    private static _tempLocalMatrix: Mat4 = new Mat4(); //临时记录节点的本地矩阵\r\n    private static _tempWorldMatrix: Mat4 = new Mat4(); //临时记录节点的世界矩阵\r\n\r\n    /**\r\n     * 注册监听\r\n     * @param target 监听者\r\n     * @param dragLayer 拖拽层\r\n     */\r\n    public static on(target: IDragDropEvent, dragLayer: Node): void {\r\n        this._dragDropEvent = target;\r\n        this._dragLayer = dragLayer;\r\n        this._dragLayerTrans = dragLayer.getComponent(UITransform);\r\n        this._dragLayer.on(Node.EventType.TOUCH_START, this.onTouchBegin, this);\r\n        this._dragLayer.on(Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n        this._dragLayer.on(Node.EventType.TOUCH_END, this.onTouchEnd, this);\r\n        this._dragLayer.on(Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this);\r\n    }\r\n\r\n    /**\r\n     * 移除监听\r\n     * @param target \r\n     */\r\n    public static off(target: IDragDropEvent): void {\r\n        this._dragLayer.off(Node.EventType.TOUCH_START, this.onTouchBegin, this);\r\n        this._dragLayer.off(Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n        this._dragLayer.off(Node.EventType.TOUCH_END, this.onTouchEnd, this);\r\n        this._dragLayer.off(Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this);\r\n    }\r\n\r\n    private static onTouchBegin(event: EventTouch): void {\r\n        event.preventSwallow = true;\r\n        this._isTouch = true;\r\n        this._dragDropEvent?.onDragBegin?.(event);\r\n        let pos: Vec2 = event.getUILocation();\r\n        this._tempTouchStartPos.set(pos);\r\n        let touchNode: Node = this.getTouchNode(event);\r\n        //无触摸目标事件派发给渲染在下一层级的节点\r\n        if (!touchNode) {\r\n            return;\r\n        } \r\n        //console.log(\"----->\" + touchNode.name)\r\n        this._isCanDrag = this._dragDropEvent?.chekIsCanDrag(touchNode) ?? false;\r\n        //不可拖拽事件派发给渲染在下一层级的节点\r\n        if (!this._isCanDrag) {\r\n            //event.preventSwallow = true;\r\n            return;\r\n        }\r\n        //event.preventSwallow = false; //可以拖拽则吞噬掉事件\r\n        this._curTouchNode = touchNode;\r\n        this._isDragging = false;\r\n    }\r\n\r\n    private static onTouchMove(event: EventTouch): void {\r\n        if (this._isCanDrag) {\r\n            event.preventSwallow = false;//可拖拽则吞噬事件\r\n            if (!this._isDragging && this._isTouch) {\r\n                let pos = event.getUILocation();\r\n                //拖动一定范围才算是拖拽\r\n                if (Math.abs(this._tempTouchStartPos.x - pos.x) < 10 && \r\n                    Math.abs(this._tempTouchStartPos.y - pos.y) < 10) {\r\n                    return;\r\n                }\r\n                this._isDragging = true;\r\n            }\r\n            if (this._isDragging) {\r\n                //console.log(\"拖拽中----->\")\r\n                if (!this._dragNode || !this._dragNode.parent){\r\n                    this._dragData = this._dragDropEvent?.creatDragNode(this._curTouchNode);\r\n                    this._dragNode = this._dragData.dragNode;\r\n                    this._dragNode.parent = this._dragLayer;\r\n                    this._dragNode.position = this._dragLayerTrans.convertToNodeSpaceAR(v3(this._tempTouchStartPos.x, this._tempTouchStartPos.y));\r\n                    this._dragDropEvent?.onDrag(this._dragData);\r\n                    //console.log(\"添加拖拽节点----->\")\r\n                }\r\n                let delta = event.getUIDelta();\r\n                this._dragNode.position = this._dragNode.position.add(v3(delta.x, delta.y, 0));\r\n                this._dragDropEvent?.onDragMove?.(event);\r\n            }\r\n        } else {\r\n            event.preventSwallow = true;//无拖拽则传入事件下层节点\r\n        }\r\n    }\r\n\r\n    private static onTouchEnd(event: EventTouch): void {\r\n        //拖拽中则吞噬事件\r\n        if (this._isDragging) {\r\n            event.preventSwallow = false;\r\n            this._dragDropEvent?.onDragEnd?.(event);\r\n            this.onDragEnd();\r\n        } else {\r\n            event.preventSwallow = true;\r\n        }\r\n        this._isCanDrag = false;\r\n        this._isTouch = false;\r\n        this._isDragging = false;\r\n    }\r\n\r\n    private static onTouchCancel(event: EventTouch): void {\r\n        if (this._isDragging) {\r\n            event.preventSwallow = false;\r\n            this._dragDropEvent?.onDragCancel?.(event);\r\n            this.onDragEnd();\r\n        } else {\r\n            event.preventSwallow = true;\r\n        }\r\n        this._isCanDrag = false;\r\n        this._isTouch = false;\r\n        this._isDragging = false;\r\n    }\r\n\r\n    private static onDragEnd(): void {\r\n        if (!this._dragData || !this._dragNode) return;\r\n        let resultCont: Node = null;\r\n        let tempCont: Node;\r\n        for (let i = 0; i < this._canDropNodeList.length; i++) {\r\n            tempCont = this._canDropNodeList[i];\r\n            if (this.isIntersects(tempCont, this._dragNode)) {\r\n                resultCont = tempCont;\r\n                break;\r\n            }\r\n        }\r\n        this._dragDropEvent?.onDrop(resultCont, this._dragData);\r\n        this._dragNode = null;\r\n        this._dragData = null;\r\n    }\r\n\r\n    /**\r\n     * 获取触摸的目标节点\r\n     * @param event \r\n     * @returns \r\n     */\r\n    private static getTouchNode(event: EventTouch): Node {\r\n        let touchPos: Vec2 = event.getUILocation();\r\n        let pos = event.target.parent.getComponent(UITransform).convertToNodeSpaceAR(v3(touchPos.x, touchPos.y));\r\n        let target: Node;\r\n        let targetTrans: UITransform;\r\n        let targetBox: Rect;\r\n        for (let index = 0; index < this._canDragNodeList.length; index++) {\r\n            target = this._canDragNodeList[index];\r\n            if (!target.activeInHierarchy) continue;\r\n            targetTrans = target.getComponent(UITransform);\r\n            targetBox = targetTrans.getBoundingBoxToWorld();\r\n            if (targetBox.contains(touchPos)) {\r\n                //console.log(\"-------->\" + targetBox.width + \"----->\" + targetBox.height)\r\n                return target;\r\n            } \r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 判断是否相交\r\n     * @param dargNode 拖拽节点\r\n     * @param dropNode 放下节点\r\n     * @returns \r\n     */\r\n    private static isIntersects(dargNode: Node, dropNode: Node): boolean {\r\n        let dragBox: Rect = this.getWorldBox(dargNode);\r\n        let dropBox: Rect = this.getWorldBox(dropNode);\r\n        return dropBox.intersects(dragBox);\r\n    }\r\n\r\n    /**\r\n     * 获取节点的世界包围合\r\n     * @param node \r\n     * @returns \r\n     */\r\n    private static getWorldBox(node: Node): Rect {\r\n        node.parent.getWorldMatrix(this._tempWorldMatrix);\r\n        Mat4.fromSRT(this._tempLocalMatrix, node.getRotation(), node.getPosition(), node.getScale());\r\n        let trans: UITransform = node.getComponent(UITransform);\r\n        let box: Rect = new Rect(\r\n            -trans.anchorPoint.x * trans.width,\r\n            -trans.anchorPoint.y * trans.height,\r\n            trans.width,\r\n            trans.height,\r\n        );\r\n        Mat4.multiply(this._tempWorldMatrix, this._tempWorldMatrix, this._tempLocalMatrix);\r\n        box.transformMat4(this._tempWorldMatrix);\r\n        return box;\r\n    }\r\n\r\n    /**\r\n     * 添加一个拖拽节点\r\n     * @param node 拖拽目标\r\n     * @param clickEvent 目标的点击事件\r\n     * @returns \r\n     */\r\n    public static addDragNode(node: Node): void {\r\n        if (this._canDragNodeList.indexOf(node) >= 0) return;\r\n        this._canDragNodeList.push(node);\r\n    }\r\n\r\n    /**\r\n     * 移除一个拖拽节点\r\n     * @param node \r\n     */\r\n    public static removeDragNode(node: Node): void {\r\n        let index: number = this._canDragNodeList.indexOf(node);\r\n        if (index >= 0) {\r\n            this._canDragNodeList.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加放下放下节点\r\n     * @param node \r\n     */\r\n    public static addDropNode(node: Node): void {\r\n        this._canDropNodeList.push(node);\r\n    }\r\n\r\n    /**\r\n     * 移除放下节点\r\n     * @param node \r\n     */\r\n    public static removeDropNode(node: Node): void {\r\n        let idx = this._canDropNodeList.indexOf(node);\r\n        this._canDropNodeList.splice(idx, 1);\r\n    }\r\n\r\n    /**\r\n     * 清理全部放下节点\r\n     */\r\n    public static clearAllDropNode(): void {\r\n        this._canDropNodeList.length = 0;\r\n    }\r\n    \r\n    /**\r\n     * 清理全部拖拽节点\r\n     */\r\n    public static clearAllDragNode(): void {\r\n        this._canDragNodeList.length = 0;\r\n    }\r\n    \r\n    /**\r\n     * 清理全部\r\n     */\r\n    public static clear(): void {\r\n        this.clearAllDragNode();\r\n        this.clearAllDropNode();\r\n        this.off(null);\r\n        this.onDragEnd();\r\n        this._dragDropEvent = null;\r\n        this._isCanDrag = false;\r\n        this._isDragging = false;\r\n        this._isTouch = false;\r\n    }\r\n\r\n    \r\n}"]}