{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/login/LoginPanel.ts"],"names":["LoginPanel","EditBox","Input","Label","Panel","Selector","LocalStorage","CfgMgr","AudioMgr","AudioDefine","prefab","selector","input","loginHost","loginServer","loginPort","callback","onLoad","find","on","EventType","TOUCH_END","onLogin","GetString","GetNumber","serverlist","Get","list","server","push","string","Login","Init","item","data","desc","Desc","label","getComponent","node","onSelect","str","src","Server","Port","SetString","onShow","Play","flush","callBack","onHide","args","StopChannel","Channels","channel","userCode","SetNumber","window"],"mappings":"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","sourcesContent":["import { director, EditBox, Input, Label, Node } from \"cc\";\r\nimport { Panel } from \"../../manager/GameRoot\";\r\nimport { Selector } from \"../../component/Selector\";\r\nimport LocalStorage from \"../../utils/LocalStorage\";\r\nimport { CfgMgr } from \"../../manager/CfgMgr\";\r\nimport { AudioMgr } from \"../../manager/AudioMgr\";\r\nimport { AudioDefine } from \"../../define/AudioDefine\";\r\n\r\nexport class LoginPanel extends Panel {\r\n    protected prefab: string = \"prefabs/login/LoginPanel\";\r\n\r\n    private selector: Selector;\r\n    private input: EditBox;\r\n    private loginHost: string;\r\n    private loginServer: string;\r\n    private loginPort: number;\r\n    private callback: Function;\r\n    protected async onLoad() {\r\n        this.selector = this.find(\"frame/Selector\", Selector);\r\n        this.input = this.find(\"frame/input\", EditBox);\r\n        this.find(\"frame/loginBtn\").on(Input.EventType.TOUCH_END, this.onLogin, this);\r\n\r\n        this.loginHost = LocalStorage.GetString(\"loginHost\", \"http://192.168.0.103:8002/user/v1/login/wec\");\r\n        this.loginServer = LocalStorage.GetString(\"loginServer\", \"192.168.0.103\");\r\n        this.loginPort = LocalStorage.GetNumber(\"loginPort\", 7000);\r\n        let serverlist = CfgMgr.Get(\"server_list\");\r\n        let list = [];\r\n        for (let server of serverlist) {\r\n            list.push(server);\r\n        }\r\n        this.selector.string = this.loginHost || list[0]?.Login;\r\n        this.selector.Init(list, (item: Node, data: any) => {\r\n            let desc = data.Login;\r\n            if (data.Desc) desc = \"(\" + data.Desc + \")\" + data.Login;\r\n            let label = item.getComponent(Label);\r\n            if (!label) {\r\n                item.getComponent(EditBox).string = desc;\r\n            } else {\r\n                label.string = desc;\r\n            }\r\n        });\r\n        this.selector.node.on('select', this.onSelect, this);\r\n\r\n        let str = LocalStorage.GetString(\"userCode\");\r\n        if (str) {\r\n            this.input.string = str;\r\n        }\r\n\r\n    }\r\n\r\n    protected onSelect(src: any, data: any) {\r\n        this.loginHost = data.Login;\r\n        this.loginServer = data.Server;\r\n        this.loginPort = data.Port;\r\n        LocalStorage.SetString(\"loginHost\", this.loginHost);\r\n        LocalStorage.SetString(\"loginServer\", this.loginServer);\r\n    }\r\n\r\n    protected onShow(): void {\r\n        AudioMgr.Play(\"audio/bgm/mus_map_V2_NO_PERCS_20210902\", 0);\r\n    }\r\n    public flush(callBack: Function): void {\r\n        this.callback = callBack;\r\n    }\r\n    protected onHide(...args: any[]): void {\r\n        AudioMgr.StopChannel(AudioDefine.Channels[\"audio/bgm/*\"].channel);\r\n    }\r\n\r\n    onLogin() {\r\n        let userCode = this.input.string;\r\n        if (!userCode) {\r\n\r\n        } else {\r\n            LocalStorage.SetString(\"userCode\", userCode);\r\n            LocalStorage.SetString(\"loginServer\", this.loginServer);\r\n            LocalStorage.SetNumber(\"loginPort\", this.loginPort);\r\n            window['usercode'] = userCode;\r\n            this.callback(this.loginHost, this.loginServer, this.loginPort, userCode);\r\n        }\r\n    }\r\n}"]}