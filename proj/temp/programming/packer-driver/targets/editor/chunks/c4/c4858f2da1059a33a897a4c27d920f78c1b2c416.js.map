{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/trade/item/TradePanelItem.ts"],"names":["_decorator","Color","Component","find","Input","Label","path","Sprite","SpriteFrame","Tween","tween","TweenSystem","UITransform","Widget","ResMgr","folder_item","Session","OrderStateType","SOrderType","PlayerData","CfgMgr","ThingTypeName","Utils","TradeCreateOrderPanel","DateUtils","Req","Route","Card","BagItem","Goto","ccclass","property","TradePanelItem","start","update","deltaTime","SetData","_data","selectType","select_thing_type","item","node","bagItem","getChildByName","msgNode","cardItem","cardBg","priceBg","layout","name","getComponent","count","playerName","icon","time","priceicon","price","btnBuy","btnSell","off","EventType","TOUCH_END","active","num","width1","width2","parent","Item","data","quantityRemaining","quantity","groupNum","itemData","type","id","itemId","item_data","addComponent","setThing","itemCfg","Getitem","string","ItemName","ToFixed","BattleCard","status","card_data","card","GetCard","cardId","CardName","setContentSize","children","updateAlignment","setPosition","position","x","y","btnspr","makerId","player","playerId","LoadResAbSub","res","spriteFrame","labelcolorValue","color","fromHEX","orderType","on","console","log","BUY","SELL","item_icon","currency","Icon","join","FormatTime","expiresAt","ServerTime","instance","ActionManager","getNumberOfRunningActionsInTarget","stopAllByTarget","repeatForever","delay","call","SetOrderData","empty","order_type","code","copyCodeBtn","cost","costTitle","removeBtn","item_order_data","card_order_data","url","quality","cardCfg","setPayItemIcon","sessionData","orderId","Send","cancelcardData","cfg","GetTradeData","Fees","AddFees","Show","spr_icon","icon1","icon2"],"mappings":"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","sourcesContent":["import { _decorator, Color, Component, find, Input, Label, Node, path, Size, Sprite, SpriteFrame, System, Tween, tween, TweenSystem, UITransform, Widget } from 'cc';\r\nimport { ResMgr, folder_common, folder_item } from '../../../manager/ResMgr';\r\nimport { Session } from '../../../net/Session';\r\nimport { OrderStateType, SOrderType } from '../../player/PlayerStruct';\r\nimport { PlayerData } from '../../player/PlayerData';\r\nimport { BuyPanel } from '../BuyPanel';\r\nimport { CfgMgr, ThingTypeName } from '../../../manager/CfgMgr';\r\nimport { Utils } from '../../../utils/Utils';\r\nimport { TradeCreateOrderPanel } from '../TradeCreateOrderPanel';\r\nimport { DateUtils } from '../../../utils/DateUtils';\r\nimport proto, { Req, Route } from '../../../net/Protocol';\r\nimport { Card } from '../../cards/Card';\r\nimport { BagItem } from '../../bag/BagItem';\r\nimport { Goto } from '../../../DL';\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('TradePanelItem')\r\nexport class TradePanelItem extends Component {\r\n    start() {\r\n\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n\r\n    public SetData(_data: proto.base.IMarketItemOrder | proto.base.IMarketCardOrder, selectType: number, select_thing_type:ThingTypeName) {\r\n        let item = this.node;\r\n        let bagItem = item.getChildByName(`BagItem`);\r\n        let msgNode = item.getChildByName(`msgItem`);\r\n        let cardItem = item.getChildByName(`Cards`);\r\n        let cardBg = item.getChildByName(`cardBg`);\r\n        let priceBg = find(`priceBg`, msgNode)\r\n        let layout = find(`priceBg/layout`, msgNode)\r\n\r\n        let name = find(`priceBg/Name`, msgNode).getComponent(Label);\r\n        let count = find(`priceBg/layout/CountLayout/Count`, msgNode).getComponent(Label);\r\n        let playerName = find(`playerName`, msgNode).getComponent(Label);\r\n        let icon = find(`icon`, msgNode).getComponent(Sprite);\r\n        let time = find(`time`, msgNode).getComponent(Label);\r\n\r\n        let priceicon = find(`priceBg/layout/PriceLayout/caizuan`, msgNode).getComponent(Sprite);\r\n        let price = find(`priceBg/layout/PriceLayout/Price`, msgNode).getComponent(Label);\r\n        let btnBuy = item.getChildByName(`BtnBuy`);\r\n        let btnSell = item.getChildByName(`BtnSell`);\r\n        btnBuy.off(Input.EventType.TOUCH_END);\r\n        btnSell.off(Input.EventType.TOUCH_END);\r\n        bagItem.active = false\r\n        cardItem.active = false;\r\n        cardBg.active = false;\r\n        let num = 1\r\n        let width1 = 500\r\n        let width2 = 356\r\n        count.node.parent.active = true;\r\n        if(select_thing_type == ThingTypeName.Item){   \r\n            let data: proto.base.IMarketItemOrder = _data as proto.base.IMarketItemOrder;\r\n            if (!data) return;\r\n            bagItem.active = true;\r\n            num = data.quantityRemaining / (data.quantity / data.groupNum) //剩余总数量 / （总数量/总组数） = 剩余组数\r\n            let itemData: proto.base.IThing = { type: ThingTypeName.Item, item: { id: data.itemId, count: data.quantityRemaining } };\r\n            let item_data = bagItem.getComponent(BagItem);\r\n            item_data = item_data ? item_data : bagItem.addComponent(BagItem);\r\n            item_data.setThing(itemData);\r\n            let itemCfg = CfgMgr.Getitem(itemData.item.id);\r\n            name.string = itemCfg.ItemName;\r\n            price.string = `${Utils.ToFixed(data.price / 10000, 2)}`;\r\n        }else if(select_thing_type == ThingTypeName.BattleCard){\r\n            cardItem.active = true;\r\n            cardBg.active = true;\r\n            count.node.parent.active = false;\r\n            let data: proto.base.IMarketCardOrder = _data as proto.base.IMarketCardOrder;\r\n            if (!data) return;\r\n            \r\n            num = data.status == OrderStateType.active ? 1 : 0 //只有激活状态可以购买\r\n            let card_data = cardItem.getComponent(Card);\r\n            card_data = card_data ? card_data : cardItem.addComponent(Card);\r\n            card_data.SetData(data.card);    \r\n            let itemCfg = CfgMgr.GetCard(data.card.cardId);\r\n            name.string = itemCfg.CardName;\r\n            price.string = `${Utils.ToFixed(data.price / 10000, 2)}`;\r\n            width1 = 340;\r\n            width2 = 320;\r\n        }\r\n        btnBuy.getComponent(UITransform).setContentSize(width1, 58)\r\n        btnBuy.children[0].getComponent(Widget).updateAlignment();\r\n\r\n        btnSell.getComponent(UITransform).setContentSize(width1, 58)\r\n        btnSell.children[0].getComponent(Widget).updateAlignment();\r\n\r\n        priceBg.getComponent(UITransform).setContentSize(width2, 46)\r\n        priceBg.getComponent(Widget).updateAlignment();\r\n        name.node.getComponent(Widget).updateAlignment();\r\n        layout.setPosition(name.node.position.x, layout.position.y)\r\n        \r\n        \r\n        let btnspr= (_data.makerId == PlayerData.player.playerId || num == 0) ? \"btn2\" : \"btn1\"\r\n        ResMgr.LoadResAbSub(\"sheets/trade/\" + btnspr + \"/spriteFrame\", SpriteFrame,res=>{\r\n            btnBuy.getComponent(Sprite).spriteFrame = res;\r\n            btnSell.getComponent(Sprite).spriteFrame = res\r\n        } );  \r\n        let labelcolorValue = (_data.makerId == PlayerData.player.playerId || num == 0) ? \"#000000\" : \"#ffffff\"\r\n        btnBuy.getChildByName(\"Label\").getComponent(Label).color = (new Color()).fromHEX(labelcolorValue); \r\n        btnSell.getChildByName(\"Label\").getComponent(Label).color = (new Color()).fromHEX(labelcolorValue); \r\n        if (_data.orderType == `sell`) {\r\n            btnBuy.active = true;\r\n            btnSell.active = false;\r\n            btnBuy.on(Input.EventType.TOUCH_END, () => {\r\n                //打开购买页面\r\n                if (_data.makerId != PlayerData.player.playerId && num != 0) {\r\n                    console.log(_data)\r\n                    Goto(\"BuyPanel\", SOrderType.BUY, _data);\r\n                }\r\n            })\r\n        } else {\r\n            btnBuy.active = false;\r\n            btnSell.active = true;\r\n            btnSell.on(Input.EventType.TOUCH_END, () => {\r\n                //打开出售页面\r\n                if (_data.makerId != PlayerData.player.playerId && num != 0) {\r\n                    Goto(\"BuyPanel\", SOrderType.SELL, _data);\r\n                }\r\n            })\r\n        }\r\n        count.string = `${num}`;     \r\n        let item_icon =  CfgMgr.Getitem(_data.currency).Icon   \r\n        ResMgr.LoadResAbSub(path.join(folder_item, item_icon, \"spriteFrame\"), SpriteFrame, res=>{\r\n            priceicon.spriteFrame = res;\r\n        });;\r\n        ResMgr.LoadResAbSub(path.join(\"sheets/trade\", _data.orderType, \"spriteFrame\"), SpriteFrame, res=>{\r\n            icon.spriteFrame = res\r\n        });\r\n        playerName.string = _data.makerId;\r\n        time.string = `剩余时间：${DateUtils.FormatTime(_data.expiresAt - DateUtils.ServerTime)}`;\r\n        if (TweenSystem.instance.ActionManager.getNumberOfRunningActionsInTarget(item) > 0) {\r\n            Tween.stopAllByTarget(item);\r\n        }\r\n        tween(item).repeatForever(tween().delay(1).call(() => {\r\n            if(_data.expiresAt - DateUtils.ServerTime <= 0){\r\n                Tween.stopAllByTarget(item);\r\n                ResMgr.LoadResAbSub(\"sheets/trade/btn2/spriteFrame\", SpriteFrame,res=>{\r\n                    btnBuy.getComponent(Sprite).spriteFrame = res;\r\n                    btnSell.getComponent(Sprite).spriteFrame = res\r\n                } ); \r\n            }else{\r\n                time.string = `剩余时间：${DateUtils.FormatTime(_data.expiresAt - DateUtils.ServerTime)}`;\r\n            }\r\n        })).start();\r\n    }\r\n\r\n    public SetOrderData(_data: proto.base.IMarketItemOrder | proto.base.IMarketCardOrder, selectType: number) {\r\n        let item = this.node;\r\n        let empty = item.getChildByName(`empty`);\r\n        let bagItem = item.getChildByName(`BagItem`);\r\n        let cardBg = item.getChildByName(`cardBg`);\r\n        let cardItem = item.getChildByName(\"Cards\");\r\n        let msgNode = item.getChildByName(`msgItem`);\r\n        \r\n        if (_data) {\r\n            empty.active = false;\r\n            bagItem.active = false;\r\n            cardItem.active = false;\r\n            cardBg.active = false\r\n            msgNode.active = true;\r\n            let order_type:ThingTypeName;\r\n            if((_data as proto.base.IMarketCardOrder).card){\r\n                order_type = ThingTypeName.BattleCard\r\n                cardBg.active = true;\r\n                cardItem.active = true;\r\n            }else{\r\n                order_type = ThingTypeName.Item\r\n                bagItem.active = true;\r\n            }\r\n\r\n            let name = find(`name`, msgNode).getComponent(Label);\r\n            let count = find(`countLayout/count`, msgNode).getComponent(Label);\r\n            let time = find(`time`, msgNode).getComponent(Label);\r\n            let price = find(`sellNode/priceLayout/Price`, msgNode).getComponent(Label);\r\n            let code = find(`code`, msgNode).getComponent(Label);\r\n            let copyCodeBtn = find(`copyCodeBtn`, msgNode);\r\n            let cost = find(`costNode/costLayout/cost`, msgNode).getComponent(Label);\r\n            let costTitle = find(`costNode/costTitle`, msgNode);\r\n            let removeBtn = find(`removeBtn`, msgNode);\r\n            removeBtn.off(Input.EventType.TOUCH_END);\r\n\r\n            let data = _data\r\n            if (!data) return;\r\n            let num = 1;\r\n            let itemData: proto.base.IThing\r\n            if(order_type == ThingTypeName.Item){\r\n                let item_order_data = data as proto.base.IMarketItemOrder\r\n                num = item_order_data.quantityRemaining / (item_order_data.quantity / item_order_data.groupNum) //剩余总数量 / （总数量/总组数） = 剩余组数\r\n                itemData = { type: ThingTypeName.Item, item: { id: item_order_data.itemId, count: item_order_data.quantity } };\r\n                let item_data = bagItem.getComponent(BagItem);\r\n                item_data = item_data ? item_data : bagItem.addComponent(BagItem);\r\n                item_data.setThing(itemData);\r\n                let itemCfg = CfgMgr.Getitem(itemData.item.id);\r\n                name.string = itemCfg.ItemName;\r\n            }else{\r\n                let card_order_data = data as proto.base.IMarketCardOrder\r\n                itemData = { type: ThingTypeName.BattleCard, card: card_order_data.card};\r\n                let card_data = cardItem.getComponent(Card);\r\n                card_data = card_data ? card_data : cardItem.addComponent(Card);\r\n                card_data.SetData(itemData.card);\r\n                let url = path.join(\"sheets/cardframe/\", \"card_bg\" + itemData.card.quality, \"spriteFrame\")\r\n                ResMgr.LoadResAbSub(url, SpriteFrame,res=>{\r\n                    cardBg.getComponent(Sprite).spriteFrame = res;\r\n                })\r\n                let cardCfg = CfgMgr.GetCard(itemData.card.cardId);\r\n                name.string = cardCfg.CardName;\r\n            }\r\n           \r\n\r\n            count.string = `${num}`;\r\n            this.setPayItemIcon(_data, msgNode)\r\n            price.string = `${Utils.ToFixed(data.price / 10000, 2)}`;\r\n            removeBtn.on(Input.EventType.TOUCH_END, () => {\r\n                if(order_type == ThingTypeName.Item){\r\n                    let sessionData = new Req['market.protocol.cancelitemorder']();\r\n                    sessionData.orderId = data.orderId;\r\n                    Session.Send(Route['market.protocol.cancelitemorder'], sessionData);\r\n                }else if(order_type == ThingTypeName.BattleCard){\r\n                    let cancelcardData = new Req['market.protocol.cancelcardorder']();\r\n                    cancelcardData.orderId = data.orderId;\r\n                    Session.Send(Route['market.protocol.cancelcardorder'], cancelcardData);\r\n                }\r\n            })  \r\n            code.string = `${_data.orderId}`\r\n            if (_data.orderType == `sell`) {\r\n                let cfg = CfgMgr.GetTradeData(itemData)\r\n                costTitle.getComponent(Label).string = \"损耗\";   \r\n                cost.string = `${Utils.ToFixed(num * data.price / 10000 * cfg.Fees / 10000 + cfg.AddFees / 10000, 2)}`          \r\n            } else {\r\n                costTitle.getComponent(Label).string = \"剩余预付\"\r\n                cost.string = `${Utils.ToFixed(num * data.price / 10000, 2)}`\r\n            }\r\n\r\n            // copyCodeBtn.on(Input.EventType.TOUCH_END, () => {\r\n            //     // Goto(\"TradePanel.ins.SetCopyCode\",_data.orderId);\r\n            //     CopyToClip(_data.orderId, (desc: string) => {\r\n            //         if (desc == _data.orderId) {\r\n            //             MsgPanel.Show(\"已复制到粘贴板\");\r\n            //         }\r\n            //     });\r\n            // })\r\n\r\n            time.string = `订单倒计时${DateUtils.FormatTime(data.expiresAt - DateUtils.ServerTime)}`;\r\n            if (TweenSystem.instance.ActionManager.getNumberOfRunningActionsInTarget(item) > 0) {\r\n                Tween.stopAllByTarget(item);\r\n            }\r\n            tween(item).repeatForever(tween().delay(1).call(() => {\r\n                time.string = `订单倒计时${DateUtils.FormatTime(data.expiresAt - DateUtils.ServerTime)}`;\r\n            })).start();\r\n        } else {\r\n            empty.active = true;\r\n            bagItem.active = false;\r\n            msgNode.active = false;\r\n            empty.off(Input.EventType.TOUCH_END);\r\n            empty.on(Input.EventType.TOUCH_END, (() => {\r\n                console.log(\"打开订单页面>>>\", selectType);\r\n                TradeCreateOrderPanel.Show(selectType);\r\n            }))\r\n        }\r\n    }\r\n\r\n    private async setPayItemIcon(_data: proto.base.IMarketItemOrder | proto.base.IMarketCardOrder, msgNode: Node) {\r\n        let item_icon =  CfgMgr.Getitem(_data.currency).Icon\r\n        let spr_icon: SpriteFrame = await ResMgr.LoadResAbSub(path.join(folder_item, item_icon, \"spriteFrame\"), SpriteFrame);\r\n        let icon1 = find(`sellNode/priceLayout/caizuan`, msgNode).getComponent(Sprite);\r\n        let icon2 = find(`costNode/costLayout/caizuan`, msgNode).getComponent(Sprite);\r\n        if (icon1) icon1.spriteFrame = spr_icon;\r\n        if (icon2) icon2.spriteFrame = spr_icon;\r\n    }\r\n}\r\n\r\n\r\n"]}