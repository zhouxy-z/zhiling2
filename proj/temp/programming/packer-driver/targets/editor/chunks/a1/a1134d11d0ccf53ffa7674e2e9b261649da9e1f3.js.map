{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/fight/display/TestSkill.ts"],"names":["EffectTarget","_decorator","CCFloat","Component","find","instantiate","Node","ParticleSystem","Prefab","RenderRoot2D","sp","Sprite","UIMeshRenderer","AffectType","EffectSet","TargetType","Second","ResMgr","ccclass","property","requireComponent","TestSkill","type","tooltip","visible","prefab","undefined","efflist","attacker","eventProxy","hasLoop","lastSet","$targetSet","onLoad","comps","getComponentsInChildren","i","len","length","comp","Skeleton","customMaterial","uuid","depth_material_uuid","getDepthMaterial","node","getComponent","addComponent","on","onTigger","args","parent","testTargetSet","my","ad","area1","area2","mytag","adtag","push","params","concat","multipleTarget","testEnemys","isLoop","start","GetEffects","Play","attackers","targets","Test","e","skillpool","pop","destroy","queue","skill","copy","loop","addChild","console","log","target","list","set","root","last","times","bind","multipleDelay","sets","Reset","children","hasTigger","forEach","value","lst","nextEffects","shift","k","tigger","tiggerType","all","tiggerAffect","All","error","update","deltaTime","clone","myArea","myDeck","myHand","myDrop","myDel","myEnergy","adArea","adDeck","adHand","adDrop","adDel","adEnergy","constructor","Math","max","min","skillId","route","seed","key","obj","instId","name"],"mappings":"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","sourcesContent":["import { _decorator, CCFloat, Component, find, instantiate, Node, ParticleSystem, Prefab, RenderRoot2D, sp, Sprite, UIMeshRenderer } from 'cc';\r\nimport { AffectType, EffectSet, TargetSet, TargetType } from './EffectSet';\r\nimport { Second } from '../../../utils/Utils';\r\nimport { ResMgr } from '../../../manager/ResMgr';\r\nimport { ISceneEntry } from './SceneCard';\r\nconst { ccclass, property, requireComponent } = _decorator;\r\n\r\n@ccclass('TestSkill')\r\n@requireComponent(RenderRoot2D)\r\nexport class TestSkill extends Component {\r\n\r\n    @property({ type: Prefab, tooltip: \"设置预制体进行多发测试\" })\r\n    prefab: Prefab = undefined;\r\n\r\n    @property({ type: CCFloat, tooltip: \"多发延迟\", visible() { return this.prefab != undefined } })\r\n    multipleDelay: number = 0;\r\n\r\n    @property({ type: [Node], tooltip: \"测试多目标\", visible() { return this.prefab != undefined } })\r\n    multipleTarget: Node[] = [];\r\n\r\n    @property({ tooltip: \"循环测试\" })\r\n    loop = true;\r\n\r\n    protected efflist: EffectSet[];\r\n    protected attacker: Node;\r\n    eventProxy: Node;\r\n\r\n    protected async onLoad() {\r\n\r\n        // 处理2d组件在3d场景的深度渲染问题\r\n        let comps = this.getComponentsInChildren(Component);\r\n        for (let i = 0, len = comps.length; i < len; i++) {\r\n            let comp = comps[i];\r\n            if (comp instanceof sp.Skeleton || comp instanceof Sprite) {\r\n                if (!comp.customMaterial || comp.customMaterial.uuid != ResMgr.depth_material_uuid) {\r\n                    comp.customMaterial = await ResMgr.getDepthMaterial();\r\n                }\r\n                // if(!comp.getComponent(RenderRoot2D))comp.addComponent(RenderRoot2D);\r\n            } else if (comp instanceof ParticleSystem) {\r\n                if (!comp.node.getComponent(UIMeshRenderer)) {\r\n                    comp.node.addComponent(UIMeshRenderer);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.node.on(\"tigger\", this.onTigger, this);\r\n    }\r\n    protected onTigger(...args) {\r\n        if (!this.node.parent) return;\r\n        // this.node.parent.emit(\"tigger\", ...args);\r\n    }\r\n    static testEnemys: Node[];\r\n\r\n    protected hasLoop = false;\r\n    protected lastSet: EffectSet;\r\n    protected $targetSet: EffectTarget;\r\n    protected get testTargetSet() {\r\n        // if (!this.$targetSet || !this.$targetSet.length) {\r\n        const my = [\"FightScene/myDeck\", \"FightScene/myHand\", \"FightScene/myDrop\", \"FightScene/myDel\", \"FightScene/ui/myEnergy\"];\r\n        const ad = [\"FightScene/adDeck\", \"FightScene/adHand\", \"FightScene/adDrop\", \"FightScene/adDel\", \"FightScene/ui/adEnergy\"];\r\n        let area1: Node[] = [find(\"FightScene/area0\")['hitTest1'], find(\"FightScene/area1\")['hitTest1'], find(\"FightScene/area2\")['hitTest1']];\r\n        let area2: Node[] = [find(\"FightScene/area0\")['hitTest2'], find(\"FightScene/area1\")['hitTest2'], find(\"FightScene/area2\")['hitTest2']];\r\n        let mytag: any[] = [area1], adtag: any[] = [area2];\r\n        for (let i = 0; i < my.length; i++) {\r\n            mytag.push(find(my[i]));\r\n            adtag.push(find(ad[i]));\r\n        }\r\n        let params = mytag.concat(adtag);\r\n        if (this.multipleTarget && this.multipleTarget.length) {\r\n            this.$targetSet = new EffectTarget(find(\"attacker\"), this.multipleTarget, ...params);\r\n        } else {\r\n            this.$targetSet = new EffectTarget(find(\"attacker\"), TestSkill.testEnemys.concat(), ...params);\r\n        }\r\n        // }\r\n        return this.$targetSet;\r\n    }\r\n\r\n    get isLoop() {\r\n        return this.hasLoop;\r\n    }\r\n\r\n    start() {\r\n        this.GetEffects();\r\n    }\r\n\r\n    Play(attackers: Node[], targets: Node[]) {\r\n\r\n    }\r\n\r\n    static skillpool: TestSkill[] = [];\r\n    async Test(e?: any) {\r\n        if (e) await Second(0.5);\r\n        while (TestSkill.skillpool.length) {\r\n            TestSkill.skillpool.pop().node.destroy();\r\n        }\r\n        let len = this.testTargetSet.length;\r\n        if (this.prefab && len > 1) {\r\n            let queue: TestSkill[] = [this];\r\n            let parent = this.node.parent;\r\n            for (let i = 0; i < len; i++) {\r\n                let skill = queue.pop();\r\n                let copy = false;\r\n                if (!skill) {\r\n                    copy = true;\r\n                    skill = instantiate(this.prefab).getComponent(TestSkill);\r\n                    TestSkill.skillpool.push(skill);\r\n                    skill.loop = false;\r\n                    parent.addChild(skill.node);\r\n                    console.log(\"instantiate\", skill);\r\n                }\r\n                let target = this.testTargetSet.pop(1);\r\n                let list = skill.GetEffects();\r\n                for (let set of list) {\r\n                    if (set && set.root) {\r\n                        if (set.last) set.times = 1;\r\n                        if (set.last && i == len - 1) {\r\n                            set.Play(this.Test.bind(this), target, 0, copy);\r\n                        } else {\r\n                            set.Play(undefined, target, 0, copy);\r\n                        }\r\n                    }\r\n                }\r\n                if (this.multipleDelay > 0) await Second(this.multipleDelay);\r\n            }\r\n        } else {\r\n            let targets = this.testTargetSet.pop(1);\r\n            this.GetEffects();\r\n            let sets: EffectSet[] = [];\r\n            for (let set of this.efflist) {\r\n                if (set) {\r\n                    set.Reset();\r\n                    if (set.last) set.times = 1;\r\n                    if (set.root) {\r\n                        sets.push(set);\r\n                    }\r\n                }\r\n            }\r\n            for (let set of sets) {\r\n                set.Play(this.Test.bind(this), targets);\r\n            }\r\n        }\r\n    }\r\n\r\n    GetEffects(parent?: Node) {\r\n        if (this.efflist) return this.efflist;\r\n        this.efflist = [];\r\n        let children = this.node.children;\r\n        let hasTigger = false;\r\n        let sets: { [uuid: string]: EffectSet } = {};\r\n        this.lastSet = undefined;\r\n        children.forEach(value => {\r\n            let set: EffectSet = value.getComponent(EffectSet);\r\n            if (parent) set.parent = parent;\r\n            if (set.root) {\r\n                sets[set.node.uuid] = set;\r\n                let lst = set.nextEffects?.concat?.() || [];\r\n                while (lst.length) {\r\n                    set = lst.shift().getComponent(EffectSet);\r\n                    if (set && !sets[set.node.uuid]) {\r\n                        sets[set.node.uuid] = set;\r\n                        if (set?.nextEffects?.length) lst.push(...set.nextEffects);\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        for (let k in sets) {\r\n            let set = sets[k];//child.getComponent(EffectSet);\r\n            if (set) {\r\n                if (set.isLoop) this.hasLoop = true;\r\n                if (set.tigger && set.tiggerType) {\r\n                    hasTigger = true;\r\n                }\r\n                if (!this.lastSet) {\r\n                    this.lastSet = set;\r\n                } else if (!this.lastSet && !set.nextEffects?.length) {\r\n                    this.lastSet = set;\r\n                }\r\n                this.efflist.push(set);\r\n            }\r\n        }\r\n        if (!hasTigger) {\r\n            if (this.lastSet) {\r\n                this.lastSet.tigger = true;\r\n                this.lastSet.tiggerType = TargetType.all;\r\n                this.lastSet.tiggerAffect = AffectType.All;\r\n            } else {\r\n                console.error(\"必须指定结束特效！\");\r\n            }\r\n        }\r\n        // if (!hasTigger && lastSet) {\r\n        //     let node = new Node();\r\n        //     lastSet.node.parent.addChild(node);\r\n        //     let lastSet = node.addComponent(EffectSet);\r\n        //     lastSet.tigger = true;\r\n        //     lastSet.last = true;\r\n        //     if (!lastSet.nextEffects) lastSet.nextEffects = [];\r\n        //     lastSet.nextEffects.push(lastSet.node);\r\n        // }\r\n        return this.efflist;\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n * 技能目标定义\r\n */\r\nexport class EffectTarget {\r\n    attacker: Node;\r\n    targets: Node[];\r\n    myArea: Node[];\r\n    myDeck: Node;\r\n    myHand: Node;\r\n    myDrop: Node;\r\n    myDel: Node;\r\n    myEnergy: Node;\r\n    adArea: Node[];\r\n    adDeck: Node;\r\n    adHand: Node;\r\n    adDrop: Node;\r\n    adDel: Node;\r\n    adEnergy: Node;\r\n\r\n    clone() {\r\n        return new EffectTarget(this.attacker, this.targets, this.myArea, this.myDeck, this.myHand, this.myDrop, this.myDel, this.myEnergy, this.adArea, this.adDeck, this.adHand, this.adDrop, this.adDel, this.adEnergy);\r\n    }\r\n\r\n    constructor(attacker?: Node, targets?: Node[], myArea?: Node[], myDeck?: Node, myHand?: Node, myDrop?: Node, myDel?: Node, myEnergy?: Node, adArea?: Node[], adDeck?: Node, adHand?: Node, adDrop?: Node, adDel?: Node, adEnergy?: Node) {\r\n        this.attacker = attacker;\r\n        this.targets = targets;\r\n        this.myArea = myArea;\r\n        this.myDeck = myDeck;\r\n        this.myHand = myHand;\r\n        this.myDrop = myDrop;\r\n        this.myDel = myDel;\r\n        this.myEnergy = myEnergy;\r\n        this.adArea = adArea;\r\n        this.adDeck = adDeck;\r\n        this.adHand = adHand;\r\n        this.adDrop = adDrop;\r\n        this.adDel = adDel;\r\n        this.adEnergy = adEnergy;\r\n    }\r\n\r\n    get length() {\r\n        let len = Math.max(this.targets.length, 0);\r\n        if (len) return len;\r\n        return Math.min(this.myArea.length, this.adArea.length, 1);\r\n    }\r\n\r\n    pop(skillId: number): TargetSet {\r\n        let myArea = this.myArea.length ? this.myArea.shift() : undefined;\r\n        let adArea = this.adArea.length ? this.adArea.shift() : undefined;\r\n        let target = this.targets.length ? this.targets.shift() : undefined;\r\n        return {\r\n            route: this.route(skillId, this.attacker),\r\n            attacker: this.attacker,\r\n            target: <unknown>target as ISceneEntry,\r\n            myArea: myArea,\r\n            myDeck: this.myDeck,\r\n            myHand: this.myHand,\r\n            myDrop: this.myDrop,\r\n            myDel: this.myDel,\r\n            myEnergy: this.myEnergy,\r\n            adArea: adArea,\r\n            adDeck: this.adDeck,\r\n            adHand: this.adHand,\r\n            adDrop: this.adDrop,\r\n            adDel: this.adDel,\r\n            adEnergy: this.adEnergy\r\n        };\r\n    }\r\n    private static seed = 0;\r\n    protected route(...args: any[]) {\r\n        EffectTarget.seed++;\r\n        let key = args[0];\r\n        for (let i = 1; i < args.length; i++) {\r\n            let obj = args[i];\r\n            if (obj != undefined && typeof (obj) == \"object\") {\r\n                key = key + \"_\" + (obj.instId || obj.name);\r\n            } else {\r\n                key = key + \"_\" + obj;\r\n            }\r\n        }\r\n        return key + \"_\" + EffectTarget.seed;\r\n    }\r\n}\r\n"]}