{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/main/TaskItem3d.ts"],"names":["_decorator","Transform3d","ccclass","property","TaskItem3d","onLoad"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;;AACAC,MAAAA,W,iBAAAA,W;;;;;;;;;OAGH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U;;4BAGjBI,U,WADZF,OAAO,CAAC,YAAD,C,gBAAR,MACaE,UADb;AAAA;AAAA,sCAC4C;AAC9BC,QAAAA,MAAM,GAAS;AACrB,gBAAMA,MAAN,GADqB,CAErB;AACA;AACA;AACA;AACA;AACA;AACH;;AATuC,O","sourcesContent":["import { _decorator, Component, Label, SpriteRenderer, UITransform } from \"cc\";\nimport { Transform3d } from \"../common/Transform3d\";\nimport { GameSet } from \"../../manager/GameSet\";\n\nconst { ccclass, property } = _decorator;\n\n@ccclass('TaskItem3d')\nexport class TaskItem3d extends Transform3d {\n    protected onLoad(): void {\n        super.onLoad();\n        // let icon = this.node.getChildByName(\"icon\");\n        // let label = this.node.getChildByName(\"icon/label\");\n        // let sf = icon.getComponent(SpriteRenderer).spriteFrame;\n        // let trans = label.getComponent(UITransform);\n        // this.$width = (sf.width * icon.scale.x + trans.contentSize.width * label.scale.x) * GameSet.PixelSize;\n        // this.$height = sf.height * icon.scale.y * GameSet.PixelSize;\n    }\n}"]}