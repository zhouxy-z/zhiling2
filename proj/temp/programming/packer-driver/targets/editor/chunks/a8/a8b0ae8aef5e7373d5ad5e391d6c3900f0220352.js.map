{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/common/ItemTips.ts"],"names":["ItemTips","Label","RichText","Sprite","SpriteFrame","UITransform","Widget","path","ResMgr","folder_item","Panel","AutoScroller","CfgMgr","prefab","bg","icon","nameLab","cd_time","tipsLab","getNode","ScrollView","cont","onLoad","find","getComponent","CloseBy","ShowHideNode","data","Show","onShow","flush","is_show_getNode","$hasLoad","initSub","std_item","undefined","_data","item","Getitem","id","string","ItemName","LockTime","Remark","spr","Icon","spriteFrame","LoadResAbSub","join","active","height","children","forEach","node","updateAlignment","onHide","args"],"mappings":"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","sourcesContent":["import {Label, Node, RichText, Sprite, SpriteFrame, UITransform, Widget, path } from \"cc\";\r\nimport { ResMgr, folder_item, folder_quality } from \"../../manager/ResMgr\";\r\nimport { Panel } from \"../../manager/GameRoot\";\r\nimport { AutoScroller } from \"../../component/AutoScroller\";\r\nimport { CfgMgr, StdItem } from \"../../manager/CfgMgr\";\r\nimport proto from \"../../net/Protocol\";\r\n\r\n\r\n\r\nexport class ItemTips extends Panel {\r\n    protected prefab: string = \"prefabs/common/ItemTips\";\r\n    private bg: Sprite;\r\n    private icon: Sprite;\r\n    private nameLab: Label;\r\n    private cd_time: Label;\r\n    private tipsLab: RichText;\r\n    private getNode:Node;\r\n    private ScrollView: AutoScroller;\r\n\r\n    private cont:Node\r\n    protected onLoad() {\r\n        this.cont = this.find(\"cont\");\r\n        this.bg = this.find(\"cont/bg\").getComponent(Sprite);\r\n        this.icon = this.find(\"cont/bg/icon\").getComponent(Sprite);\r\n        this.nameLab = this.find(\"cont/nameLab\").getComponent(Label);\r\n        this.cd_time = this.find(\"cont/cd_time\").getComponent(Label);\r\n        this.tipsLab = this.find(\"cont/layout/tipsNode/tipsLab\").getComponent(RichText);\r\n        this.getNode = this.find(\"cont/layout/getNode\");\r\n        this.ScrollView = this.find(\"cont/layout/getNode/ScrollView\").getComponent(AutoScroller);\r\n        // this.ScrollView.SetHandle(this.updateItem.bind(this));\r\n        this.CloseBy(\"mask\");\r\n\r\n    }\r\n\r\n    static ShowHideNode(data: proto.base.IThing  | StdItem) {\r\n        this.Show(data, false);\r\n    }\r\n\r\n    protected onShow(): void {\r\n\r\n    }\r\n    public async flush(data: proto.base.IThing  | StdItem, is_show_getNode:boolean = true): Promise<void> {\r\n        if (!this.$hasLoad) await this.initSub;\r\n        let std_item: StdItem\r\n        if(data[\"Items\"] != undefined){\r\n            std_item = data as StdItem;\r\n        }else{\r\n            let _data = data as proto.base.IThing\r\n            if (_data.item) {\r\n                std_item = CfgMgr.Getitem(_data.item.id);\r\n            }\r\n        }\r\n        \r\n        if (!std_item) return;\r\n        this.nameLab.string = std_item.ItemName;\r\n        this.cd_time.string = std_item.LockTime + \"\";\r\n        this.tipsLab.string = std_item.Remark + \"\";\r\n        // this.bg.spriteFrame = await ResMgr.LoadResAbSub(path.join(folder_quality, CardQuality[std_item.Quality] + \"_bag_bg\", \"spriteFrame\"), SpriteFrame);\r\n        let spr = std_item.Icon\r\n      \r\n        this.icon.spriteFrame = await ResMgr.LoadResAbSub(path.join(folder_item, spr, \"spriteFrame\"), SpriteFrame);\r\n        if(is_show_getNode){\r\n            this.getNode.active = true;\r\n            this.cont.getComponent(UITransform).height = 709;\r\n        }else{\r\n            this.getNode.active = false;\r\n            this.cont.getComponent(UITransform).height = 709 - 300;\r\n        }\r\n        this.cont.children.forEach((node) => {\r\n            if (node.getComponent(Widget)) {\r\n                node.getComponent(Widget).updateAlignment();\r\n            }\r\n        })\r\n    }\r\n    protected onHide(...args: any[]): void {\r\n    }\r\n}"]}