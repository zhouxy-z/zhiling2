{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/fight/FightUI.ts"],"names":["FightUI","Button","Label","Layout","NodeEventType","RichText","Sprite","SpriteFrame","UITransform","path","sp","proto","Req","Route","Session","Panel","Battle_End_Round","Battle_Exit","Battle_PlayNewRoundEffect","Battle_RoomUnusual","Battle_ShowSettlement","Battle_UpdateTerrain","EventMgr","Evt_BattlePlayHandTime","Evt_SectionSettle","Evt_ShowBattleDoubleEffect","Evt_StarElementSettle","folder_icon","ResMgr","CfgMgr","Tips","GameSet","Shake","Goto","RewardTips","prefab","doubleEffect","roundStartCont","roundNumLab","roundStartEffect","playHandTimeEffect","settlementCont","settlementEffect","areaCont","unusualCont","unusualOkBtn","unusualLab","settlementData","settlementPlayerId","sectionSettleDataMap","starElementSettleDataMap","isSettlementEnd","roomData","onLoad","find","Skeleton","node","on","EventType","CLICK","onBtnClick","TOUCH_END","onExit","update","dt","onTerrain","data","round","hasLoad","initSub","updateArea","datas","i","length","area","children","cont","getChildByName","contTrans","getComponent","active","descLab","icon","nameLab","iconName","string","terrainState","base","BattleRoomInTerrainState","TerrainStateUnknown","levelData","reveal","undefined","TerrainStateHide","TerrainStateShow","std","getArea","configId","AffectText","Icon","AreaName","TerrainStateDestroy","LoadResAbSub","join","res","spriteFrame","labTrans","height","Math","max","updateLayout","onShow","onPlayRoundSatrt","onShowSettlement","onShowUnusual","onSectionSettle","onPlayHandTiemEnd","onShowBattleDoubleEffect","onStarElementSettle","flush","onHide","args","off","clearAnimation","setAnimation","setCompleteListener","worldPos","showPos","mainCamera","convertToUINode","position","Start","roomId","playerAId","playSettlementEffect","sendLeaveRoom","rankRecord","modeInfo","mode","BattleMode","BattleModeRank","showSectionSettle","starRecord","BattleModeStar","showSatrElement","btn","exitFight","Hide","emit","server","pb","Server","create","id","serverId","Send","console","log","curRound","maxRound","str","effectName","tie","winnerPlayerId","leavePlayerId","Show","SkeletonData","skeletonData","isReplay","rewardThings"],"mappings":";;;sfAcaA,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAdJC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,M,OAAAA,M;AAAcC,MAAAA,a,OAAAA,a;AAAeC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,W,OAAAA,W;AAA2BC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,E,OAAAA,E;;AAC9GC,MAAAA,K;AAASC,MAAAA,G,iBAAAA,G;AAAKC,MAAAA,K,iBAAAA,K;;AAEZC,MAAAA,O,iBAAAA,O;;AACAC,MAAAA,K,iBAAAA,K;;AACAC,MAAAA,gB,iBAAAA,gB;AAAkBC,MAAAA,W,iBAAAA,W;AAAaC,MAAAA,yB,iBAAAA,yB;AAA2BC,MAAAA,kB,iBAAAA,kB;AAAoBC,MAAAA,qB,iBAAAA,qB;AAAuBC,MAAAA,oB,iBAAAA,oB;AAAsBC,MAAAA,Q,iBAAAA,Q;AAA4DC,MAAAA,sB,iBAA1BA,sB;AAAkDC,MAAAA,iB,iBAAAA,iB;AAAmBC,MAAAA,0B,iBAAAA,0B;AAA4BC,MAAAA,qB,iBAAAA,qB;;AAC9PC,MAAAA,W,iBAAAA,W;AAAaC,MAAAA,M,iBAAAA,M;;AACbC,MAAAA,M,iBAAAA,M;;AACAC,MAAAA,I,iBAAAA,I;;AACAC,MAAAA,O,iBAAAA,O;;AAEAC,MAAAA,K,kBAAAA,K;;AACAC,MAAAA,I,kBAAAA,I;;AACAC,MAAAA,U,kBAAAA,U;;;;;;;;;yBACIlC,O,GAAN,MAAMA,OAAN;AAAA;AAAA,0BAA4B;AAAA;AAAA;AAAA,eACrBmC,MADqB,GACJ,uBADI;AAAA,eAEvBC,YAFuB;AAAA,eAGrBC,cAHqB;AAAA,eAIrBC,WAJqB;AAAA,eAKrBC,gBALqB;AAAA,eAMrBC,kBANqB;AAAA,eAOrBC,cAPqB;AAAA,eAQrBC,gBARqB;AAAA,eASrBC,QATqB;AAAA,eAUrBC,WAVqB;AAAA,eAWrBC,YAXqB;AAAA,eAYrBC,UAZqB;AAAA,eAavBC,cAbuB;AAAA,eAcvBC,kBAduB;AAAA,eAevBC,oBAfuB;AAAA,eAgBvBC,wBAhBuB;AAAA,eAiBvBC,eAjBuB;AAiBE;AAjBF,eAkBvBC,QAlBuB;AAAA;;AAmBrBC,QAAAA,MAAM,GAAS;AACrB,eAAKhB,cAAL,GAAsB,KAAKiB,IAAL,CAAU,gBAAV,CAAtB;AACA,eAAKf,gBAAL,GAAwB,KAAKe,IAAL,CAAU,uBAAV,EAAmC5C,EAAE,CAAC6C,QAAtC,CAAxB;AACA,eAAKf,kBAAL,GAA0B,KAAKc,IAAL,CAAU,4BAAV,EAAwC5C,EAAE,CAAC6C,QAA3C,CAA1B;AACA,eAAKnB,YAAL,GAAoB,KAAKkB,IAAL,CAAU,sBAAV,EAAkC5C,EAAE,CAAC6C,QAArC,CAApB;AACA,eAAKjB,WAAL,GAAmB,KAAKgB,IAAL,CAAU,mCAAV,EAA+CpD,KAA/C,CAAnB;AAEA,eAAKuC,cAAL,GAAsB,KAAKa,IAAL,CAAU,gBAAV,CAAtB;AACA,eAAKZ,gBAAL,GAAwB,KAAKY,IAAL,CAAU,uBAAV,EAAmC5C,EAAE,CAAC6C,QAAtC,CAAxB;AACA,eAAKZ,QAAL,GAAgB,KAAKW,IAAL,CAAU,aAAV,CAAhB;AACA,eAAKV,WAAL,GAAmB,KAAKU,IAAL,CAAU,aAAV,CAAnB;AACA,eAAKT,YAAL,GAAoB,KAAKS,IAAL,CAAU,0BAAV,EAAsCrD,MAAtC,CAApB;AACA,eAAK6C,UAAL,GAAkB,KAAKQ,IAAL,CAAU,wBAAV,EAAoCjD,QAApC,CAAlB;AACA,eAAKwC,YAAL,CAAkBW,IAAlB,CAAuBC,EAAvB,CAA0BxD,MAAM,CAACyD,SAAP,CAAiBC,KAA3C,EAAkD,KAAKC,UAAvD,EAAmE,IAAnE;AACA,eAAKnB,cAAL,CAAoBgB,EAApB,CAAuBrD,aAAa,CAACyD,SAArC,EAAgD,KAAKC,MAArD,EAA6D,IAA7D;AACH;;AACSC,QAAAA,MAAM,CAACC,EAAD,EAAmB,CAElC;;AAEwB,cAATC,SAAS,CAACC,IAAD,EAA4CC,KAA5C,EAAwF;AAC7G,cAAI,CAAC,KAAKC,OAAV,EAAmB,MAAM,KAAKC,OAAX;AACnB,eAAKC,UAAL,CAAgBJ,IAAhB,EAAsBC,KAAtB;AACH;AAED;;;AACUG,QAAAA,UAAU,CAACC,KAAD,EAA6CJ,KAA7C,EAAyF;AACzG,eAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnC,gBAAIN,IAAI,GAAGK,KAAK,CAACC,CAAD,CAAhB;AACA,gBAAIE,IAAI,GAAG,KAAK/B,QAAL,CAAcgC,QAAd,CAAuBT,IAAI,GAAGA,IAAI,CAACQ,IAAR,GAAeF,CAA1C,CAAX;AACA,gBAAII,IAAU,GAAGF,IAAI,CAACG,cAAL,CAAoB,MAApB,CAAjB;AACA,gBAAIC,SAAsB,GAAGF,IAAI,CAACG,YAAL,CAAkBvE,WAAlB,CAA7B;;AACA,gBAAI,CAAC0D,IAAL,EAAW;AACPQ,cAAAA,IAAI,CAACM,MAAL,GAAc,KAAd;AACH,aAFD,MAEO;AACHN,cAAAA,IAAI,CAACM,MAAL,GAAc,IAAd,CADG,CAEH;;AACA,kBAAIC,OAAiB,GAAGL,IAAI,CAACC,cAAL,CAAoB,SAApB,EAA+BE,YAA/B,CAA4C1E,QAA5C,CAAxB;AACA,kBAAI6E,IAAY,GAAGN,IAAI,CAACC,cAAL,CAAoB,MAApB,EAA4BE,YAA5B,CAAyCzE,MAAzC,CAAnB;AACA,kBAAI6E,OAAc,GAAGP,IAAI,CAACC,cAAL,CAAoB,SAApB,EAA+BE,YAA/B,CAA4C7E,KAA5C,CAArB;AACA,kBAAIkF,QAAgB,GAAG,gBAAvB;AACAH,cAAAA,OAAO,CAACI,MAAR,GAAiB,EAAjB;AACAF,cAAAA,OAAO,CAACE,MAAR,GAAiB,KAAjB;;AACA,sBAAQnB,IAAI,CAACoB,YAAb;AACI,qBAAK;AAAA;AAAA,oCAAMC,IAAN,CAAWC,wBAAX,CAAoCC,mBAAzC;AACI,sBAAItB,KAAK,IAAIA,KAAK,CAACuB,SAAN,CAAgBC,MAAhB,CAAuBnB,CAAvB,KAA6BoB,SAA1C,EAAqD;AACjDX,oBAAAA,OAAO,CAACI,MAAR,GAAiB,MAAMlB,KAAK,CAACuB,SAAN,CAAgBC,MAAhB,CAAuBnB,CAAvB,CAAN,GAAkC,MAAnD;AACH,mBAFD,MAEOS,OAAO,CAACI,MAAR,GAAiB,IAAjB;;AACP;;AACJ,qBAAK;AAAA;AAAA,oCAAME,IAAN,CAAWC,wBAAX,CAAoCK,gBAAzC;AACI,sBAAI1B,KAAK,IAAIA,KAAK,CAACuB,SAAN,CAAgBC,MAAhB,CAAuBnB,CAAvB,KAA6BoB,SAA1C,EAAqD;AACjDX,oBAAAA,OAAO,CAACI,MAAR,GAAiB,MAAMlB,KAAK,CAACuB,SAAN,CAAgBC,MAAhB,CAAuBnB,CAAvB,CAAN,GAAkC,MAAnD;AACH,mBAFD,MAEOS,OAAO,CAACI,MAAR,GAAiB,KAAjB;;AACP;;AACJ,qBAAK;AAAA;AAAA,oCAAME,IAAN,CAAWC,wBAAX,CAAoCM,gBAAzC;AACI,sBAAIC,GAAY,GAAG;AAAA;AAAA,wCAAOC,OAAP,CAAe9B,IAAI,CAAC+B,QAApB,CAAnB;AACAhB,kBAAAA,OAAO,CAACI,MAAR,GAAiBU,GAAG,CAACG,UAArB;AACAd,kBAAAA,QAAQ,GAAGW,GAAG,CAACI,IAAf;AACAhB,kBAAAA,OAAO,CAACE,MAAR,GAAiBU,GAAG,CAACK,QAArB;AACA;;AACJ,qBAAK;AAAA;AAAA,oCAAMb,IAAN,CAAWC,wBAAX,CAAoCa,mBAAzC;AACIpB,kBAAAA,OAAO,CAACI,MAAR,GAAiB,KAAjB;AACA;;AACJ;AACI,sBAAIlB,KAAK,IAAIA,KAAK,CAACuB,SAAN,CAAgBC,MAAhB,CAAuBnB,CAAvB,KAA6BoB,SAA1C,EAAqD;AACjDX,oBAAAA,OAAO,CAACI,MAAR,GAAiB,MAAMlB,KAAK,CAACuB,SAAN,CAAgBC,MAAhB,CAAuBnB,CAAvB,CAAN,GAAkC,MAAnD;AACH,mBAFD,MAEOS,OAAO,CAACI,MAAR,GAAiB,KAAjB;;AAvBf;;AAyBA;AAAA;AAAA,oCAAOiB,YAAP,CAAoB7F,IAAI,CAAC8F,IAAL;AAAA;AAAA,8CAAwB,YAAWnB,QAAS,EAA5C,EAA+C,aAA/C,CAApB,EAAmF7E,WAAnF,EAAiGiG,GAAD,IAAsB;AAClHtB,gBAAAA,IAAI,CAACuB,WAAL,GAAmBD,GAAnB;AACH,eAFD;AAGA,kBAAIE,QAAqB,GAAGzB,OAAO,CAACzB,IAAR,CAAauB,YAAb,CAA0BvE,WAA1B,CAA5B;AACAsE,cAAAA,SAAS,CAAC6B,MAAV,GAAmBC,IAAI,CAACC,GAAL,CAAS,EAAT,EAAaH,QAAQ,CAACC,MAAtB,CAAnB;AACH;AACJ;;AACD,eAAKhE,QAAL,CAAcoC,YAAd,CAA2B5E,MAA3B,EAAmC2G,YAAnC;AACH;;AAESC,QAAAA,MAAM,GAAS;AACrB,eAAKvE,kBAAL,CAAwBgB,IAAxB,CAA6BwB,MAA7B,GAAsC,KAAtC;AACA,eAAK5C,YAAL,CAAkBoB,IAAlB,CAAuBwB,MAAvB,GAAgC,KAAhC;AACA,eAAK3C,cAAL,CAAoB2C,MAApB,GAA6B,KAA7B;AACA,eAAKvC,cAAL,CAAoBuC,MAApB,GAA6B,KAA7B;AACA,eAAKpC,WAAL,CAAiBoC,MAAjB,GAA0B,KAA1B;AACA,eAAK/B,oBAAL,GAA4B,IAA5B;AACA,eAAKF,cAAL,GAAsB,IAAtB;AACA,eAAKI,eAAL,GAAuB,KAAvB;AACA;AAAA;AAAA,oCAASM,EAAT;AAAA;AAAA,4DAAkC,KAAKQ,SAAvC,EAAkD,IAAlD;AACA;AAAA;AAAA,oCAASR,EAAT;AAAA;AAAA,sEAAuC,KAAKuD,gBAA5C,EAA8D,IAA9D;AACA;AAAA;AAAA,oCAASvD,EAAT;AAAA;AAAA,8DAAmC,KAAKwD,gBAAxC,EAA0D,IAA1D;AACA;AAAA;AAAA,oCAASxD,EAAT;AAAA;AAAA,wDAAgC,KAAKyD,aAArC,EAAoD,IAApD;AACA;AAAA;AAAA,oCAASzD,EAAT;AAAA;AAAA,sDAA+B,KAAK0D,eAApC,EAAqD,IAArD;AACA;AAAA;AAAA,oCAAS1D,EAAT;AAAA;AAAA,gEAAoC,KAAK2D,iBAAzC,EAA4D,IAA5D;AACA;AAAA;AAAA,oCAAS3D,EAAT;AAAA;AAAA,wEAAwC,KAAK4D,wBAA7C,EAAuE,IAAvE;AACA;AAAA;AAAA,oCAAS5D,EAAT;AAAA;AAAA,8DAAmC,KAAK6D,mBAAxC,EAA6D,IAA7D;AACH;AAED;AACJ;AACA;AACA;;;AACWC,QAAAA,KAAK,CAACnE,QAAD,EAA0C;AAClD,eAAKA,QAAL,GAAgBA,QAAhB;AACA,eAAKkB,UAAL,CAAgB,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAhB;AACH;;AAESkD,QAAAA,MAAM,CAAC,GAAGC,IAAJ,EAAuB;AACnC,eAAKrE,QAAL,GAAgB,IAAhB;AACA;AAAA;AAAA,oCAASsE,GAAT;AAAA;AAAA,4DAAmC,KAAKzD,SAAxC,EAAmD,IAAnD;AACA;AAAA;AAAA,oCAASyD,GAAT;AAAA;AAAA,sEAAwC,KAAKV,gBAA7C,EAA+D,IAA/D;AACA;AAAA;AAAA,oCAASU,GAAT;AAAA;AAAA,8DAAoC,KAAKT,gBAAzC,EAA2D,IAA3D;AACA;AAAA;AAAA,oCAASS,GAAT;AAAA;AAAA,wDAAiC,KAAKR,aAAtC,EAAqD,IAArD;AACA;AAAA;AAAA,oCAASQ,GAAT;AAAA;AAAA,sDAAgC,KAAKP,eAArC,EAAsD,IAAtD;AACA;AAAA;AAAA,oCAASO,GAAT;AAAA;AAAA,gEAAqC,KAAKN,iBAA1C,EAA6D,IAA7D;AACA;AAAA;AAAA,oCAASM,GAAT;AAAA;AAAA,wEAAyC,KAAKL,wBAA9C,EAAwE,IAAxE;AACA;AAAA;AAAA,oCAASK,GAAT;AAAA;AAAA,8DAAoC,KAAKJ,mBAAzC,EAA8D,IAA9D;AACH;;AAEOF,QAAAA,iBAAiB,GAAS;AAC9B,eAAK5E,kBAAL,CAAwBgB,IAAxB,CAA6BwB,MAA7B,GAAsC,IAAtC;AACA,eAAKxC,kBAAL,CAAwBmF,cAAxB;AACA,eAAKnF,kBAAL,CAAwBoF,YAAxB,CAAqC,CAArC,EAAwC,WAAxC,EAAqD,KAArD;AACA,eAAKpF,kBAAL,CAAwBqF,mBAAxB,CAA4C,MAAM;AAC9C,iBAAKrF,kBAAL,CAAwBgB,IAAxB,CAA6BwB,MAA7B,GAAsC,KAAtC;AACH,WAFD;AAGH;;AAEOqC,QAAAA,wBAAwB,CAACS,QAAD,EAAuB;AACnD,cAAIC,OAAa,GAAG;AAAA;AAAA,kCAAQC,UAAR,CAAmBC,eAAnB,CAAmCH,QAAnC,EAA6C,KAAKtE,IAAlD,CAApB;AACA,eAAKpB,YAAL,CAAkBoB,IAAlB,CAAuB0E,QAAvB,GAAkCH,OAAlC;AACA,eAAK3F,YAAL,CAAkBoB,IAAlB,CAAuBwB,MAAvB,GAAgC,IAAhC;AACA,eAAK5C,YAAL,CAAkBuF,cAAlB;AACA,eAAKvF,YAAL,CAAkBwF,YAAlB,CAA+B,CAA/B,EAAkC,WAAlC,EAA+C,KAA/C;AACA,eAAKxF,YAAL,CAAkByF,mBAAlB,CAAsC,MAAM;AACxC,iBAAKzF,YAAL,CAAkBoB,IAAlB,CAAuBwB,MAAvB,GAAgC,KAAhC;AACH,WAFD;AAIA;AAAA;AAAA,8BAAMmD,KAAN,CAAY,EAAZ,EAAgB,CAAhB;AACH;;AAEOlB,QAAAA,gBAAgB,CAACmB,MAAD,EAAiBC,SAAjB,EAAoCnE,IAApC,EAA0F;AAC9G,eAAKnB,cAAL,GAAsBmB,IAAtB;AACA,eAAKlB,kBAAL,GAA0BqF,SAA1B;AACA,eAAKC,oBAAL;AACA,eAAKC,aAAL;AACH;;AAEOpB,QAAAA,eAAe,CAACjD,IAAD,EAAqD;AACxE,cAAI,CAAC,KAAKjB,oBAAV,EAAgC,KAAKA,oBAAL,GAA4B,EAA5B;AAChC,eAAKA,oBAAL,CAA0BiB,IAAI,CAACsE,UAAL,CAAgBJ,MAA1C,IAAoDlE,IAApD;;AACA,cAAI,KAAKf,eAAL,IAAwB,KAAKC,QAAL,CAAcqF,QAAd,CAAuBC,IAAvB,IAA+B;AAAA;AAAA,8BAAMnD,IAAN,CAAWoD,UAAX,CAAsBC,cAAjF,EAAiG;AAC7F,iBAAKC,iBAAL;AACH;AACJ;;AAEOvB,QAAAA,mBAAmB,CAACpD,IAAD,EAAqD;AAC5E,cAAI,CAAC,KAAKhB,wBAAV,EAAoC,KAAKA,wBAAL,GAAgC,EAAhC;AACpC,eAAKA,wBAAL,CAA8BgB,IAAI,CAAC4E,UAAL,CAAgBV,MAA9C,IAAwDlE,IAAxD;;AACA,cAAI,KAAKf,eAAL,IAAwB,KAAKC,QAAL,CAAcqF,QAAd,CAAuBC,IAAvB,IAA+B;AAAA;AAAA,8BAAMnD,IAAN,CAAWoD,UAAX,CAAsBI,cAAjF,EAAiG;AAC7F,iBAAKC,eAAL;AACH;AACJ;;AAEOpF,QAAAA,UAAU,CAACqF,GAAD,EAAoB;AAClC,kBAAQA,GAAR;AACI,iBAAK,KAAKpG,YAAV;AACI,mBAAKqG,SAAL;AACA;AAHR;AAKH;;AAEOpF,QAAAA,MAAM,GAAS;AACnB,cAAI,KAAKX,eAAT,EAA0B;AACtB,iBAAK+F,SAAL;AACH;AACJ;;AAEOA,QAAAA,SAAS,GAAS;AACtB,eAAKC,IAAL;AACA;AAAA;AAAA,oCAASC,IAAT;AAAA;AAAA;AACH;;AAEOb,QAAAA,aAAa,GAAS;AAC1B,cAAIc,MAAwB,GAAG;AAAA;AAAA,8BAAMC,EAAN,CAASC,MAAT,CAAgBC,MAAhB,EAA/B;AACAH,UAAAA,MAAM,CAACI,EAAP,GAAY,KAAKrG,QAAL,CAAcsG,QAA1B;AACA,cAAIxF,IAAI,GAAG,IAAI;AAAA;AAAA,0BAAI,iCAAJ,CAAJ,EAAX;AACAA,UAAAA,IAAI,CAACmF,MAAL,GAAcA,MAAd;AACAnF,UAAAA,IAAI,CAACkE,MAAL,GAAc,KAAKhF,QAAL,CAAcgF,MAA5B;AACA;AAAA;AAAA,kCAAQuB,IAAR,CAAa;AAAA;AAAA,8BAAM,iCAAN,CAAb,EAAuDzF,IAAvD;AACA0F,UAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH;;AAEO7C,QAAAA,gBAAgB,CAAC8C,QAAD,EAAmBC,QAAnB,EAA2C;AAC/D,eAAK1H,cAAL,CAAoB2C,MAApB,GAA6B,IAA7B;AACA,eAAKzC,gBAAL,CAAsBoF,cAAtB;AACA,eAAKrF,WAAL,CAAiB+C,MAAjB,GAA2B,GAAEyE,QAAS,IAAGC,QAAS,EAAlD;AACA,eAAKxH,gBAAL,CAAsBqF,YAAtB,CAAmC,CAAnC,EAAsC,WAAtC,EAAmD,KAAnD;AACA,eAAKrF,gBAAL,CAAsBsF,mBAAtB,CAA0C,MAAM;AAC5C;AAAA;AAAA,sCAASuB,IAAT;AAAA;AAAA;AACA,iBAAK/G,cAAL,CAAoB2C,MAApB,GAA6B,KAA7B;AACH,WAHD;AAIH;;AAEOkC,QAAAA,aAAa,CAAC8C,GAAD,EAAoB;AACrC,eAAKpH,WAAL,CAAiBoC,MAAjB,GAA0B,IAA1B;AACA,eAAKlC,UAAL,CAAgBuC,MAAhB,GAAyB2E,GAAzB;AACH;;AAEO1B,QAAAA,oBAAoB,GAAS;AACjC,eAAK7F,cAAL,CAAoBuC,MAApB,GAA6B,IAA7B;AACA,eAAKtC,gBAAL,CAAsBiF,cAAtB;AACA,cAAIsC,UAAJ;;AACA,cAAI,KAAKlH,cAAL,CAAoBmH,GAAxB,EAA6B;AACzBD,YAAAA,UAAU,GAAG,gBAAb;AACH,WAFD,MAEO,IAAI,KAAKjH,kBAAL,IAA2B,KAAKD,cAAL,CAAoBoH,cAAnD,EAAmE;AACtEF,YAAAA,UAAU,GAAG,eAAb;AACH,WAFM,MAEA;AACH,gBAAI,KAAKjH,kBAAL,IAA2B,KAAKD,cAAL,CAAoBqH,aAAnD,EAAkE;AAC9DH,cAAAA,UAAU,GAAG,eAAb;AACH,aAFD,MAEO,IAAI,KAAKlH,cAAL,CAAoBqH,aAAxB,EAAuC;AAC1C;AAAA;AAAA,gCAAKC,IAAL,CAAU,OAAV;AACAJ,cAAAA,UAAU,GAAG,eAAb;AACH,aAHM,MAGA;AACHA,cAAAA,UAAU,GAAG,gBAAb;AACH;AACJ;;AACD;AAAA;AAAA,gCAAO3D,YAAP,CAAqB,SAAQ2D,UAAW,IAAGA,UAAW,EAAtD,EAAyDvJ,EAAE,CAAC4J,YAA5D,EAA2E9D,GAAD,IAA0B;AAChG,iBAAK9D,gBAAL,CAAsB6H,YAAtB,GAAqC/D,GAArC;AACA,iBAAK9D,gBAAL,CAAsBkF,YAAtB,CAAmC,CAAnC,EAAsC,MAAtC,EAA8C,KAA9C;AACA,iBAAKlF,gBAAL,CAAsBmF,mBAAtB,CAA0C,MAAM;AAC5C,mBAAKnF,gBAAL,CAAsBkF,YAAtB,CAAmC,CAAnC,EAAsC,MAAtC,EAA8C,IAA9C;AACA,mBAAKzE,eAAL,GAAuB,IAAvB;;AACA,kBAAI,KAAKC,QAAL,CAAcoH,QAAlB,EAA4B,CAE3B,CAFD,MAEO;AACH,oBAAI,KAAKpH,QAAL,CAAcqF,QAAd,CAAuBC,IAAvB,IAA+B;AAAA;AAAA,oCAAMnD,IAAN,CAAWoD,UAAX,CAAsBC,cAAzD,EAAyE;AACrE,uBAAKC,iBAAL;AACH,iBAFD,MAEO,IAAG,KAAKzF,QAAL,CAAcqF,QAAd,CAAuBC,IAAvB,IAA+B;AAAA;AAAA,oCAAMnD,IAAN,CAAWoD,UAAX,CAAsBI,cAAxD,EAAwE;AAC3E,uBAAKC,eAAL;AACH;AAEJ;AACJ,aAbD;AAcH,WAjBD;AAkBH,SAvQ8B,CAyQ/B;;;AACQH,QAAAA,iBAAiB,GAAS;AAC9B,cAAI3E,IAA4C,GAAG,KAAKjB,oBAAL,GAA4B,KAAKA,oBAAL,CAA0B,KAAKG,QAAL,CAAcgF,MAAxC,CAA5B,GAA8E,IAAjI;;AACA,cAAIlE,IAAJ,EAAU;AACN,iBAAKf,eAAL,GAAuB,KAAvB;AACA;AAAA;AAAA,8BAAK,mBAAL,EAA0Be,IAA1B,EAAgC,KAAKlB,kBAArC,EAAyD,MAAM;AAC3D,mBAAKP,cAAL,CAAoBuC,MAApB,GAA6B,KAA7B;AACH,aAFD,EAEG,MAAM;AACL,mBAAK7B,eAAL,GAAuB,IAAvB;AACA,mBAAKW,MAAL;AACH,aALD;AAMH;AACJ,SArR8B,CAuR/B;;;AACQkF,QAAAA,eAAe,GAAS;AAC5B,cAAI9E,IAA4C,GAAG,KAAKhB,wBAAL,GAAgC,KAAKA,wBAAL,CAA8B,KAAKE,QAAL,CAAcgF,MAA5C,CAAhC,GAAsF,IAAzI;;AACA,cAAIlE,IAAI,IAAIA,IAAI,CAACuG,YAAb,IAA8BvG,IAAI,CAACuG,YAAL,CAAkBhG,MAApD,EAA4D;AACxD,iBAAKtB,eAAL,GAAuB,KAAvB;AACA;AAAA;AAAA,0CAAWkH,IAAX,CAAgBnG,IAAI,CAACuG,YAArB,EAAmC,IAAnC,EAAyC,MAAM;AAC3C,mBAAKhI,cAAL,CAAoBuC,MAApB,GAA6B,KAA7B;AACH,aAFD,EAEG,MAAM;AACL,mBAAK7B,eAAL,GAAuB,IAAvB;AACA,mBAAKW,MAAL;AACH,aALD;AAMH;AACJ;;AAnS8B,O","sourcesContent":["import { Button, Label, Layout, Node, NodeEventType, RichText, Sprite, SpriteFrame, UITransform, Vec3, easing, path, sp, tween, v3 } from \"cc\";\r\nimport proto, { Req, Route } from \"../../net/Protocol\";\r\nimport { PlayerData } from \"../player/PlayerData\";\r\nimport { Session } from \"../../net/Session\";\r\nimport { Panel } from \"../../manager/GameRoot\";\r\nimport { Battle_End_Round, Battle_Exit, Battle_PlayNewRoundEffect, Battle_RoomUnusual, Battle_ShowSettlement, Battle_UpdateTerrain, EventMgr, Evt_BattleDoubleUpdate, Evt_BattlePlayHandTime as Evt_BattlePlayHandTime, Evt_SectionSettle, Evt_ShowBattleDoubleEffect, Evt_StarElementSettle } from \"../../manager/EventMgr\";\r\nimport { folder_icon, ResMgr } from \"../../manager/ResMgr\";\r\nimport { CfgMgr, StdArea} from \"../../manager/CfgMgr\";\r\nimport { Tips } from \"../common/Tips\";\r\nimport { GameSet } from \"../../manager/GameSet\";\r\nimport { SeasonSettlePanel } from \"./SeasonSettlePanel\";\r\nimport { Shake } from \"../../utils/Shake\";\r\nimport { Goto } from \"../../DL\";\r\nimport { RewardTips } from \"../common/RewardTips\";\r\nexport class FightUI extends Panel {\r\n    protected prefab: string = \"prefabs/fight/FightUI\";\r\n    private doubleEffect: sp.Skeleton;\r\n    protected roundStartCont: Node;\r\n    protected roundNumLab: Label;\r\n    protected roundStartEffect: sp.Skeleton;\r\n    protected playHandTimeEffect: sp.Skeleton;\r\n    protected settlementCont: Node;\r\n    protected settlementEffect: sp.Skeleton;\r\n    protected areaCont: Node;\r\n    protected unusualCont: Node;\r\n    protected unusualOkBtn: Button;\r\n    protected unusualLab: RichText;\r\n    private settlementData: proto.base.BattleRoomOpOutput_Settlement;\r\n    private settlementPlayerId: string;\r\n    private sectionSettleDataMap: {[key: string]: proto.pb.PlayerPvpRankBattleSettlePush};\r\n    private starElementSettleDataMap: {[key: string]: proto.pb.PlayerPvpStarBattleSettlePush};\r\n    private isSettlementEnd: boolean;//是否结算完毕\r\n    private roomData: proto.base.IBattleRoomSummary;\r\n    protected onLoad(): void {\r\n        this.roundStartCont = this.find(\"roundStartCont\");\r\n        this.roundStartEffect = this.find(\"roundStartCont/effect\", sp.Skeleton);\r\n        this.playHandTimeEffect = this.find(\"defCont/playHandTimeEffect\", sp.Skeleton);\r\n        this.doubleEffect = this.find(\"defCont/doubleEffect\", sp.Skeleton);\r\n        this.roundNumLab = this.find(\"roundStartCont/effect/roundNumLab\", Label);\r\n\r\n        this.settlementCont = this.find(\"settlementCont\");\r\n        this.settlementEffect = this.find(\"settlementCont/effect\", sp.Skeleton);\r\n        this.areaCont = this.find(\"terrainCont\");\r\n        this.unusualCont = this.find(\"unusualCont\");\r\n        this.unusualOkBtn = this.find(\"unusualCont/unusualOkBtn\", Button);\r\n        this.unusualLab = this.find(\"unusualCont/unusualLab\", RichText);\r\n        this.unusualOkBtn.node.on(Button.EventType.CLICK, this.onBtnClick, this);\r\n        this.settlementCont.on(NodeEventType.TOUCH_END, this.onExit, this);\r\n    }\r\n    protected update(dt: number): void {\r\n\r\n    }\r\n\r\n    protected async onTerrain(data: proto.base.IBattleRoomTerrainData[], round?: proto.base.IBattleRoomGamePlayData) {\r\n        if (!this.hasLoad) await this.initSub;\r\n        this.updateArea(data, round);\r\n    }\r\n\r\n    /**更新区域 */\r\n    protected updateArea(datas: proto.base.IBattleRoomTerrainData[], round?: proto.base.IBattleRoomGamePlayData) {\r\n        for (let i = 0; i < datas.length; i++) {\r\n            let data = datas[i];\r\n            let area = this.areaCont.children[data ? data.area : i];\r\n            let cont: Node = area.getChildByName(\"cont\");\r\n            let contTrans: UITransform = cont.getComponent(UITransform);\r\n            if (!data) {\r\n                area.active = false;\r\n            } else {\r\n                area.active = true;\r\n                // let icon = area.getChildByName(\"icon\").getComponent(Sprite);\r\n                let descLab: RichText = cont.getChildByName(\"descLab\").getComponent(RichText);\r\n                let icon: Sprite = cont.getChildByName(\"icon\").getComponent(Sprite);\r\n                let nameLab: Label = cont.getChildByName(\"nameLab\").getComponent(Label);\r\n                let iconName: string = \"area_icon_none\";\r\n                descLab.string = \"\";\r\n                nameLab.string = \"未揭示\";\r\n                switch (data.terrainState) {\r\n                    case proto.base.BattleRoomInTerrainState.TerrainStateUnknown: \r\n                        if (round && round.levelData.reveal[i] != undefined) {\r\n                            descLab.string = \"第\" + round.levelData.reveal[i] + \"回合开启\";\r\n                        } else descLab.string = \"未知\";\r\n                        break;\r\n                    case proto.base.BattleRoomInTerrainState.TerrainStateHide:\r\n                        if (round && round.levelData.reveal[i] != undefined) {\r\n                            descLab.string = \"第\" + round.levelData.reveal[i] + \"回合开启\";\r\n                        } else descLab.string = \"未揭示\";\r\n                        break;\r\n                    case proto.base.BattleRoomInTerrainState.TerrainStateShow:\r\n                        let std: StdArea = CfgMgr.getArea(data.configId);\r\n                        descLab.string = std.AffectText;\r\n                        iconName = std.Icon;\r\n                        nameLab.string = std.AreaName;\r\n                        break;\r\n                    case proto.base.BattleRoomInTerrainState.TerrainStateDestroy:\r\n                        descLab.string = \"已销毁\";\r\n                        break\r\n                    default:\r\n                        if (round && round.levelData.reveal[i] != undefined) {\r\n                            descLab.string = \"第\" + round.levelData.reveal[i] + \"回合开启\";\r\n                        } else descLab.string = \"未揭示\";\r\n                }\r\n                ResMgr.LoadResAbSub(path.join(folder_icon, `areaIcon/${iconName}`, \"spriteFrame\"), SpriteFrame, (res: SpriteFrame) => {\r\n                    icon.spriteFrame = res;\r\n                });\r\n                let labTrans: UITransform = descLab.node.getComponent(UITransform);\r\n                contTrans.height = Math.max(60, labTrans.height);\r\n            }\r\n        }\r\n        this.areaCont.getComponent(Layout).updateLayout();\r\n    }\r\n\r\n    protected onShow(): void {\r\n        this.playHandTimeEffect.node.active = false;\r\n        this.doubleEffect.node.active = false;\r\n        this.roundStartCont.active = false;\r\n        this.settlementCont.active = false;\r\n        this.unusualCont.active = false;\r\n        this.sectionSettleDataMap = null;\r\n        this.settlementData = null;\r\n        this.isSettlementEnd = false;\r\n        EventMgr.on(Battle_UpdateTerrain, this.onTerrain, this);\r\n        EventMgr.on(Battle_PlayNewRoundEffect, this.onPlayRoundSatrt, this);\r\n        EventMgr.on(Battle_ShowSettlement, this.onShowSettlement, this);\r\n        EventMgr.on(Battle_RoomUnusual, this.onShowUnusual, this);\r\n        EventMgr.on(Evt_SectionSettle, this.onSectionSettle, this);\r\n        EventMgr.on(Evt_BattlePlayHandTime, this.onPlayHandTiemEnd, this);\r\n        EventMgr.on(Evt_ShowBattleDoubleEffect, this.onShowBattleDoubleEffect, this);\r\n        EventMgr.on(Evt_StarElementSettle, this.onStarElementSettle, this);\r\n    }\r\n\r\n    /**\r\n     * 刷新战斗ui\r\n     * @param data \r\n     */\r\n    public flush(roomData: proto.base.IBattleRoomSummary) {\r\n        this.roomData = roomData;\r\n        this.updateArea([null, null, null]);\r\n    }\r\n\r\n    protected onHide(...args: any[]): void {\r\n        this.roomData = null;\r\n        EventMgr.off(Battle_UpdateTerrain, this.onTerrain, this);\r\n        EventMgr.off(Battle_PlayNewRoundEffect, this.onPlayRoundSatrt, this);\r\n        EventMgr.off(Battle_ShowSettlement, this.onShowSettlement, this);\r\n        EventMgr.off(Battle_RoomUnusual, this.onShowUnusual, this);\r\n        EventMgr.off(Evt_SectionSettle, this.onSectionSettle, this);\r\n        EventMgr.off(Evt_BattlePlayHandTime, this.onPlayHandTiemEnd, this);\r\n        EventMgr.off(Evt_ShowBattleDoubleEffect, this.onShowBattleDoubleEffect, this);\r\n        EventMgr.off(Evt_StarElementSettle, this.onStarElementSettle, this);\r\n    }\r\n\r\n    private onPlayHandTiemEnd(): void {\r\n        this.playHandTimeEffect.node.active = true;\r\n        this.playHandTimeEffect.clearAnimation();\r\n        this.playHandTimeEffect.setAnimation(0, \"animation\", false);\r\n        this.playHandTimeEffect.setCompleteListener(() => {\r\n            this.playHandTimeEffect.node.active = false;\r\n        });\r\n    }\r\n\r\n    private onShowBattleDoubleEffect(worldPos: Vec3): void {\r\n        let showPos: Vec3 = GameSet.mainCamera.convertToUINode(worldPos, this.node);\r\n        this.doubleEffect.node.position = showPos;\r\n        this.doubleEffect.node.active = true;\r\n        this.doubleEffect.clearAnimation();\r\n        this.doubleEffect.setAnimation(0, \"animation\", false);\r\n        this.doubleEffect.setCompleteListener(() => {\r\n            this.doubleEffect.node.active = false;\r\n        });\r\n\r\n        Shake.Start(10, 1);\r\n    }\r\n\r\n    private onShowSettlement(roomId: string, playerAId: string, data: proto.base.BattleRoomOpOutput_Settlement): void {\r\n        this.settlementData = data;\r\n        this.settlementPlayerId = playerAId;\r\n        this.playSettlementEffect();\r\n        this.sendLeaveRoom();\r\n    }\r\n\r\n    private onSectionSettle(data: proto.pb.PlayerPvpRankBattleSettlePush): void {\r\n        if (!this.sectionSettleDataMap) this.sectionSettleDataMap = {};\r\n        this.sectionSettleDataMap[data.rankRecord.roomId] = data;\r\n        if (this.isSettlementEnd && this.roomData.modeInfo.mode == proto.base.BattleMode.BattleModeRank) {\r\n            this.showSectionSettle();\r\n        }\r\n    }\r\n\r\n    private onStarElementSettle(data: proto.pb.PlayerPvpStarBattleSettlePush): void {\r\n        if (!this.starElementSettleDataMap) this.starElementSettleDataMap = {};\r\n        this.starElementSettleDataMap[data.starRecord.roomId] = data;\r\n        if (this.isSettlementEnd && this.roomData.modeInfo.mode == proto.base.BattleMode.BattleModeStar) {\r\n            this.showSatrElement();\r\n        }\r\n    }\r\n\r\n    private onBtnClick(btn: Button): void {\r\n        switch (btn) {\r\n            case this.unusualOkBtn:\r\n                this.exitFight();\r\n                break;\r\n        }\r\n    }\r\n\r\n    private onExit(): void {\r\n        if (this.isSettlementEnd) {\r\n            this.exitFight();\r\n        }\r\n    }\r\n\r\n    private exitFight(): void {\r\n        this.Hide();\r\n        EventMgr.emit(Battle_Exit);\r\n    }\r\n\r\n    private sendLeaveRoom(): void {\r\n        let server: proto.pb.IServer = proto.pb.Server.create();\r\n        server.id = this.roomData.serverId;\r\n        let data = new Req[\"battle.protocol.battleroomleave\"]();\r\n        data.server = server;\r\n        data.roomId = this.roomData.roomId;\r\n        Session.Send(Route[\"battle.protocol.battleroomleave\"], data);\r\n        console.log(\"无玩家主动退出房间 发送离开房间---->\")\r\n    }\r\n\r\n    private onPlayRoundSatrt(curRound: number, maxRound: number): void {\r\n        this.roundStartCont.active = true;\r\n        this.roundStartEffect.clearAnimation();\r\n        this.roundNumLab.string = `${curRound}/${maxRound}`;\r\n        this.roundStartEffect.setAnimation(0, \"animation\", false);\r\n        this.roundStartEffect.setCompleteListener(() => {\r\n            EventMgr.emit(Battle_End_Round);\r\n            this.roundStartCont.active = false;\r\n        })\r\n    }\r\n\r\n    private onShowUnusual(str: string): void {\r\n        this.unusualCont.active = true;\r\n        this.unusualLab.string = str;\r\n    }\r\n\r\n    private playSettlementEffect(): void {\r\n        this.settlementCont.active = true;\r\n        this.settlementEffect.clearAnimation();\r\n        let effectName: string;\r\n        if (this.settlementData.tie) {\r\n            effectName = \"ui_result_draw\";\r\n        } else if (this.settlementPlayerId == this.settlementData.winnerPlayerId) {\r\n            effectName = \"ui_result_win\";\r\n        } else {\r\n            if (this.settlementPlayerId == this.settlementData.leavePlayerId) {\r\n                effectName = \"ui_result_run\";\r\n            } else if (this.settlementData.leavePlayerId) {\r\n                Tips.Show(\"对方逃跑!\");\r\n                effectName = \"ui_result_win\";\r\n            } else {\r\n                effectName = \"ui_result_lost\";\r\n            } \r\n        }\r\n        ResMgr.LoadResAbSub(`spine/${effectName}/${effectName}`, sp.SkeletonData, (res: sp.SkeletonData) => {\r\n            this.settlementEffect.skeletonData = res;\r\n            this.settlementEffect.setAnimation(0, \"show\", false);\r\n            this.settlementEffect.setCompleteListener(() => {\r\n                this.settlementEffect.setAnimation(0, \"loop\", true);\r\n                this.isSettlementEnd = true;\r\n                if (this.roomData.isReplay) {\r\n                    \r\n                } else {\r\n                    if (this.roomData.modeInfo.mode == proto.base.BattleMode.BattleModeRank) {\r\n                        this.showSectionSettle();    \r\n                    } else if(this.roomData.modeInfo.mode == proto.base.BattleMode.BattleModeStar) {\r\n                        this.showSatrElement();\r\n                    }\r\n                    \r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    //排位赛结算\r\n    private showSectionSettle(): void {\r\n        let data: proto.pb.PlayerPvpRankBattleSettlePush = this.sectionSettleDataMap ? this.sectionSettleDataMap[this.roomData.roomId] : null;\r\n        if (data) {\r\n            this.isSettlementEnd = false;\r\n            Goto(\"SeasonSettlePanel\", data, this.settlementPlayerId, () => {\r\n                this.settlementCont.active = false;\r\n            }, () => {\r\n                this.isSettlementEnd = true;\r\n                this.onExit();\r\n            });\r\n        }\r\n    }\r\n\r\n    //星元对战结算\r\n    private showSatrElement(): void {\r\n        let data: proto.pb.PlayerPvpStarBattleSettlePush = this.starElementSettleDataMap ? this.starElementSettleDataMap[this.roomData.roomId] : null;\r\n        if (data && data.rewardThings  && data.rewardThings.length) {\r\n            this.isSettlementEnd = false;\r\n            RewardTips.Show(data.rewardThings, null, () => {\r\n                this.settlementCont.active = false;\r\n            }, () => {\r\n                this.isSettlementEnd = true;\r\n                this.onExit();\r\n            });\r\n        }\r\n    }\r\n}"]}