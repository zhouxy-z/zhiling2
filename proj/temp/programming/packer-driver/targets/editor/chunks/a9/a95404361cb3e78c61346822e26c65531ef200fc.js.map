{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/fight/display/Skill.ts"],"names":["Skill","RenderRoot2D","director","game","CfgMgr","GameObj","AffectType","TargetType","TestSkill","battleDataMgr","GameSet","constructor","$prefab","callback","effects","isLoop","startTick","endHandle","layer","Lay_Scene","$addComponent","onLoad","skill","getComponent","root","destroy","GetEffects","eventProxy","update","dt","totalTime","has","effectSet","isRunning","last","console","error","attacker","target","All","undefined","play","targetset","$hasLoad","loadSub","set","Reset","Play","receive","bind","h","k","runningls","skills","i","length","splice","node","parent","prefabNode","addChild","onTigger","targetType","affect","output","targets","isMy","onlyBuff","cardData","getCardByInstId","fromInstId","prefab","stdSkill","GetCardSkill","fromSkillId","stdCard","GetCard","configId","GetTerrain","SkillID","index","indexOf","SkillPrefabs","EffectType","handle","sub","Promise","resolve","reject","url","len","num","Create","tag","pop","name","route","log","push","getScene","on","RemoveAll","EndAll","tigger","all","Stop","playerId","skillId","instId","key","shift","hasSkill","buffid","replace"],"mappings":"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","sourcesContent":["import { Node, RenderRoot2D, UITransform, director, game } from \"cc\";\r\nimport { CfgMgr } from \"../../../manager/CfgMgr\";\r\nimport { GameObj } from \"../../../manager/GameRoot\";\r\nimport { AffectType, EffectSet, TargetSet, TargetType } from \"./EffectSet\";\r\nimport { EffectTarget, TestSkill } from \"./TestSkill\";\r\nimport { battleDataMgr } from \"../../battle/BattleDataMgr\";\r\nimport { GameSet } from \"../../../manager/GameSet\";\r\nimport { GameScene } from \"../GameScene\";\r\n\r\nexport class Skill extends GameObj {\r\n\r\n    protected $prefab: string;\r\n    protected callback: (attacker: Node, target: Node, affect: AffectType) => void;\r\n    protected effects: EffectSet[];\r\n    protected isLoop: boolean = false;\r\n    protected startTick = 0;\r\n\r\n    constructor() {\r\n        super();\r\n        this.layer = GameSet.Lay_Scene;\r\n        this.$addComponent(RenderRoot2D);\r\n    }\r\n\r\n    protected onLoad(): void {\r\n        let skill: TestSkill = this.getComponent(TestSkill);\r\n        let root = skill.getComponent(RenderRoot2D)\r\n        if (root) root.destroy();\r\n        this.effects = skill.GetEffects(this);\r\n        skill.eventProxy = this;\r\n    }\r\n    protected update(dt: number): void {\r\n        if (this.startTick && this.endHandle) {\r\n            if (game.totalTime - this.startTick > 3000) {\r\n                let has = false;\r\n                for (let effectSet of this.effects) {\r\n                    if (effectSet.isRunning && effectSet.isLoop) {\r\n                        has = true;\r\n                        break;\r\n                    } else if (effectSet.isRunning && effectSet.last && !effectSet.isLoop) {\r\n                        console.error(\"Skill Error!\");\r\n                        this.endHandle(effectSet.attacker, effectSet.target, AffectType.All);\r\n                        return;\r\n                    }\r\n                }\r\n                if (!has) {\r\n                    console.error(\"Skill Error!\");\r\n                    this.endHandle(undefined, undefined, AffectType.All);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    protected async play(targetset: TargetSet) {\r\n        this.startTick = game.totalTime;\r\n        if (!this.$hasLoad) await this.loadSub;\r\n        this.isLoop = true;\r\n        for (let set of this.effects) {\r\n            if (set) {\r\n                set.Reset();\r\n                if (set.root) {\r\n                    set.Play(this.receive.bind(this), targetset);\r\n                }\r\n                if (this.isLoop && set.last && !set.isLoop) this.isLoop = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    async receive() {\r\n        if (!this.$hasLoad) await this.loadSub;\r\n        let h = this.endHandle;\r\n        this.endHandle = undefined;\r\n        if (h) {\r\n            h(this.effects[0]?.attacker, this.effects[0]?.target, AffectType.All);\r\n        }\r\n\r\n        for (let k in Skill.runningls) {\r\n            let skills = Skill.runningls[k];\r\n            for (let i = 0; i < skills.length; i++) {\r\n                let skill = skills[i];\r\n                if (skill == this) {\r\n                    skills.splice(i, 1);\r\n                    if (!skills.length) delete Skill.runningls[k];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        super.receive();\r\n        this.startTick = 0;\r\n        if (this.effects) {\r\n            for (let effectSet of this.effects) {\r\n                effectSet.Reset();\r\n                if (effectSet.node.parent != this.prefabNode) {\r\n                    this.prefabNode.addChild(effectSet.node);\r\n                }\r\n            }\r\n        }\r\n        this.callback = undefined;\r\n    }\r\n\r\n    protected endHandle: (attacker: Node, target: Node, affect: AffectType) => void;\r\n    protected onTigger(effectSet?: EffectSet, targetType?: number, affect?: AffectType) {\r\n        let attacker = effectSet?.attacker;\r\n        let target = effectSet?.target;\r\n        let h = this.endHandle;\r\n        this.endHandle = undefined;\r\n        h && h(attacker, target, affect);\r\n    }\r\n\r\n    /**\r\n     * 播放技能\r\n     * @param cardId    释放此技能的卡片,如果不是卡片释放此项则传空\r\n     * @param skillId   技能id\r\n     * @param attacker  攻击者节点\r\n     * @param areas    友军节点\r\n     * @param targets   目标节点\r\n     * @param callback  回调，attacker攻击者节点，目标节点，效果类型枚举值\r\n     * @returns \r\n     */\r\n    static async Play(output: { fromInstId?: string, fromSkillId?: number }, targets: EffectTarget, isMy = true, callback?: (attacker: Node, target: Node, affect: AffectType) => void, onlyBuff = false): Promise<{ attacker: Node, target: Node, affect: AffectType }> {\r\n        let cardData = battleDataMgr.getCardByInstId(output.fromInstId);\r\n        let prefab: string;\r\n        let stdSkill = CfgMgr.GetCardSkill(output.fromSkillId);\r\n        if (cardData) {\r\n            let stdCard: any = CfgMgr.GetCard(cardData.configId);\r\n            if (!stdCard) stdCard = CfgMgr.GetTerrain(cardData.configId);\r\n            if (stdCard && stdCard.SkillID) {\r\n                let index = stdCard.SkillID.indexOf(output.fromSkillId);\r\n                prefab = stdCard.SkillPrefabs[index];\r\n            }\r\n            if (!prefab) {\r\n                prefab = stdSkill.SkillPrefabs[isMy ? 0 : 1] || stdSkill.SkillPrefabs[0];\r\n            }\r\n        } else {\r\n            if (isMy) {\r\n                prefab = stdSkill?.SkillPrefabs[0];\r\n            } else {\r\n                prefab = stdSkill?.SkillPrefabs[1] || stdSkill?.SkillPrefabs[0];\r\n            }\r\n        }\r\n        if (!prefab) {\r\n            callback && callback(targets.attacker, targets.targets[0], AffectType[stdSkill.EffectType]);\r\n            return undefined;\r\n        }\r\n        // if (prefab.indexOf(\"defaultSkill\") != -1) return;//暂时屏蔽默认特效\r\n        let handle: (attacker: Node, target: Node, affect: AffectType) => void;\r\n        let sub: Promise<any> = new Promise((resolve, reject) => {\r\n            handle = resolve;\r\n        });\r\n        let url = \"prefabs/particle/\" + prefab;\r\n        let len = targets.length, num = 0;\r\n        for (let i = 0; i < len; i++) {\r\n            // if (this.hasSkill(tag.route)) continue;\r\n            let skill: Skill = this.Create(url);\r\n            let tag = targets.pop(output.fromSkillId);\r\n            skill.name = prefab;\r\n            skill.callback = callback;\r\n            if (this.runningls[tag.route]) {\r\n                if (skill.isLoop) {\r\n                    skill.onTigger();\r\n                    skill.receive();\r\n                    continue;\r\n                }\r\n            } else {\r\n                this.runningls[tag.route] = [];\r\n            }\r\n            skill['skillId'] = output.fromInstId;\r\n            let skills = this.runningls[tag.route];\r\n            console.log(\"Skill.Play\", output.fromSkillId, url);\r\n            skills.push(skill);\r\n            director.getScene().addChild(skill);\r\n            skill.endHandle = handle;\r\n            skill.on(\"tigger\", skill.onTigger, skill);\r\n            skill.play(tag);\r\n            if (onlyBuff) {\r\n                if (!skill.$hasLoad) await skill.loadSub;\r\n                if (!skill.isLoop) {\r\n                    skill.receive();\r\n                    continue;\r\n                }\r\n            }\r\n            num++;\r\n        }\r\n        if (num <= 0) handle(targets.attacker, undefined, AffectType.All);\r\n        return sub;\r\n    }\r\n\r\n    protected static runningls: { [key: string]: Skill[] } = {};\r\n    /**\r\n     * 移除所有技能特效\r\n     */\r\n    static RemoveAll() {\r\n        for (let k in this.runningls) {\r\n            while (this.runningls[k].length) {\r\n                this.runningls[k].pop().receive();\r\n            }\r\n        }\r\n        this.runningls = {};\r\n    }\r\n\r\n    /**\r\n     * 停止所有\r\n     */\r\n    static EndAll() {\r\n        for (let k in this.runningls) {\r\n            let skills = this.runningls[k];\r\n            for (let skill of skills) {\r\n                for (let effectSet of skill.effects) {\r\n                    if (effectSet.tigger && effectSet.last) {\r\n                        skill.onTigger(effectSet, TargetType.all, AffectType.All);\r\n                        break;\r\n                    }\r\n                }\r\n                skill.receive();\r\n            }\r\n        }\r\n        this.runningls = {};\r\n    }\r\n\r\n    /**\r\n     * 删除技能特效\r\n     * @param key \r\n     */\r\n    static async Stop(playerId: string, skillId: number, instId: string) {\r\n        let route = skillId + \"_\" + instId;\r\n        for (let key in this.runningls) {\r\n            if (key.indexOf(route) == 0) {\r\n                let skills = this.runningls[key];\r\n                if (skills.length) {\r\n                    if (!skills[0]?.getComponent(TestSkill)?.isLoop) return;\r\n                    let skill = skills.shift();\r\n                    skill.receive();\r\n                    if (!skills.length) delete this.runningls[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 检测是否已有持续性技能运行\r\n     * @param route \r\n     */\r\n    protected static hasSkill(route: string) {\r\n        let buffid = route.replace(/\\_[^_]*$/, \"\");\r\n        for (let key in this.runningls) {\r\n            let skills = this.runningls[key];\r\n            for (let skill of skills) {\r\n                if (skill?.isLoop && key.indexOf(buffid) == 0) return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}"]}