{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/userInfo/UserHeadPanel.ts"],"names":["UserHeadPanel","Button","Label","Sprite","Toggle","SpriteFrame","UserHeadItem","ResMgr","Panel","AutoScroller","HeadabType","prefab","headBg","frameBg","icon","frame","stateLab","nameLab","descLab","attrCont","attrList","timeLab","headList","btn","unlockCondLab","navBtns","page","curSelectIndex","curSelectData","datas","onLoad","find","SetHandle","updateHeadItem","bind","node","on","onSelect","children","concat","CloseBy","onPage","EventType","CLICK","onBtnClick","SetPage","$hasLoad","initSub","undefined","getComponent","isChecked","flush","Page_Head","onShow","onHide","args","update","dt","t","indexOf","active","Page_Frame","UpdateDatas","SelectFirst","item","data","headItem","addComponent","SetData","index","resetSelect","select","getChildByName","updateSelect","stdHead","headUrl","LoadResAbSub","res","spriteFrame","string","HeadName","HeadDesc","getChildByPath","i","length"],"mappings":"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","sourcesContent":["import { Button, Label, Sprite, Toggle, Node, path, SpriteFrame } from \"cc\";\r\nimport { UserHeadItem } from \"./UserHeadItem\";;\r\nimport { folder_head, folder_head_round, ResMgr } from \"../../manager/ResMgr\";\r\nimport { DateUtils } from \"../../utils/DateUtils\";\r\nimport { Panel } from \"../../manager/GameRoot\";\r\nimport { AutoScroller } from \"../../component/AutoScroller\";\r\nimport { CfgMgr, StdHead } from \"../../manager/CfgMgr\";\r\n\r\nenum HeadabType {\r\n    Page_Head,//头像页签\r\n    Page_Frame,//头像框页签\r\n};\r\nexport class UserHeadPanel extends Panel {\r\n    protected prefab: string = \"prefabs/userInfo/UserHeadPanel\";\r\n    private headBg:Node;\r\n    private frameBg:Node;\r\n    private icon:Sprite;\r\n    private frame:Sprite;\r\n    private stateLab:Label;\r\n    private nameLab:Label;\r\n    private descLab:Label;\r\n    private attrCont:Node;\r\n    private attrList:AutoScroller;\r\n    private timeLab:Label;\r\n    private headList:AutoScroller;\r\n    private btn:Button;\r\n    private unlockCondLab:Label;\r\n    private navBtns:Node[];\r\n    private page:number;\r\n    private curSelectIndex:number;\r\n    private curSelectData:StdHead;\r\n    private datas:StdHead[] = [];\r\n    protected onLoad(): void {\r\n        this.headBg = this.find(\"headCont/headBg\");\r\n        this.frameBg = this.find(\"headCont/frameBg\");\r\n        this.icon = this.find(\"headCont/Mask/icon\", Sprite);\r\n        this.frame = this.find(\"headCont/frame\", Sprite);\r\n        this.nameLab = this.find(\"infoCont/headNameCont/nameLab\", Label);\r\n        this.descLab = this.find(\"infoCont/descCont/descLab\", Label);\r\n        this.attrCont = this.find(\"infoCont/attrCont\");\r\n        this.attrList = this.find(\"infoCont/attrCont/attrList\", AutoScroller);\r\n        // this.attrList.SetHandle(this.updateAttrItem.bind(this));\r\n        this.timeLab = this.find(\"infoCont/timeCont/timeLab\", Label);\r\n        this.headList = this.find(\"headList\", AutoScroller);\r\n        this.headList.SetHandle(this.updateHeadItem.bind(this));\r\n        this.headList.node.on('select', this.onSelect, this);\r\n        this.btn = this.find(\"btn\", Button);\r\n        this.unlockCondLab = this.find(\"unlockCondLab\", Label);\r\n\r\n        this.navBtns = this.find(\"navBar/view/content\").children.concat();\r\n        this.CloseBy(\"mask\");\r\n        this.CloseBy(\"closeBtn\");\r\n        for (let btn of this.navBtns) {\r\n            btn.on('toggle', this.onPage, this);\r\n        }\r\n        this.btn.node.on(Button.EventType.CLICK, this.onBtnClick, this);\r\n    }\r\n    async SetPage(page: number) {\r\n        if (!this.$hasLoad) await this.initSub;\r\n        if (!this.navBtns[page]) return;\r\n        this.page = undefined;\r\n        this.navBtns[page].getComponent(Toggle).isChecked = true;\r\n        this.onPage(this.navBtns[page].getComponent(Toggle));\r\n    }\r\n    public flush(page:number): void {\r\n        if(page == undefined){\r\n            page = HeadabType.Page_Head;\r\n        }\r\n        this.page = undefined;\r\n        this.SetPage(page);\r\n    }\r\n    \r\n    protected onShow(): void {\r\n        \r\n    }\r\n\r\n    protected onHide(...args: any[]): void {\r\n       \r\n    }\r\n    protected update(dt: number): void {\r\n        if(!this.curSelectData) return;\r\n        // if(this.curSelectData.LimitTime > 0){\r\n        //     this.timeLab.string = \"有效期：\" + DateUtils.FormatTime(PlayerData.GetServerTime(), \"%{d}天%{h}时%{m}分%{s}秒\");\r\n        // }else{\r\n        //     this.timeLab.string = \"有效期：永久\";\r\n        // }\r\n    }\r\n    private onPage(t: Toggle):void{\r\n        if (!t.isChecked) return;\r\n        let page = this.navBtns.indexOf(t.node);\r\n        if (page < 0 || page == this.page) return;\r\n        this.page = page;\r\n        switch (page) {\r\n            case HeadabType.Page_Head:\r\n                this.headBg.active = true;\r\n                this.frameBg.active = false;\r\n                this.frame.node.active = false;\r\n                // this.datas = CfgMgr.GetHeadList(StdHeadType.Head);\r\n                break;\r\n            case HeadabType.Page_Frame:\r\n                this.headBg.active = false;\r\n                this.frameBg.active = true;\r\n                this.frame.node.active = true;\r\n                // this.datas = CfgMgr.GetHeadList(StdHeadType.HeadFrame);\r\n                break;\r\n        }\r\n        this.curSelectIndex = -1;\r\n        this.headList.UpdateDatas(this.datas);\r\n        this.headList.SelectFirst();\r\n    }\r\n   \r\n    private onBtnClick(btn:Button):void{\r\n        \r\n    }\r\n\r\n    private updateHeadItem(item: Node, data: StdHead) {\r\n        let headItem = item.getComponent(UserHeadItem);\r\n        if (!headItem) headItem = item.addComponent(UserHeadItem);\r\n        headItem.SetData(data);\r\n    }\r\n    // private updateAttrItem(item: Node, data: AttrSub):void{\r\n    //     let nameLab:Label = item.getChildByName(\"nameLab\").getComponent(Label);\r\n    //     nameLab.string = data.name + \"：\";\r\n    //     let valLab:Label = item.getChildByName(\"valueLab\").getComponent(Label);\r\n    //     valLab.string = \"+\" + data.value + data.per;\r\n    // }\r\n    private onSelect(index: number, item: Node) {\r\n        if(this.curSelectIndex == index) return;\r\n        this.resetSelect();\r\n        let select:Node = item.getChildByName(\"select\");\r\n        select.active = true;\r\n        this.curSelectIndex = index;\r\n        this.updateSelect(this.datas[index]);\r\n    }\r\n    private updateSelect(stdHead:StdHead):void{\r\n        this.curSelectData = stdHead;\r\n        let headUrl:string;\r\n        // if(stdHead.HeadType == StdHeadType.Head){\r\n        //     headUrl = path.join(folder_head_round, stdHead.IconRes, \"spriteFrame\");\r\n        // }else if(stdHead.HeadType == StdHeadType.HeadFrame){\r\n        //     headUrl = path.join(folder_head_round, \"01\", \"spriteFrame\");\r\n        //     let frameUrl = path.join(folder_head, `frame/${stdHead.IconRes}`, \"spriteFrame\");\r\n        //     ResMgr.LoadResAbSub(frameUrl, SpriteFrame, res => {\r\n        //         this.frame.spriteFrame = res;\r\n        //     });\r\n        // } \r\n        ResMgr.LoadResAbSub(headUrl, SpriteFrame, res => {\r\n            this.icon.spriteFrame = res;\r\n        });\r\n        this.nameLab.string = stdHead.HeadName;\r\n        this.descLab.string = stdHead.HeadDesc;\r\n        // let fightAttrs:AttrSub[] = [];\r\n        // let attrs:AttrSub[] = [];\r\n        // let totlaAttrs:AttrSub[] = [];\r\n        // let forAttr = (attrList: number[], valList: number[], attrs:AttrSub[]) => {\r\n        //     for (let i = 0; i < attrList.length; i++) {\r\n        //         let type = attrList[i];\r\n        //         let val = valList && i < valList.length ? valList[i] : 0;\r\n        //         let attrSub = FormatAttr(type, true);\r\n        //         val = SetPerValue(attrSub, val);\r\n        //         attrSub.value = val;\r\n        //         attrs.push(attrSub);\r\n               \r\n        //     }\r\n        // };\r\n        // if (stdHead.Attr.length) {\r\n        //     forAttr(stdHead.Attr, stdHead.AttrValue, attrs);\r\n        // }\r\n        // if (stdHead.AttrFight.length) {\r\n        //     forAttr(stdHead.AttrFight, stdHead.AttrFightValue, fightAttrs);\r\n        // }\r\n        \r\n        // totlaAttrs = fightAttrs.concat(attrs);\r\n        // this.attrCont.active = totlaAttrs.length > 0;\r\n        // this.attrList.UpdateDatas(totlaAttrs);\r\n    }\r\n    private resetSelect():void{\r\n        let children:Node[] = this.headList.node.getChildByPath(\"view/content\").children;\r\n        for (let i = 0; i < children.length; i++) {\r\n            let node:Node = children[i];\r\n            node.getChildByName(\"select\").active = false;\r\n        }\r\n    }\r\n}"]}