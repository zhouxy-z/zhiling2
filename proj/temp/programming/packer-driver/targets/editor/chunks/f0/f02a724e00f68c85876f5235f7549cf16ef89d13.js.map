{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/fight/opOutput/Out_Peek.ts"],"names":["Out_Peek","proto","BattleBaseComp","battleDataMgr","start","data","handCards","Object","keys","length","scene","PeekHandCards","base","BattleRoomCardLocation","Hand","isExit","terrainData","key","peek","push","ownerPlayerId","isplayerA","isPlayerA","PeekTerrain","deckCards","Deck","exit","reset"],"mappings":";;;oEAOaA,Q;;;;;;;;;;;;;;;;;;;;;;AAPNC,MAAAA,K;;AACEC,MAAAA,c,iBAAAA,c;;AACAC,MAAAA,a,iBAAAA,a;;;;;;;AAET;AACA;AACA;0BACaH,Q,GAAN,MAAMA,QAAN;AAAA;AAAA,4CAA2E;AACzD,cAALI,KAAK,GAAG;AAEpB,cAAI,KAAKC,IAAL,CAAUC,SAAV,IAAuBC,MAAM,CAACC,IAAP,CAAY,KAAKH,IAAL,CAAUC,SAAtB,EAAiCG,MAA5D,EAAoE;AAChE;AACA,kBAAM,KAAKC,KAAL,CAAWC,aAAX,CAAyB,KAAKN,IAA9B,EAAoC;AAAA;AAAA,gCAAMO,IAAN,CAAWC,sBAAX,CAAkCC,IAAtE,CAAN;AACA,gBAAI,KAAKC,MAAT,EAAiB;AACpB,WAJD,MAIO,IAAI,KAAKV,IAAL,CAAUW,WAAV,IAAyBT,MAAM,CAACC,IAAP,CAAY,KAAKH,IAAL,CAAUW,WAAtB,EAAmCP,MAAhE,EAAwE;AAC3E;AACA,gBAAIO,WAAJ;;AACA,iBAAK,IAAIC,GAAT,IAAgB,KAAKZ,IAAL,CAAUW,WAA1B,EAAuC;AACnCA,cAAAA,WAAW,GAAG,KAAKX,IAAL,CAAUW,WAAV,CAAsBC,GAAtB,CAAd;AACA,kBAAI,CAACD,WAAW,CAACE,IAAjB,EAAuBF,WAAW,CAACE,IAAZ,GAAmB,EAAnB;AACvBF,cAAAA,WAAW,CAACE,IAAZ,CAAiBC,IAAjB,CAAsB,KAAKC,aAA3B;AACH,aAP0E,CAS3E;;;AACA,gBAAIC,SAAS,GAAG;AAAA;AAAA,gDAAcC,SAAd,CAAwB,KAAKF,aAA7B,CAAhB;AACA,kBAAM,KAAKV,KAAL,CAAWa,WAAX,CAAuBF,SAAvB,EAAkC,KAAKhB,IAAvC,EAA6C,KAAKe,aAAlD,CAAN;AACA,gBAAI,KAAKL,MAAT,EAAiB;AACpB,WAbM,MAaA,IAAI,KAAKV,IAAL,CAAUmB,SAAV,IAAuBjB,MAAM,CAACC,IAAP,CAAY,KAAKH,IAAL,CAAUmB,SAAtB,EAAiCf,MAA5D,EAAoE;AACvE;AACA,kBAAM,KAAKC,KAAL,CAAWC,aAAX,CAAyB,KAAKN,IAA9B,EAAoC;AAAA;AAAA,gCAAMO,IAAN,CAAWC,sBAAX,CAAkCY,IAAtE,CAAN;AACA,gBAAI,KAAKV,MAAT,EAAiB;AACpB;;AACD,eAAKW,IAAL;AACH;;AAESC,QAAAA,KAAK,GAAS,CAEvB;;AA9B6E,O","sourcesContent":["import proto from \"../../../net/Protocol\";\r\nimport { BattleBaseComp } from \"../../battle/BattleBaseComp\";\r\nimport { battleDataMgr } from \"../../battle/BattleDataMgr\";\r\n\r\n/**\r\n * 窥视卡牌\r\n */\r\nexport class Out_Peek extends BattleBaseComp<proto.base.IBattleRoomOpOutput_Peek> {\r\n    protected async start() {\r\n\r\n        if (this.data.handCards && Object.keys(this.data.handCards).length) {\r\n            //窥视手卡\r\n            await this.scene.PeekHandCards(this.data, proto.base.BattleRoomCardLocation.Hand);\r\n            if (this.isExit) return;\r\n        } else if (this.data.terrainData && Object.keys(this.data.terrainData).length) {\r\n            //将窥视方加入窥视队列（服务器会在下个回合才添加上）\r\n            let terrainData: proto.base.IBattleRoomTerrainData;\r\n            for (let key in this.data.terrainData) {\r\n                terrainData = this.data.terrainData[key];\r\n                if (!terrainData.peek) terrainData.peek = [];\r\n                terrainData.peek.push(this.ownerPlayerId);\r\n            }\r\n\r\n            //窥视地形\r\n            let isplayerA = battleDataMgr.isPlayerA(this.ownerPlayerId)\r\n            await this.scene.PeekTerrain(isplayerA, this.data, this.ownerPlayerId);\r\n            if (this.isExit) return;\r\n        } else if (this.data.deckCards && Object.keys(this.data.deckCards).length) {\r\n            //窥视卡组\r\n            await this.scene.PeekHandCards(this.data, proto.base.BattleRoomCardLocation.Deck);\r\n            if (this.isExit) return;\r\n        }\r\n        this.exit();\r\n    }\r\n\r\n    protected reset(): void {\r\n\r\n    }\r\n}"]}