{"version":3,"sources":["file:///C:/ProgramData/cocos/editors/Creator/3.8.4/resources/resources/3d/engine/editor/assets/default_renderpipeline/builtin-pipeline.ts"],"names":["PipelineConfigs","CameraConfigs","forwardNeedClearColor","camera","clearFlag","ClearFlagBit","COLOR","STENCIL","getCsmMainLightViewport","light","w","h","level","vp","screenSpaceSignY","shadowFixedArea","csmLevel","CSMLevel","LEVEL_1","left","top","width","Math","trunc","height","floor","max","setupPipelineConfigs","ppl","configs","sampleFeature","FormatFeatureBit","SAMPLED_TEXTURE","LINEAR_FILTER","device","isWeb","sys","isNative","isWebGL1","gfxAPI","gfx","API","WEBGL","isWebGPU","WEBGPU","isMobile","isHDR","pipelineSceneData","useFloatOutput","getMacroBool","toneMappingType","postSettings","shadowInfo","shadows","shadowEnabled","enabled","shadowMapFormat","pipeline","supportsR32FloatTexture","Format","R32F","RGBA8","shadowMapSize","set","size","usePlanarShadow","type","renderer","scene","ShadowType","Planar","capabilities","supportDepthSample","getFormatFeatures","DEPTH_STENCIL","platform","x","clipSpaceSignY","setupPostProcessConfigs","pipelineConfigs","settings","cameraConfigs","enableDOF","depthOfField","material","enableBloom","bloom","enableColorGrading","colorGrading","colorGradingMap","enableFXAA","fxaa","enablePostProcess","setupCameraConfigs","window","isMainGameWindow","cameraUsage","CameraUsage","GAME","swapchain","isEditorView","SCENE_VIEW","PREVIEW","colorName","depthStencilName","useFullPipeline","visibility","Layers","Enum","DEFAULT","enableMainLightShadowMap","mainLight","enableMainLightPlanarShadowMap","enablePlanarReflectionProbe","enableProfiler","DEBUG","pipelineSettings","defaultSettings","editorSettings","rendering","getEditorPipelineSettings","enableMSAA","msaa","shadingScale","enableShadingScale","enableFSR","fsr","singleForwardRadiancePass","enableHDR","radianceFormat","RGBA16F","assert","clamp","geometry","Material","Vec2","Vec3","Vec4","cclegacy","PipelineEventType","warn","EDITOR","makePipelineSettings","AABB","Sphere","intersect","Color","LoadOp","StoreOp","TextureType","Viewport","LightType","mobileMaxSpotLightShadowMaps","QueueHint","SceneFlags","ResourceFlags","ResourceResidency","ForwardLighting","lights","shadowEnabledSpotLights","_sphere","create","_boundingBox","_rangedDirLightBoundingBox","cullLights","frustum","cameraPos","length","spotLights","baked","position","y","z","range","sphereFrustum","push","sphereLights","pointLights","rangedDirLights","transform","node","getWorldMatrix","aabbFrustum","sort","lhs","rhs","squaredDistance","_addLightQueues","pass","queue","addQueue","BLEND","SPHERE","name","SPOT","POINT","RANGED_DIRECTIONAL","addScene","addSpotlightShadowPasses","maxNumShadowMaps","i","shadowPass","addRenderPass","addRenderTarget","CLEAR","STORE","addDepthStencil","DISCARD","NONE","OPAQUE","MASK","SHADOW_CASTER","useLightFrustum","addLightQueues","addTexture","addLightPasses","depthStencilStoreOp","id","viewport","count","storeOp","setViewport","LOAD","isMultipleLightPassesNeeded","BuiltinPipelineBuilder","_pipelineEvent","director","root","pipelineEvent","_clearColor","_clearColorTransparentBlack","_reflectionProbeClearColor","_viewport","_configs","_cameraConfigs","_cocParams","_cocTexSize","_bloomParams","_bloomTexSize","_bloomWidths","_bloomHeights","_bloomTexNames","_colorGradingTexSize","_fxaaParams","_fsrParams","_fsrTexSize","_copyAndTonemapMaterial","_initialized","forwardLighting","windowResize","nativeWidth","nativeHeight","renderWindowId","addRenderWindow","TEX2D","sampleCount","COLOR_ATTACHMENT","MEMORYLESS","DEPTH_STENCIL_ATTACHMENT","halfWidth","halfHeight","bloomWidth","bloomHeight","iterations","setProperty","setup","cameras","_initMaterials","emit","RENDER_CAMERA_BEGIN","_buildForwardPipeline","_buildSimplePipeline","RENDER_CAMERA_END","round","clearColor","clearDepth","clearStencil","flags","UI","PROFILER","showStatistics","sceneDepth","radianceName","ldrColorName","_addCascadedShadowMapPass","_tryAddReflectionProbePasses","lastPass","dofRadianceName","_addForwardRadiancePasses","_addDepthOfFieldPasses","_addKawaseDualFilterBloomPasses","copyAndTonemapPassNeeded","ldrColorBufferName","_addCopyAndTonemapPass","aaColorName","_addFxaaPass","_addFsrPass","_addCopyPass","_addTonemapResizeOrSuperResolutionPasses","_addUIQueue","csmSupported","input","output","setVec4","addFullscreenQuad","lutTex","isSquareMap","setVec2","setFloat","contribute","toneMapping","_buildForwardMainLightPass","colorStoreOp","undefined","dofMaterial","depthStencil","focusDistance","focusRange","bokehRadius","cocName","prefilterName","bokehName","filterName","cocPass","setMat4","matProj","addCameraQuad","prefilterPass","bokehPass","filterPass","combinePass","bloomMaterial","sizeCount","threshold","enableAlphaMask","downPass","upPass","fsrMaterial","sharpness","fsrColorName","easuPass","rcasPass","fxaaMaterial","disableMSAA","_addForwardSingleRadiancePass","_addForwardMultipleRadiancePasses","addPlanarShadowQueue","sceneFlags","geometryRenderer","GEOMETRY","msaaRadianceName","msaaDepthStencilName","msPass","addMultisampleRenderPass","resolveRenderTarget","PLANAR_SHADOW","firstStoreOp","_buildReflectionProbePass","packRGBE","REFLECTION_PROBE","reflectionProbeManager","internal","probes","getProbes","maxProbeCount","probeID","probe","needRender","area","renderArea","probeType","ProbeType","PLANAR","realtimePlanarTexture","probePass","faceIdx","bakedCubeTextures","updateCameraDir","_uuid","initialize","effectName","effectAsset","setCustomPipeline"],"mappings":"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","sourcesContent":["/*\r\n Copyright (c) 2021-2024 Xiamen Yaji Software Co., Ltd.\r\n\r\n https://www.cocos.com/\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining a copy\r\n of this software and associated documentation files (the \"Software\"), to deal\r\n in the Software without restriction, including without limitation the rights to\r\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\r\n of the Software, and to permit persons to whom the Software is furnished to do so,\r\n subject to the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be included in\r\n all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n THE SOFTWARE.\r\n*/\r\n\r\nimport { DEBUG, EDITOR } from 'cc/env';\r\nimport {\r\n    assert,\r\n    clamp,\r\n    geometry,\r\n    gfx,\r\n    Layers,\r\n    Material,\r\n    pipeline,\r\n    renderer,\r\n    rendering,\r\n    sys,\r\n    Vec2,\r\n    Vec3,\r\n    Vec4,\r\n    cclegacy,\r\n    PipelineEventType,\r\n    PipelineEventProcessor,\r\n    ReflectionProbeManager,\r\n    warn,\r\n} from 'cc';\r\n\r\nimport {\r\n    PipelineSettings,\r\n    makePipelineSettings,\r\n} from './builtin-pipeline-types';\r\n\r\nconst { AABB, Sphere, intersect } = geometry;\r\nconst { ClearFlagBit, Color, Format, FormatFeatureBit, LoadOp, StoreOp, TextureType, Viewport } = gfx;\r\nconst { scene } = renderer;\r\nconst { CameraUsage, CSMLevel, LightType } = scene;\r\n\r\nfunction forwardNeedClearColor(camera: renderer.scene.Camera): boolean {\r\n    return !!(camera.clearFlag & (ClearFlagBit.COLOR | (ClearFlagBit.STENCIL << 1)));\r\n}\r\n\r\nfunction getCsmMainLightViewport(\r\n    light: renderer.scene.DirectionalLight,\r\n    w: number,\r\n    h: number,\r\n    level: number,\r\n    vp: gfx.Viewport,\r\n    screenSpaceSignY: number,\r\n): void {\r\n    if (light.shadowFixedArea || light.csmLevel === CSMLevel.LEVEL_1) {\r\n        vp.left = 0;\r\n        vp.top = 0;\r\n        vp.width = Math.trunc(w);\r\n        vp.height = Math.trunc(h);\r\n    } else {\r\n        vp.left = Math.trunc(level % 2 * 0.5 * w);\r\n        if (screenSpaceSignY > 0) {\r\n            vp.top = Math.trunc((1 - Math.floor(level / 2)) * 0.5 * h);\r\n        } else {\r\n            vp.top = Math.trunc(Math.floor(level / 2) * 0.5 * h);\r\n        }\r\n        vp.width = Math.trunc(0.5 * w);\r\n        vp.height = Math.trunc(0.5 * h);\r\n    }\r\n    vp.left = Math.max(0, vp.left);\r\n    vp.top = Math.max(0, vp.top);\r\n    vp.width = Math.max(1, vp.width);\r\n    vp.height = Math.max(1, vp.height);\r\n}\r\n\r\nclass PipelineConfigs {\r\n    isWeb = false;\r\n    isWebGL1 = false;\r\n    isWebGPU = false;\r\n    isMobile = false;\r\n    isHDR = false;\r\n    useFloatOutput = false;\r\n    toneMappingType = 0; // 0: ACES, 1: None\r\n    shadowEnabled = false;\r\n    shadowMapFormat = Format.R32F;\r\n    shadowMapSize = new Vec2(1, 1);\r\n    usePlanarShadow = false;\r\n    screenSpaceSignY = 1;\r\n    supportDepthSample = false;\r\n    mobileMaxSpotLightShadowMaps = 1;\r\n\r\n    platform = new Vec4(0, 0, 0, 0);\r\n}\r\n\r\nfunction setupPipelineConfigs(\r\n    ppl: rendering.BasicPipeline,\r\n    configs: PipelineConfigs,\r\n): void {\r\n    const sampleFeature = FormatFeatureBit.SAMPLED_TEXTURE | FormatFeatureBit.LINEAR_FILTER;\r\n    const device = ppl.device;\r\n    // Platform\r\n    configs.isWeb = !sys.isNative;\r\n    configs.isWebGL1 = device.gfxAPI === gfx.API.WEBGL;\r\n    configs.isWebGPU = device.gfxAPI === gfx.API.WEBGPU;\r\n    configs.isMobile = sys.isMobile;\r\n\r\n    // Rendering\r\n    configs.isHDR = ppl.pipelineSceneData.isHDR; // Has tone mapping\r\n    configs.useFloatOutput = ppl.getMacroBool('CC_USE_FLOAT_OUTPUT');\r\n    configs.toneMappingType = ppl.pipelineSceneData.postSettings.toneMappingType;\r\n    // Shadow\r\n    const shadowInfo = ppl.pipelineSceneData.shadows;\r\n    configs.shadowEnabled = shadowInfo.enabled;\r\n    configs.shadowMapFormat = pipeline.supportsR32FloatTexture(ppl.device) ? Format.R32F : Format.RGBA8;\r\n    configs.shadowMapSize.set(shadowInfo.size);\r\n    configs.usePlanarShadow = shadowInfo.enabled && shadowInfo.type === renderer.scene.ShadowType.Planar;\r\n    // Device\r\n    configs.screenSpaceSignY = ppl.device.capabilities.screenSpaceSignY;\r\n    configs.supportDepthSample = (ppl.device.getFormatFeatures(Format.DEPTH_STENCIL) & sampleFeature) === sampleFeature;\r\n    // Constants\r\n    const screenSpaceSignY = device.capabilities.screenSpaceSignY;\r\n    configs.platform.x = configs.isMobile ? 1.0 : 0.0;\r\n    configs.platform.w = (screenSpaceSignY * 0.5 + 0.5) << 1 | (device.capabilities.clipSpaceSignY * 0.5 + 0.5);\r\n}\r\n\r\nconst defaultSettings = makePipelineSettings();\r\n\r\nclass CameraConfigs {\r\n    colorName = '';\r\n    depthStencilName = '';\r\n    enableMainLightShadowMap = false;\r\n    enableMainLightPlanarShadowMap = false;\r\n    enablePostProcess = false;\r\n    enableProfiler = false;\r\n    enableShadingScale = false;\r\n    enableMSAA = false;\r\n    enableDOF = false;\r\n    enableBloom = false;\r\n    enableColorGrading = false;\r\n    enableFXAA = false;\r\n    enableFSR = false;\r\n    enableHDR = false;\r\n    enablePlanarReflectionProbe = false;\r\n    useFullPipeline = false;\r\n    singleForwardRadiancePass = false;\r\n    radianceFormat = gfx.Format.RGBA8;\r\n    shadingScale = 0.5;\r\n    settings: PipelineSettings = defaultSettings;\r\n}\r\n\r\nfunction setupPostProcessConfigs(\r\n    pipelineConfigs: PipelineConfigs,\r\n    settings: PipelineSettings,\r\n    cameraConfigs: CameraConfigs,\r\n) {\r\n    cameraConfigs.enableDOF = pipelineConfigs.supportDepthSample\r\n        && settings.depthOfField.enabled\r\n        && !!settings.depthOfField.material;\r\n\r\n    cameraConfigs.enableBloom = settings.bloom.enabled\r\n        && !!settings.bloom.material;\r\n\r\n    cameraConfigs.enableColorGrading = settings.colorGrading.enabled\r\n        && !!settings.colorGrading.material\r\n        && !!settings.colorGrading.colorGradingMap;\r\n\r\n    cameraConfigs.enableFXAA = settings.fxaa.enabled\r\n        && !!settings.fxaa.material;\r\n\r\n    cameraConfigs.enablePostProcess = (cameraConfigs.enableDOF\r\n        || cameraConfigs.enableBloom\r\n        || cameraConfigs.enableColorGrading\r\n        || cameraConfigs.enableFXAA);\r\n}\r\n\r\nfunction setupCameraConfigs(\r\n    camera: renderer.scene.Camera,\r\n    pipelineConfigs: PipelineConfigs,\r\n    cameraConfigs: CameraConfigs,\r\n): void {\r\n    const window = camera.window;\r\n    const isMainGameWindow: boolean = camera.cameraUsage === CameraUsage.GAME && !!window.swapchain;\r\n    const isEditorView: boolean = camera.cameraUsage === CameraUsage.SCENE_VIEW || camera.cameraUsage === CameraUsage.PREVIEW;\r\n\r\n    cameraConfigs.colorName = window.colorName;\r\n    cameraConfigs.depthStencilName = window.depthStencilName;\r\n\r\n    cameraConfigs.useFullPipeline = (camera.visibility & (Layers.Enum.DEFAULT)) !== 0;\r\n\r\n    cameraConfigs.enableMainLightShadowMap = pipelineConfigs.shadowEnabled\r\n        && !pipelineConfigs.usePlanarShadow\r\n        && !!camera.scene\r\n        && !!camera.scene.mainLight\r\n        && camera.scene.mainLight.shadowEnabled;\r\n\r\n    cameraConfigs.enableMainLightPlanarShadowMap = pipelineConfigs.shadowEnabled\r\n        && pipelineConfigs.usePlanarShadow\r\n        && !!camera.scene\r\n        && !!camera.scene.mainLight\r\n        && camera.scene.mainLight.shadowEnabled;\r\n\r\n    cameraConfigs.enablePlanarReflectionProbe = isMainGameWindow || camera.cameraUsage === CameraUsage.SCENE_VIEW;\r\n\r\n    cameraConfigs.enableProfiler = DEBUG && isMainGameWindow;\r\n\r\n    cameraConfigs.settings = camera.pipelineSettings\r\n        ? camera.pipelineSettings as PipelineSettings : defaultSettings;\r\n\r\n    setupPostProcessConfigs(pipelineConfigs, cameraConfigs.settings, cameraConfigs);\r\n\r\n    if (isEditorView) {\r\n        const editorSettings = rendering.getEditorPipelineSettings() as PipelineSettings | null;\r\n        if (editorSettings) {\r\n            cameraConfigs.settings = editorSettings;\r\n            setupPostProcessConfigs(pipelineConfigs,\r\n                cameraConfigs.settings, cameraConfigs);\r\n        }\r\n    }\r\n\r\n    // MSAA\r\n    cameraConfigs.enableMSAA = cameraConfigs.settings.msaa.enabled\r\n        && !pipelineConfigs.isWeb // TODO(zhouzhenglong): remove this constraint\r\n        && !pipelineConfigs.isWebGL1;\r\n\r\n    // Shading scale\r\n    cameraConfigs.shadingScale = cameraConfigs.settings.shadingScale;\r\n    cameraConfigs.enableShadingScale = cameraConfigs.settings.enableShadingScale\r\n        && cameraConfigs.shadingScale !== 1.0;\r\n\r\n    // FSR (Depend on Shading scale)\r\n    cameraConfigs.enableFSR = cameraConfigs.settings.fsr.enabled\r\n        && !!cameraConfigs.settings.fsr.material\r\n        && cameraConfigs.enableShadingScale\r\n        && cameraConfigs.shadingScale < 1.0;\r\n\r\n    // Forward rendering (Depend on MSAA and TBR)\r\n    cameraConfigs.singleForwardRadiancePass\r\n        = pipelineConfigs.isMobile || cameraConfigs.enableMSAA;\r\n\r\n    cameraConfigs.enableHDR = cameraConfigs.useFullPipeline\r\n        && pipelineConfigs.useFloatOutput;\r\n\r\n    cameraConfigs.radianceFormat = cameraConfigs.enableHDR\r\n        ? gfx.Format.RGBA16F : gfx.Format.RGBA8;\r\n}\r\n\r\nif (rendering) {\r\n\r\n    const { QueueHint, SceneFlags, ResourceFlags, ResourceResidency } = rendering;\r\n\r\n    class ForwardLighting {\r\n        // Active lights\r\n        private readonly lights: renderer.scene.Light[] = [];\r\n        // Active spot lights with shadows (Mutually exclusive with `lights`)\r\n        private readonly shadowEnabledSpotLights: renderer.scene.SpotLight[] = [];\r\n\r\n        // Internal cached resources\r\n        private readonly _sphere = Sphere.create(0, 0, 0, 1);\r\n        private readonly _boundingBox = new AABB();\r\n        private readonly _rangedDirLightBoundingBox = new AABB(0.0, 0.0, 0.0, 0.5, 0.5, 0.5);\r\n\r\n        // ----------------------------------------------------------------\r\n        // Interface\r\n        // ----------------------------------------------------------------\r\n        public cullLights(scene: renderer.RenderScene, frustum: geometry.Frustum, cameraPos?: Vec3): void {\r\n            // TODO(zhouzhenglong): Make light culling native\r\n            this.lights.length = 0;\r\n            this.shadowEnabledSpotLights.length = 0;\r\n            // spot lights\r\n            for (const light of scene.spotLights) {\r\n                if (light.baked) {\r\n                    continue;\r\n                }\r\n                Sphere.set(this._sphere, light.position.x, light.position.y, light.position.z, light.range);\r\n                if (intersect.sphereFrustum(this._sphere, frustum)) {\r\n                    if (light.shadowEnabled) {\r\n                        this.shadowEnabledSpotLights.push(light);\r\n                    } else {\r\n                        this.lights.push(light);\r\n                    }\r\n                }\r\n            }\r\n            // sphere lights\r\n            for (const light of scene.sphereLights) {\r\n                if (light.baked) {\r\n                    continue;\r\n                }\r\n                Sphere.set(this._sphere, light.position.x, light.position.y, light.position.z, light.range);\r\n                if (intersect.sphereFrustum(this._sphere, frustum)) {\r\n                    this.lights.push(light);\r\n                }\r\n            }\r\n            // point lights\r\n            for (const light of scene.pointLights) {\r\n                if (light.baked) {\r\n                    continue;\r\n                }\r\n                Sphere.set(this._sphere, light.position.x, light.position.y, light.position.z, light.range);\r\n                if (intersect.sphereFrustum(this._sphere, frustum)) {\r\n                    this.lights.push(light);\r\n                }\r\n            }\r\n            // ranged dir lights\r\n            for (const light of scene.rangedDirLights) {\r\n                AABB.transform(this._boundingBox, this._rangedDirLightBoundingBox, light.node!.getWorldMatrix());\r\n                if (intersect.aabbFrustum(this._boundingBox, frustum)) {\r\n                    this.lights.push(light);\r\n                }\r\n            }\r\n\r\n            if (cameraPos) {\r\n                this.shadowEnabledSpotLights.sort(\r\n                    (lhs, rhs) => Vec3.squaredDistance(cameraPos, lhs.position) - Vec3.squaredDistance(cameraPos, rhs.position),\r\n                );\r\n            }\r\n        }\r\n        private _addLightQueues(camera: renderer.scene.Camera, pass: rendering.BasicRenderPassBuilder): void {\r\n            for (const light of this.lights) {\r\n                const queue = pass.addQueue(QueueHint.BLEND, 'forward-add');\r\n                switch (light.type) {\r\n                    case LightType.SPHERE:\r\n                        queue.name = 'sphere-light';\r\n                        break;\r\n                    case LightType.SPOT:\r\n                        queue.name = 'spot-light';\r\n                        break;\r\n                    case LightType.POINT:\r\n                        queue.name = 'point-light';\r\n                        break;\r\n                    case LightType.RANGED_DIRECTIONAL:\r\n                        queue.name = 'ranged-directional-light';\r\n                        break;\r\n                    default:\r\n                        queue.name = 'unknown-light';\r\n                }\r\n                queue.addScene(\r\n                    camera,\r\n                    SceneFlags.BLEND,\r\n                    light,\r\n                );\r\n            }\r\n        }\r\n        public addSpotlightShadowPasses(\r\n            ppl: rendering.BasicPipeline,\r\n            camera: renderer.scene.Camera,\r\n            maxNumShadowMaps: number,\r\n        ): void {\r\n            let i = 0;\r\n            for (const light of this.shadowEnabledSpotLights) {\r\n                const shadowMapSize = ppl.pipelineSceneData.shadows.size;\r\n                const shadowPass = ppl.addRenderPass(shadowMapSize.x, shadowMapSize.y, 'default');\r\n                shadowPass.name = `SpotLightShadowPass${i}`;\r\n                shadowPass.addRenderTarget(`SpotShadowMap${i}`, LoadOp.CLEAR, StoreOp.STORE, new Color(1, 1, 1, 1));\r\n                shadowPass.addDepthStencil(`SpotShadowDepth${i}`, LoadOp.CLEAR, StoreOp.DISCARD);\r\n                shadowPass.addQueue(QueueHint.NONE, 'shadow-caster')\r\n                    .addScene(camera, SceneFlags.OPAQUE | SceneFlags.MASK | SceneFlags.SHADOW_CASTER)\r\n                    .useLightFrustum(light);\r\n                ++i;\r\n                if (i >= maxNumShadowMaps) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        public addLightQueues(pass: rendering.BasicRenderPassBuilder,\r\n            camera: renderer.scene.Camera, maxNumShadowMaps: number): void {\r\n            this._addLightQueues(camera, pass);\r\n            let i = 0;\r\n            for (const light of this.shadowEnabledSpotLights) {\r\n                // Add spot-light pass\r\n                // Save last RenderPass to the `pass` variable\r\n                // TODO(zhouzhenglong): Fix per queue addTexture\r\n                pass.addTexture(`SpotShadowMap${i}`, 'cc_spotShadowMap');\r\n                const queue = pass.addQueue(QueueHint.BLEND, 'forward-add');\r\n                queue.addScene(camera, SceneFlags.BLEND, light);\r\n                ++i;\r\n                if (i >= maxNumShadowMaps) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Notice: ForwardLighting cannot handle a lot of lights.\r\n        // If there are too many lights, the performance will be very poor.\r\n        // If many lights are needed, please implement a forward+ or deferred rendering pipeline.\r\n        public addLightPasses(\r\n            colorName: string,\r\n            depthStencilName: string,\r\n            depthStencilStoreOp: gfx.StoreOp,\r\n            id: number, // window id\r\n            width: number,\r\n            height: number,\r\n            camera: renderer.scene.Camera,\r\n            viewport: gfx.Viewport,\r\n            ppl: rendering.BasicPipeline,\r\n            pass: rendering.BasicRenderPassBuilder,\r\n        ): rendering.BasicRenderPassBuilder {\r\n            this._addLightQueues(camera, pass);\r\n\r\n            let count = 0;\r\n            const shadowMapSize = ppl.pipelineSceneData.shadows.size;\r\n            for (const light of this.shadowEnabledSpotLights) {\r\n                const shadowPass = ppl.addRenderPass(shadowMapSize.x, shadowMapSize.y, 'default');\r\n                shadowPass.name = 'SpotlightShadowPass';\r\n                // Reuse csm shadow map\r\n                shadowPass.addRenderTarget(`ShadowMap${id}`, LoadOp.CLEAR, StoreOp.STORE, new Color(1, 1, 1, 1));\r\n                shadowPass.addDepthStencil(`ShadowDepth${id}`, LoadOp.CLEAR, StoreOp.DISCARD);\r\n                shadowPass.addQueue(QueueHint.NONE, 'shadow-caster')\r\n                    .addScene(camera, SceneFlags.OPAQUE | SceneFlags.MASK | SceneFlags.SHADOW_CASTER)\r\n                    .useLightFrustum(light);\r\n\r\n                // Add spot-light pass\r\n                // Save last RenderPass to the `pass` variable\r\n                ++count;\r\n                const storeOp = count === this.shadowEnabledSpotLights.length\r\n                    ? depthStencilStoreOp\r\n                    : StoreOp.STORE;\r\n\r\n                pass = ppl.addRenderPass(width, height, 'default');\r\n                pass.name = 'SpotlightWithShadowMap';\r\n                pass.setViewport(viewport);\r\n                pass.addRenderTarget(colorName, LoadOp.LOAD);\r\n                pass.addDepthStencil(depthStencilName, LoadOp.LOAD, storeOp);\r\n                pass.addTexture(`ShadowMap${id}`, 'cc_spotShadowMap');\r\n                const queue = pass.addQueue(QueueHint.BLEND, 'forward-add');\r\n                queue.addScene(\r\n                    camera,\r\n                    SceneFlags.BLEND,\r\n                    light,\r\n                );\r\n            }\r\n            return pass;\r\n        }\r\n\r\n        public isMultipleLightPassesNeeded(): boolean {\r\n            return this.shadowEnabledSpotLights.length > 0;\r\n        }\r\n    }\r\n\r\n    class BuiltinPipelineBuilder implements rendering.PipelineBuilder {\r\n        private readonly _pipelineEvent: PipelineEventProcessor = cclegacy.director.root.pipelineEvent as PipelineEventProcessor;\r\n        // Internal cached resources\r\n        private readonly _clearColor = new Color(0, 0, 0, 1);\r\n        private readonly _clearColorTransparentBlack = new Color(0, 0, 0, 0);\r\n        private readonly _reflectionProbeClearColor = new Vec3(0, 0, 0);\r\n        private readonly _viewport = new Viewport();\r\n        private readonly _configs = new PipelineConfigs();\r\n        private readonly _cameraConfigs = new CameraConfigs();\r\n        // DepthOfField\r\n        private readonly _cocParams = new Vec4(0, 0, 0, 0);\r\n        private readonly _cocTexSize = new Vec4(0, 0, 0, 0);\r\n        // Bloom\r\n        private readonly _bloomParams = new Vec4(0, 0, 0, 0);\r\n        private readonly _bloomTexSize = new Vec4(0, 0, 0, 0);\r\n        private readonly _bloomWidths: Array<number> = [];\r\n        private readonly _bloomHeights: Array<number> = [];\r\n        private readonly _bloomTexNames: Array<string> = [];\r\n        // Color Grading\r\n        private readonly _colorGradingTexSize = new Vec2(0, 0);\r\n        // FXAA\r\n        private readonly _fxaaParams = new Vec4(0, 0, 0, 0);\r\n        // FSR\r\n        private readonly _fsrParams = new Vec4(0, 0, 0, 0);\r\n        private readonly _fsrTexSize = new Vec4(0, 0, 0, 0);\r\n        // Materials\r\n        private readonly _copyAndTonemapMaterial = new Material();\r\n\r\n        // Internal States\r\n        private _initialized = false; // TODO(zhouzhenglong): Make default effect asset loading earlier and remove this flag\r\n\r\n        // Forward lighting\r\n        private readonly forwardLighting = new ForwardLighting();\r\n\r\n        // ----------------------------------------------------------------\r\n        // Interface\r\n        // ----------------------------------------------------------------\r\n        windowResize(\r\n            ppl: rendering.BasicPipeline,\r\n            window: renderer.RenderWindow,\r\n            camera: renderer.scene.Camera,\r\n            nativeWidth: number,\r\n            nativeHeight: number,\r\n        ): void {\r\n            setupPipelineConfigs(ppl, this._configs);\r\n            setupCameraConfigs(camera, this._configs, this._cameraConfigs);\r\n            const settings = this._cameraConfigs.settings;\r\n            const id = window.renderWindowId;\r\n\r\n            const width = this._cameraConfigs.enableShadingScale\r\n                ? Math.max(Math.floor(nativeWidth * this._cameraConfigs.shadingScale), 1)\r\n                : nativeWidth;\r\n            const height = this._cameraConfigs.enableShadingScale\r\n                ? Math.max(Math.floor(nativeHeight * this._cameraConfigs.shadingScale), 1)\r\n                : nativeHeight;\r\n\r\n            // Render Window (UI)\r\n            ppl.addRenderWindow(this._cameraConfigs.colorName,\r\n                Format.RGBA8, nativeWidth, nativeHeight, window,\r\n                this._cameraConfigs.depthStencilName);\r\n\r\n            if (this._cameraConfigs.enableShadingScale) {\r\n                ppl.addDepthStencil(`ScaledSceneDepth${id}`, Format.DEPTH_STENCIL, width, height);\r\n                ppl.addRenderTarget(`ScaledRadiance${id}`, this._cameraConfigs.radianceFormat, width, height);\r\n                ppl.addRenderTarget(`ScaledLdrColor${id}`, Format.RGBA8, width, height);\r\n            } else {\r\n                ppl.addDepthStencil(`SceneDepth${id}`, Format.DEPTH_STENCIL, width, height);\r\n                ppl.addRenderTarget(`Radiance${id}`, this._cameraConfigs.radianceFormat, width, height);\r\n                ppl.addRenderTarget(`LdrColor${id}`, Format.RGBA8, width, height);\r\n            }\r\n\r\n            if (this._cameraConfigs.enableFSR) {\r\n                ppl.addRenderTarget(`FsrColor${id}`, Format.RGBA8, nativeWidth, nativeHeight);\r\n            }\r\n\r\n            // MsaaRadiance\r\n            if (this._cameraConfigs.enableMSAA) {\r\n                // Notice: We never store multisample results.\r\n                // These samples are always resolved and discarded at the end of the render pass.\r\n                // So the ResourceResidency should be MEMORYLESS.\r\n                if (this._cameraConfigs.enableHDR) {\r\n                    ppl.addTexture(`MsaaRadiance${id}`, TextureType.TEX2D, this._cameraConfigs.radianceFormat, width, height, 1, 1, 1,\r\n                        settings.msaa.sampleCount, ResourceFlags.COLOR_ATTACHMENT, ResourceResidency.MEMORYLESS);\r\n                } else {\r\n                    ppl.addTexture(`MsaaRadiance${id}`, TextureType.TEX2D, Format.RGBA8, width, height, 1, 1, 1,\r\n                        settings.msaa.sampleCount, ResourceFlags.COLOR_ATTACHMENT, ResourceResidency.MEMORYLESS);\r\n                }\r\n                ppl.addTexture(`MsaaDepthStencil${id}`, TextureType.TEX2D, Format.DEPTH_STENCIL, width, height, 1, 1, 1,\r\n                    settings.msaa.sampleCount, ResourceFlags.DEPTH_STENCIL_ATTACHMENT, ResourceResidency.MEMORYLESS);\r\n            }\r\n\r\n            // Mainlight ShadowMap\r\n            ppl.addRenderTarget(\r\n                `ShadowMap${id}`,\r\n                this._configs.shadowMapFormat,\r\n                this._configs.shadowMapSize.x,\r\n                this._configs.shadowMapSize.y,\r\n            );\r\n            ppl.addDepthStencil(\r\n                `ShadowDepth${id}`,\r\n                Format.DEPTH_STENCIL,\r\n                this._configs.shadowMapSize.x,\r\n                this._configs.shadowMapSize.y,\r\n            );\r\n\r\n            // Spot-light shadow maps\r\n            if (this._cameraConfigs.singleForwardRadiancePass) {\r\n                const count = this._configs.mobileMaxSpotLightShadowMaps;\r\n                for (let i = 0; i !== count; ++i) {\r\n                    ppl.addRenderTarget(\r\n                        `SpotShadowMap${i}`,\r\n                        this._configs.shadowMapFormat,\r\n                        this._configs.shadowMapSize.x,\r\n                        this._configs.shadowMapSize.y,\r\n                    );\r\n                    ppl.addDepthStencil(\r\n                        `SpotShadowDepth${i}`,\r\n                        Format.DEPTH_STENCIL,\r\n                        this._configs.shadowMapSize.x,\r\n                        this._configs.shadowMapSize.y,\r\n                    );\r\n                }\r\n            }\r\n\r\n            // ---------------------------------------------------------\r\n            // Post Process\r\n            // ---------------------------------------------------------\r\n            // DepthOfField\r\n            if (this._cameraConfigs.enableDOF) {\r\n                const halfWidth = Math.max(Math.floor(width / 2), 1);\r\n                const halfHeight = Math.max(Math.floor(height / 2), 1);\r\n                // `DofCoc${id}` texture will reuse ldrColorName\r\n                ppl.addRenderTarget(`DofRadiance${id}`, this._cameraConfigs.radianceFormat, width, height);\r\n                ppl.addRenderTarget(`DofPrefilter${id}`, this._cameraConfigs.radianceFormat, halfWidth, halfHeight);\r\n                ppl.addRenderTarget(`DofBokeh${id}`, this._cameraConfigs.radianceFormat, halfWidth, halfHeight);\r\n                ppl.addRenderTarget(`DofFilter${id}`, this._cameraConfigs.radianceFormat, halfWidth, halfHeight);\r\n            }\r\n            // Bloom (Kawase Dual Filter)\r\n            if (this._cameraConfigs.enableBloom) {\r\n                let bloomWidth = width;\r\n                let bloomHeight = height;\r\n                for (let i = 0; i !== settings.bloom.iterations + 1; ++i) {\r\n                    bloomWidth = Math.max(Math.floor(bloomWidth / 2), 1);\r\n                    bloomHeight = Math.max(Math.floor(bloomHeight / 2), 1);\r\n                    ppl.addRenderTarget(`BloomTex${id}_${i}`, this._cameraConfigs.radianceFormat, bloomWidth, bloomHeight);\r\n                }\r\n            }\r\n            // Color Grading\r\n            if (this._cameraConfigs.enableColorGrading && settings.colorGrading.material && settings.colorGrading.colorGradingMap) {\r\n                settings.colorGrading.material.setProperty(\r\n                    'colorGradingMap', settings.colorGrading.colorGradingMap);\r\n            }\r\n            // FXAA\r\n            if (this._cameraConfigs.enableFXAA && this._cameraConfigs.enableShadingScale) {\r\n                ppl.addRenderTarget(`AaColor${id}`, Format.RGBA8, width, height);\r\n            }\r\n        }\r\n        setup(cameras: renderer.scene.Camera[], ppl: rendering.BasicPipeline): void {\r\n            // TODO(zhouzhenglong): Make default effect asset loading earlier and remove _initMaterials\r\n            if (this._initMaterials(ppl)) {\r\n                return;\r\n            }\r\n            // Render cameras\r\n            // log(`==================== One Frame ====================`);\r\n            for (const camera of cameras) {\r\n                // Skip invalid camera\r\n                if (!camera.scene || !camera.window) {\r\n                    continue;\r\n                }\r\n                // Setup camera configs\r\n                setupCameraConfigs(camera, this._configs, this._cameraConfigs);\r\n                // log(`Setup camera: ${camera.node!.name}, window: ${camera.window.renderWindowId}, isFull: ${this._cameraConfigs.useFullPipeline}, `\r\n                //     + `size: ${camera.window.width}x${camera.window.height}`);\r\n\r\n                this._pipelineEvent.emit(PipelineEventType.RENDER_CAMERA_BEGIN, camera);\r\n\r\n                // Build pipeline\r\n                if (this._cameraConfigs.useFullPipeline) {\r\n                    this._buildForwardPipeline(ppl, camera, camera.scene);\r\n                } else {\r\n                    this._buildSimplePipeline(ppl, camera);\r\n                }\r\n\r\n                this._pipelineEvent.emit(PipelineEventType.RENDER_CAMERA_END, camera);\r\n            }\r\n        }\r\n\r\n        // ----------------------------------------------------------------\r\n        // Pipelines\r\n        // ----------------------------------------------------------------\r\n        private _buildSimplePipeline(\r\n            ppl: rendering.BasicPipeline,\r\n            camera: renderer.scene.Camera,\r\n        ): void {\r\n            const width = Math.max(Math.floor(camera.window.width), 1);\r\n            const height = Math.max(Math.floor(camera.window.height), 1);\r\n            const colorName = this._cameraConfigs.colorName;\r\n            const depthStencilName = this._cameraConfigs.depthStencilName;\r\n\r\n            const viewport = camera.viewport;  // Reduce C++/TS interop\r\n            this._viewport.left = Math.round(viewport.x * width);\r\n            this._viewport.top = Math.round(viewport.y * height);\r\n            // Here we must use camera.viewport.width instead of camera.viewport.z, which\r\n            // is undefined on native platform. The same as camera.viewport.height.\r\n            this._viewport.width = Math.max(Math.round(viewport.width * width), 1);\r\n            this._viewport.height = Math.max(Math.round(viewport.height * height), 1);\r\n\r\n            const clearColor = camera.clearColor;  // Reduce C++/TS interop\r\n            this._clearColor.x = clearColor.x;\r\n            this._clearColor.y = clearColor.y;\r\n            this._clearColor.z = clearColor.z;\r\n            this._clearColor.w = clearColor.w;\r\n\r\n            const pass = ppl.addRenderPass(width, height, 'default');\r\n\r\n            // bind output render target\r\n            if (forwardNeedClearColor(camera)) {\r\n                pass.addRenderTarget(colorName, LoadOp.CLEAR, StoreOp.STORE, this._clearColor);\r\n            } else {\r\n                pass.addRenderTarget(colorName, LoadOp.LOAD, StoreOp.STORE);\r\n            }\r\n\r\n            // bind depth stencil buffer\r\n            if (camera.clearFlag & ClearFlagBit.DEPTH_STENCIL) {\r\n                pass.addDepthStencil(\r\n                    depthStencilName,\r\n                    LoadOp.CLEAR,\r\n                    StoreOp.DISCARD,\r\n                    camera.clearDepth,\r\n                    camera.clearStencil,\r\n                    camera.clearFlag & ClearFlagBit.DEPTH_STENCIL,\r\n                );\r\n            } else {\r\n                pass.addDepthStencil(depthStencilName, LoadOp.LOAD, StoreOp.DISCARD);\r\n            }\r\n\r\n            pass.setViewport(this._viewport);\r\n\r\n            // The opaque queue is used for Reflection probe preview\r\n            pass.addQueue(QueueHint.OPAQUE)\r\n                .addScene(camera, SceneFlags.OPAQUE);\r\n\r\n            // The blend queue is used for UI and Gizmos\r\n            let flags = SceneFlags.BLEND | SceneFlags.UI;\r\n            if (this._cameraConfigs.enableProfiler) {\r\n                flags |= SceneFlags.PROFILER;\r\n                pass.showStatistics = true;\r\n            }\r\n            pass.addQueue(QueueHint.BLEND)\r\n                .addScene(camera, flags);\r\n        }\r\n\r\n        private _buildForwardPipeline(\r\n            ppl: rendering.BasicPipeline,\r\n            camera: renderer.scene.Camera,\r\n            scene: renderer.RenderScene,\r\n        ): void {\r\n            // Init\r\n            const settings = this._cameraConfigs.settings;\r\n            const nativeWidth = Math.max(Math.floor(camera.window.width), 1);\r\n            const nativeHeight = Math.max(Math.floor(camera.window.height), 1);\r\n            const width = this._cameraConfigs.enableShadingScale\r\n                ? Math.max(Math.floor(nativeWidth * this._cameraConfigs.shadingScale), 1)\r\n                : nativeWidth;\r\n            const height = this._cameraConfigs.enableShadingScale\r\n                ? Math.max(Math.floor(nativeHeight * this._cameraConfigs.shadingScale), 1)\r\n                : nativeHeight;\r\n            const id = camera.window.renderWindowId;\r\n            const colorName = this._cameraConfigs.colorName;\r\n            const sceneDepth = this._cameraConfigs.enableShadingScale\r\n                ? `ScaledSceneDepth${id}`\r\n                : `SceneDepth${id}`;\r\n            const radianceName = this._cameraConfigs.enableShadingScale\r\n                ? `ScaledRadiance${id}`\r\n                : `Radiance${id}`;\r\n            const ldrColorName = this._cameraConfigs.enableShadingScale\r\n                ? `ScaledLdrColor${id}`\r\n                : `LdrColor${id}`;\r\n            const mainLight = scene.mainLight;\r\n\r\n            // Forward Lighting (Light Culling)\r\n            this.forwardLighting.cullLights(scene, camera.frustum);\r\n\r\n            // Main Directional light CSM Shadow Map\r\n            if (this._cameraConfigs.enableMainLightShadowMap) {\r\n                assert(!!mainLight);\r\n                this._addCascadedShadowMapPass(ppl, id, mainLight, camera);\r\n            }\r\n\r\n            // Spot light shadow maps (Mobile or MSAA)\r\n            if (this._cameraConfigs.singleForwardRadiancePass) {\r\n                // Currently, only support 1 spot light with shadow map on mobile platform.\r\n                // TODO(zhouzhenglong): Relex this limitation.\r\n                this.forwardLighting.addSpotlightShadowPasses(ppl, camera, this._configs.mobileMaxSpotLightShadowMaps);\r\n            }\r\n\r\n            this._tryAddReflectionProbePasses(ppl, id, mainLight, camera.scene);\r\n\r\n            // Forward Lighting\r\n            let lastPass: rendering.BasicRenderPassBuilder;\r\n            if (this._cameraConfigs.enablePostProcess) { // Post Process\r\n                // Radiance and DoF\r\n                if (this._cameraConfigs.enableDOF) {\r\n                    assert(!!settings.depthOfField.material);\r\n                    const dofRadianceName = `DofRadiance${id}`;\r\n                    // Disable MSAA, depth stencil cannot be resolved cross-platformly\r\n                    this._addForwardRadiancePasses(ppl, id, camera, width, height, mainLight,\r\n                        dofRadianceName, sceneDepth, true, StoreOp.STORE);\r\n                    this._addDepthOfFieldPasses(ppl, settings, settings.depthOfField.material,\r\n                        id, camera, width, height,\r\n                        dofRadianceName, sceneDepth, radianceName, ldrColorName);\r\n                } else {\r\n                    this._addForwardRadiancePasses(\r\n                        ppl, id, camera, width, height, mainLight,\r\n                        radianceName, sceneDepth);\r\n                }\r\n                // Bloom\r\n                if (this._cameraConfigs.enableBloom) {\r\n                    assert(!!settings.bloom.material);\r\n                    this._addKawaseDualFilterBloomPasses(\r\n                        ppl, settings, settings.bloom.material,\r\n                        id, width, height, radianceName);\r\n                }\r\n                // Tone Mapping and FXAA\r\n                if (this._cameraConfigs.enableFXAA) {\r\n                    assert(!!settings.fxaa.material);\r\n                    const copyAndTonemapPassNeeded = this._cameraConfigs.enableHDR\r\n                        || this._cameraConfigs.enableColorGrading;\r\n                    const ldrColorBufferName = copyAndTonemapPassNeeded ? ldrColorName : radianceName;\r\n                    // FXAA is applied after tone mapping\r\n                    if (copyAndTonemapPassNeeded) {\r\n                        this._addCopyAndTonemapPass(ppl, settings, width, height, radianceName, ldrColorBufferName);\r\n                    }\r\n                    // Apply FXAA\r\n                    if (this._cameraConfigs.enableShadingScale) {\r\n                        const aaColorName = `AaColor${id}`;\r\n                        // Apply FXAA on scaled image\r\n                        this._addFxaaPass(ppl, settings.fxaa.material,\r\n                            width, height, ldrColorBufferName, aaColorName);\r\n                        // Copy FXAA result to screen\r\n                        if (this._cameraConfigs.enableFSR && settings.fsr.material) {\r\n                            // Apply FSR\r\n                            lastPass = this._addFsrPass(ppl, settings, settings.fsr.material,\r\n                                id, width, height, aaColorName,\r\n                                nativeWidth, nativeHeight, colorName);\r\n                        } else {\r\n                            // Scale FXAA result to screen\r\n                            lastPass = this._addCopyPass(ppl,\r\n                                nativeWidth, nativeHeight, aaColorName, colorName);\r\n                        }\r\n                    } else {\r\n                        // Image not scaled, output FXAA result to screen directly\r\n                        lastPass = this._addFxaaPass(ppl, settings.fxaa.material,\r\n                            nativeWidth, nativeHeight, ldrColorBufferName, colorName);\r\n                    }\r\n                } else {\r\n                    // No FXAA (Size might be scaled)\r\n                    lastPass = this._addTonemapResizeOrSuperResolutionPasses(ppl, settings, id,\r\n                        width, height, radianceName, ldrColorName,\r\n                        nativeWidth, nativeHeight, colorName);\r\n                }\r\n            } else if (this._cameraConfigs.enableHDR || this._cameraConfigs.enableShadingScale) { // HDR or Scaled LDR\r\n                this._addForwardRadiancePasses(ppl, id, camera,\r\n                    width, height, mainLight, radianceName, sceneDepth);\r\n                lastPass = this._addTonemapResizeOrSuperResolutionPasses(ppl, settings, id,\r\n                    width, height, radianceName, ldrColorName,\r\n                    nativeWidth, nativeHeight, colorName);\r\n            } else { // LDR (Size is not scaled)\r\n                lastPass = this._addForwardRadiancePasses(ppl, id, camera,\r\n                    nativeWidth, nativeHeight, mainLight,\r\n                    colorName, this._cameraConfigs.depthStencilName);\r\n            }\r\n\r\n            // UI size is not scaled, does not have AA\r\n            this._addUIQueue(camera, lastPass);\r\n        }\r\n\r\n        // ----------------------------------------------------------------\r\n        // Common Passes\r\n        // ----------------------------------------------------------------\r\n        private _addTonemapResizeOrSuperResolutionPasses(\r\n            ppl: rendering.BasicPipeline,\r\n            settings: PipelineSettings,\r\n            id: number,\r\n            width: number,\r\n            height: number,\r\n            radianceName: string,\r\n            ldrColorName: string,\r\n            nativeWidth: number,\r\n            nativeHeight: number,\r\n            colorName: string,\r\n        ): rendering.BasicRenderPassBuilder {\r\n            let lastPass: rendering.BasicRenderPassBuilder;\r\n            if (this._cameraConfigs.enableFSR && settings.fsr.material) {\r\n                // Apply FSR\r\n                this._addCopyAndTonemapPass(ppl, settings,\r\n                    width, height, radianceName, ldrColorName);\r\n                lastPass = this._addFsrPass(ppl, settings,\r\n                    settings.fsr.material,\r\n                    id, width, height, ldrColorName,\r\n                    nativeWidth, nativeHeight, colorName);\r\n            } else {\r\n                // Output HDR/LDR result to screen directly (Size might be scaled)\r\n                lastPass = this._addCopyAndTonemapPass(ppl, settings,\r\n                    nativeWidth, nativeHeight, radianceName, colorName);\r\n            }\r\n            return lastPass;\r\n        }\r\n\r\n        private _addCascadedShadowMapPass(\r\n            ppl: rendering.BasicPipeline,\r\n            id: number,\r\n            light: renderer.scene.DirectionalLight,\r\n            camera: renderer.scene.Camera,\r\n        ): void {\r\n            // ----------------------------------------------------------------\r\n            // Dynamic states\r\n            // ----------------------------------------------------------------\r\n            const width = ppl.pipelineSceneData.shadows.size.x;\r\n            const height = ppl.pipelineSceneData.shadows.size.y;\r\n            this._viewport.left = 0;\r\n            this._viewport.top = 0;\r\n            this._viewport.width = width;\r\n            this._viewport.height = height;\r\n\r\n            // ----------------------------------------------------------------\r\n            // CSM Shadow Map\r\n            // ----------------------------------------------------------------\r\n            const pass = ppl.addRenderPass(width, height, 'default');\r\n            pass.name = 'CascadedShadowMap';\r\n            pass.addRenderTarget(`ShadowMap${id}`, LoadOp.CLEAR, StoreOp.STORE, new Color(1, 1, 1, 1));\r\n            pass.addDepthStencil(`ShadowDepth${id}`, LoadOp.CLEAR, StoreOp.DISCARD);\r\n            const csmLevel = ppl.pipelineSceneData.csmSupported ? light.csmLevel : 1;\r\n\r\n            // Add shadow map viewports\r\n            for (let level = 0; level !== csmLevel; ++level) {\r\n                getCsmMainLightViewport(light, width, height, level, this._viewport, this._configs.screenSpaceSignY);\r\n                const queue = pass.addQueue(QueueHint.NONE, 'shadow-caster');\r\n                if (!this._configs.isWebGPU) { // Temporary workaround for WebGPU\r\n                    queue.setViewport(this._viewport);\r\n                }\r\n                queue\r\n                    .addScene(camera, SceneFlags.OPAQUE | SceneFlags.MASK | SceneFlags.SHADOW_CASTER)\r\n                    .useLightFrustum(light, level);\r\n            }\r\n        }\r\n\r\n        private _addCopyPass(\r\n            ppl: rendering.BasicPipeline,\r\n            width: number,\r\n            height: number,\r\n            input: string,\r\n            output: string,\r\n        ): rendering.BasicRenderPassBuilder {\r\n            const pass = ppl.addRenderPass(width, height, 'cc-tone-mapping');\r\n            pass.addRenderTarget(output, LoadOp.CLEAR, StoreOp.STORE, this._clearColorTransparentBlack);\r\n            pass.addTexture(input, 'inputTexture');\r\n            pass.setVec4('g_platform', this._configs.platform);\r\n            pass.addQueue(QueueHint.OPAQUE)\r\n                .addFullscreenQuad(this._copyAndTonemapMaterial, 1);\r\n            return pass;\r\n        }\r\n\r\n        private _addCopyAndTonemapPass(\r\n            ppl: rendering.BasicPipeline,\r\n            settings: PipelineSettings,\r\n            width: number,\r\n            height: number,\r\n            radianceName: string,\r\n            colorName: string,\r\n        ): rendering.BasicRenderPassBuilder {\r\n            let pass: rendering.BasicRenderPassBuilder;\r\n            if (this._cameraConfigs.enableColorGrading\r\n                && settings.colorGrading.material\r\n                && settings.colorGrading.colorGradingMap) {\r\n                const lutTex = settings.colorGrading.colorGradingMap;\r\n                this._colorGradingTexSize.x = lutTex.width;\r\n                this._colorGradingTexSize.y = lutTex.height;\r\n\r\n                const isSquareMap = lutTex.width === lutTex.height;\r\n                if (isSquareMap) {\r\n                    pass = ppl.addRenderPass(width, height, 'cc-color-grading-8x8');\r\n                } else {\r\n                    pass = ppl.addRenderPass(width, height, 'cc-color-grading-nx1');\r\n                }\r\n                pass.addRenderTarget(colorName, LoadOp.CLEAR, StoreOp.STORE, this._clearColorTransparentBlack);\r\n                pass.addTexture(radianceName, 'sceneColorMap');\r\n                pass.setVec4('g_platform', this._configs.platform);\r\n                pass.setVec2('lutTextureSize', this._colorGradingTexSize);\r\n                pass.setFloat('contribute', settings.colorGrading.contribute);\r\n                pass.addQueue(QueueHint.OPAQUE)\r\n                    .addFullscreenQuad(settings.colorGrading.material, isSquareMap ? 1 : 0);\r\n            } else {\r\n                pass = ppl.addRenderPass(width, height, 'cc-tone-mapping');\r\n                pass.addRenderTarget(colorName, LoadOp.CLEAR, StoreOp.STORE, this._clearColorTransparentBlack);\r\n                pass.addTexture(radianceName, 'inputTexture');\r\n                pass.setVec4('g_platform', this._configs.platform);\r\n                if (settings.toneMapping.material) {\r\n                    pass.addQueue(QueueHint.OPAQUE)\r\n                        .addFullscreenQuad(settings.toneMapping.material, 0);\r\n                } else {\r\n                    pass.addQueue(QueueHint.OPAQUE)\r\n                        .addFullscreenQuad(this._copyAndTonemapMaterial, 0);\r\n                }\r\n            }\r\n            return pass;\r\n        }\r\n\r\n        private _buildForwardMainLightPass(\r\n            pass: rendering.BasicRenderPassBuilder,\r\n            id: number,\r\n            camera: renderer.scene.Camera,\r\n            colorName: string,\r\n            depthStencilName: string,\r\n            depthStencilStoreOp: gfx.StoreOp,\r\n            mainLight: renderer.scene.DirectionalLight | null,\r\n            scene: renderer.RenderScene | null = null,\r\n        ): void {\r\n            // set viewport\r\n            pass.setViewport(this._viewport);\r\n\r\n            const colorStoreOp = this._cameraConfigs.enableMSAA ? StoreOp.DISCARD : StoreOp.STORE;\r\n\r\n            // bind output render target\r\n            if (forwardNeedClearColor(camera)) {\r\n                pass.addRenderTarget(colorName, LoadOp.CLEAR, colorStoreOp, this._clearColor);\r\n            } else {\r\n                pass.addRenderTarget(colorName, LoadOp.LOAD, colorStoreOp);\r\n            }\r\n\r\n            // bind depth stencil buffer\r\n            if (DEBUG) {\r\n                if (colorName === this._cameraConfigs.colorName &&\r\n                    depthStencilName !== this._cameraConfigs.depthStencilName) {\r\n                    warn('Default framebuffer cannot use custom depth stencil buffer');\r\n                }\r\n            }\r\n\r\n            if (camera.clearFlag & ClearFlagBit.DEPTH_STENCIL) {\r\n                pass.addDepthStencil(\r\n                    depthStencilName,\r\n                    LoadOp.CLEAR,\r\n                    depthStencilStoreOp,\r\n                    camera.clearDepth,\r\n                    camera.clearStencil,\r\n                    camera.clearFlag & ClearFlagBit.DEPTH_STENCIL,\r\n                );\r\n            } else {\r\n                pass.addDepthStencil(depthStencilName, LoadOp.LOAD, depthStencilStoreOp);\r\n            }\r\n\r\n            // Set shadow map if enabled\r\n            if (this._cameraConfigs.enableMainLightShadowMap) {\r\n                pass.addTexture(`ShadowMap${id}`, 'cc_shadowMap');\r\n            }\r\n\r\n            // TODO(zhouzhenglong): Separate OPAQUE and MASK queue\r\n\r\n            // add opaque and mask queue\r\n            pass.addQueue(QueueHint.NONE) // Currently we put OPAQUE and MASK into one queue, so QueueHint is NONE\r\n                .addScene(camera,\r\n                    SceneFlags.OPAQUE | SceneFlags.MASK,\r\n                    mainLight || undefined,\r\n                    scene ? scene : undefined);\r\n        }\r\n\r\n        private _addDepthOfFieldPasses(\r\n            ppl: rendering.BasicPipeline,\r\n            settings: PipelineSettings,\r\n            dofMaterial: Material,\r\n            id: number,\r\n            camera: renderer.scene.Camera,\r\n            width: number,\r\n            height: number,\r\n            dofRadianceName: string,\r\n            depthStencil: string,\r\n            radianceName: string,\r\n            ldrColorName: string,\r\n        ): void {\r\n            // https://catlikecoding.com/unity/tutorials/advanced-rendering/depth-of-field/\r\n\r\n            this._cocParams.x = settings.depthOfField.focusDistance;\r\n            this._cocParams.y = settings.depthOfField.focusRange;\r\n            this._cocParams.z = settings.depthOfField.bokehRadius;\r\n            this._cocParams.w = 0.0;\r\n            this._cocTexSize.x = 1.0 / width;\r\n            this._cocTexSize.y = 1.0 / height;\r\n            this._cocTexSize.z = width;\r\n            this._cocTexSize.w = height;\r\n\r\n            const halfWidth = Math.max(Math.floor(width / 2), 1);\r\n            const halfHeight = Math.max(Math.floor(height / 2), 1);\r\n\r\n            const cocName = ldrColorName;\r\n            const prefilterName = `DofPrefilter${id}`;\r\n            const bokehName = `DofBokeh${id}`;\r\n            const filterName = `DofFilter${id}`;\r\n\r\n            // CoC\r\n            const cocPass = ppl.addRenderPass(width, height, 'cc-dof-coc');\r\n            cocPass.addRenderTarget(cocName, LoadOp.CLEAR, StoreOp.STORE, this._clearColorTransparentBlack);\r\n            cocPass.addTexture(depthStencil, 'DepthTex');\r\n            cocPass.setVec4('g_platform', this._configs.platform);\r\n            cocPass.setMat4('proj', camera.matProj);\r\n            cocPass.setVec4('cocParams', this._cocParams);\r\n            cocPass\r\n                .addQueue(QueueHint.OPAQUE)\r\n                .addCameraQuad(camera, dofMaterial, 0); // addCameraQuad will set camera related UBOs\r\n\r\n            // Downsample and Prefilter\r\n            const prefilterPass = ppl.addRenderPass(halfWidth, halfHeight, 'cc-dof-prefilter');\r\n            prefilterPass.addRenderTarget(prefilterName, LoadOp.CLEAR, StoreOp.STORE, this._clearColorTransparentBlack);\r\n            prefilterPass.addTexture(dofRadianceName, 'colorTex');\r\n            prefilterPass.addTexture(cocName, 'cocTex');\r\n            prefilterPass.setVec4('g_platform', this._configs.platform);\r\n            prefilterPass.setVec4('mainTexTexelSize', this._cocTexSize);\r\n            prefilterPass\r\n                .addQueue(QueueHint.OPAQUE)\r\n                .addFullscreenQuad(dofMaterial, 1);\r\n\r\n            // Bokeh blur\r\n            const bokehPass = ppl.addRenderPass(halfWidth, halfHeight, 'cc-dof-bokeh');\r\n            bokehPass.addRenderTarget(bokehName, LoadOp.CLEAR, StoreOp.STORE, this._clearColorTransparentBlack);\r\n            bokehPass.addTexture(prefilterName, 'prefilterTex');\r\n            bokehPass.setVec4('g_platform', this._configs.platform);\r\n            bokehPass.setVec4('mainTexTexelSize', this._cocTexSize);\r\n            bokehPass.setVec4('cocParams', this._cocParams);\r\n            bokehPass\r\n                .addQueue(QueueHint.OPAQUE)\r\n                .addFullscreenQuad(dofMaterial, 2);\r\n\r\n            // Filtering\r\n            const filterPass = ppl.addRenderPass(halfWidth, halfHeight, 'cc-dof-filter');\r\n            filterPass.addRenderTarget(filterName, LoadOp.CLEAR, StoreOp.STORE, this._clearColorTransparentBlack);\r\n            filterPass.addTexture(bokehName, 'bokehTex');\r\n            filterPass.setVec4('g_platform', this._configs.platform);\r\n            filterPass.setVec4('mainTexTexelSize', this._cocTexSize);\r\n            filterPass\r\n                .addQueue(QueueHint.OPAQUE)\r\n                .addFullscreenQuad(dofMaterial, 3);\r\n\r\n            // Combine\r\n            const combinePass = ppl.addRenderPass(width, height, 'cc-dof-combine');\r\n            combinePass.addRenderTarget(radianceName, LoadOp.CLEAR, StoreOp.STORE, this._clearColorTransparentBlack);\r\n            combinePass.addTexture(dofRadianceName, 'colorTex');\r\n            combinePass.addTexture(cocName, 'cocTex');\r\n            combinePass.addTexture(filterName, 'filterTex');\r\n            combinePass.setVec4('g_platform', this._configs.platform);\r\n            combinePass.setVec4('cocParams', this._cocParams);\r\n            combinePass\r\n                .addQueue(QueueHint.OPAQUE)\r\n                .addFullscreenQuad(dofMaterial, 4);\r\n        }\r\n\r\n        private _addKawaseDualFilterBloomPasses(\r\n            ppl: rendering.BasicPipeline,\r\n            settings: PipelineSettings,\r\n            bloomMaterial: Material,\r\n            id: number,\r\n            width: number,\r\n            height: number,\r\n            radianceName: string,\r\n        ): void {\r\n            // Based on Kawase Dual Filter Blur. Saves bandwidth on mobile devices.\r\n            // eslint-disable-next-line max-len\r\n            // https://community.arm.com/cfs-file/__key/communityserver-blogs-components-weblogfiles/00-00-00-20-66/siggraph2015_2D00_mmg_2D00_marius_2D00_slides.pdf\r\n\r\n            // Size: [prefilter(1/2), downsample(1/4), downsample(1/8), downsample(1/16), ...]\r\n            const iterations = settings.bloom.iterations;\r\n            const sizeCount = iterations + 1;\r\n            this._bloomWidths.length = sizeCount;\r\n            this._bloomHeights.length = sizeCount;\r\n            this._bloomWidths[0] = Math.max(Math.floor(width / 2), 1);\r\n            this._bloomHeights[0] = Math.max(Math.floor(height / 2), 1);\r\n            for (let i = 1; i !== sizeCount; ++i) {\r\n                this._bloomWidths[i] = Math.max(Math.floor(this._bloomWidths[i - 1] / 2), 1);\r\n                this._bloomHeights[i] = Math.max(Math.floor(this._bloomHeights[i - 1] / 2), 1);\r\n            }\r\n\r\n            // Bloom texture names\r\n            this._bloomTexNames.length = sizeCount;\r\n            for (let i = 0; i !== sizeCount; ++i) {\r\n                this._bloomTexNames[i] = `BloomTex${id}_${i}`;\r\n            }\r\n\r\n            // Setup bloom parameters\r\n            this._bloomParams.x = this._configs.useFloatOutput ? 1 : 0;\r\n            this._bloomParams.x = 0; // unused\r\n            this._bloomParams.z = settings.bloom.threshold;\r\n            this._bloomParams.w = settings.bloom.enableAlphaMask ? 1 : 0;\r\n\r\n            // Prefilter pass\r\n            const prefilterPass = ppl.addRenderPass(this._bloomWidths[0], this._bloomHeights[0], 'cc-bloom-prefilter');\r\n            prefilterPass.addRenderTarget(\r\n                this._bloomTexNames[0],\r\n                LoadOp.CLEAR,\r\n                StoreOp.STORE,\r\n                this._clearColorTransparentBlack,\r\n            );\r\n            prefilterPass.addTexture(radianceName, 'inputTexture');\r\n            prefilterPass.setVec4('g_platform', this._configs.platform);\r\n            prefilterPass.setVec4('bloomParams', this._bloomParams);\r\n            prefilterPass\r\n                .addQueue(QueueHint.OPAQUE)\r\n                .addFullscreenQuad(bloomMaterial, 0);\r\n\r\n            // Downsample passes\r\n            for (let i = 1; i !== sizeCount; ++i) {\r\n                const downPass = ppl.addRenderPass(this._bloomWidths[i], this._bloomHeights[i], 'cc-bloom-downsample');\r\n                downPass.addRenderTarget(this._bloomTexNames[i], LoadOp.CLEAR, StoreOp.STORE, this._clearColorTransparentBlack);\r\n                downPass.addTexture(this._bloomTexNames[i - 1], 'bloomTexture');\r\n                this._bloomTexSize.x = this._bloomWidths[i - 1];\r\n                this._bloomTexSize.y = this._bloomHeights[i - 1];\r\n                downPass.setVec4('g_platform', this._configs.platform);\r\n                downPass.setVec4('bloomTexSize', this._bloomTexSize);\r\n                downPass\r\n                    .addQueue(QueueHint.OPAQUE)\r\n                    .addFullscreenQuad(bloomMaterial, 1);\r\n            }\r\n\r\n            // Upsample passes\r\n            for (let i = iterations; i-- > 0;) {\r\n                const upPass = ppl.addRenderPass(this._bloomWidths[i], this._bloomHeights[i], 'cc-bloom-upsample');\r\n                upPass.addRenderTarget(this._bloomTexNames[i], LoadOp.CLEAR, StoreOp.STORE, this._clearColorTransparentBlack);\r\n                upPass.addTexture(this._bloomTexNames[i + 1], 'bloomTexture');\r\n                this._bloomTexSize.x = this._bloomWidths[i + 1];\r\n                this._bloomTexSize.y = this._bloomHeights[i + 1];\r\n                upPass.setVec4('g_platform', this._configs.platform);\r\n                upPass.setVec4('bloomTexSize', this._bloomTexSize);\r\n                upPass\r\n                    .addQueue(QueueHint.OPAQUE)\r\n                    .addFullscreenQuad(bloomMaterial, 2);\r\n            }\r\n\r\n            // Combine pass\r\n            const combinePass = ppl.addRenderPass(width, height, 'cc-bloom-combine');\r\n            combinePass.addRenderTarget(radianceName, LoadOp.LOAD, StoreOp.STORE);\r\n            combinePass.addTexture(this._bloomTexNames[0], 'bloomTexture');\r\n            combinePass.setVec4('g_platform', this._configs.platform);\r\n            combinePass.setVec4('bloomParams', this._bloomParams);\r\n            combinePass\r\n                .addQueue(QueueHint.BLEND)\r\n                .addFullscreenQuad(bloomMaterial, 3);\r\n        }\r\n\r\n        private _addFsrPass(\r\n            ppl: rendering.BasicPipeline,\r\n            settings: PipelineSettings,\r\n            fsrMaterial: Material,\r\n            id: number,\r\n            width: number,\r\n            height: number,\r\n            ldrColorName: string,\r\n            nativeWidth: number,\r\n            nativeHeight: number,\r\n            colorName: string,\r\n        ): rendering.BasicRenderPassBuilder {\r\n            this._fsrTexSize.x = width;\r\n            this._fsrTexSize.y = height;\r\n            this._fsrTexSize.z = nativeWidth;\r\n            this._fsrTexSize.w = nativeHeight;\r\n            this._fsrParams.x = clamp(1.0 - settings.fsr.sharpness, 0.02, 0.98);\r\n\r\n            const fsrColorName = `FsrColor${id}`;\r\n\r\n            const easuPass = ppl.addRenderPass(nativeWidth, nativeHeight, 'cc-fsr-easu');\r\n            easuPass.addRenderTarget(fsrColorName, LoadOp.CLEAR, StoreOp.STORE, this._clearColorTransparentBlack);\r\n            easuPass.addTexture(ldrColorName, 'outputResultMap');\r\n            easuPass.setVec4('g_platform', this._configs.platform);\r\n            easuPass.setVec4('fsrTexSize', this._fsrTexSize);\r\n            easuPass\r\n                .addQueue(QueueHint.OPAQUE)\r\n                .addFullscreenQuad(fsrMaterial, 0);\r\n\r\n            const rcasPass = ppl.addRenderPass(nativeWidth, nativeHeight, 'cc-fsr-rcas');\r\n            rcasPass.addRenderTarget(colorName, LoadOp.CLEAR, StoreOp.STORE, this._clearColorTransparentBlack);\r\n            rcasPass.addTexture(fsrColorName, 'outputResultMap');\r\n            rcasPass.setVec4('g_platform', this._configs.platform);\r\n            rcasPass.setVec4('fsrTexSize', this._fsrTexSize);\r\n            rcasPass.setVec4('fsrParams', this._fsrParams);\r\n            rcasPass\r\n                .addQueue(QueueHint.OPAQUE)\r\n                .addFullscreenQuad(fsrMaterial, 1);\r\n\r\n            return rcasPass;\r\n        }\r\n\r\n        private _addFxaaPass(\r\n            ppl: rendering.BasicPipeline,\r\n            fxaaMaterial: Material,\r\n            width: number,\r\n            height: number,\r\n            ldrColorName: string,\r\n            colorName: string,\r\n        ): rendering.BasicRenderPassBuilder {\r\n            this._fxaaParams.x = width;\r\n            this._fxaaParams.y = height;\r\n            this._fxaaParams.z = 1 / width;\r\n            this._fxaaParams.w = 1 / height;\r\n            const pass = ppl.addRenderPass(width, height, 'cc-fxaa');\r\n            pass.addRenderTarget(colorName, LoadOp.CLEAR, StoreOp.STORE, this._clearColorTransparentBlack);\r\n            pass.addTexture(ldrColorName, 'sceneColorMap');\r\n            pass.setVec4('g_platform', this._configs.platform);\r\n            pass.setVec4('texSize', this._fxaaParams);\r\n            pass.addQueue(QueueHint.OPAQUE)\r\n                .addFullscreenQuad(fxaaMaterial, 0);\r\n            return pass;\r\n        }\r\n\r\n        private _addUIQueue(camera: renderer.scene.Camera, pass: rendering.BasicRenderPassBuilder): void {\r\n            let flags = SceneFlags.UI;\r\n            if (this._cameraConfigs.enableProfiler) {\r\n                flags |= SceneFlags.PROFILER;\r\n                pass.showStatistics = true;\r\n            }\r\n            pass\r\n                .addQueue(QueueHint.BLEND, 'default', 'default')\r\n                .addScene(camera, flags);\r\n        }\r\n\r\n        // ----------------------------------------------------------------\r\n        // Forward\r\n        // ----------------------------------------------------------------\r\n        private _addForwardRadiancePasses(\r\n            ppl: rendering.BasicPipeline,\r\n            id: number,\r\n            camera: renderer.scene.Camera,\r\n            width: number,\r\n            height: number,\r\n            mainLight: renderer.scene.DirectionalLight | null,\r\n            colorName: string,\r\n            depthStencilName: string,\r\n            disableMSAA: boolean = false,\r\n            depthStencilStoreOp: gfx.StoreOp = StoreOp.DISCARD,\r\n        ): rendering.BasicRenderPassBuilder {\r\n            // ----------------------------------------------------------------\r\n            // Dynamic states\r\n            // ----------------------------------------------------------------\r\n            // Prepare camera clear color\r\n            const clearColor = camera.clearColor; // Reduce C++/TS interop\r\n            this._clearColor.x = clearColor.x;\r\n            this._clearColor.y = clearColor.y;\r\n            this._clearColor.z = clearColor.z;\r\n            this._clearColor.w = clearColor.w;\r\n\r\n            // Prepare camera viewport\r\n            const viewport = camera.viewport; // Reduce C++/TS interop\r\n            this._viewport.left = Math.round(viewport.x * width);\r\n            this._viewport.top = Math.round(viewport.y * height);\r\n            // Here we must use camera.viewport.width instead of camera.viewport.z, which\r\n            // is undefined on native platform. The same as camera.viewport.height.\r\n            this._viewport.width = Math.max(Math.round(viewport.width * width), 1);\r\n            this._viewport.height = Math.max(Math.round(viewport.height * height), 1);\r\n\r\n            // MSAA\r\n            const enableMSAA = !disableMSAA && this._cameraConfigs.enableMSAA;\r\n            assert(!enableMSAA || this._cameraConfigs.singleForwardRadiancePass);\r\n\r\n            // ----------------------------------------------------------------\r\n            // Forward Lighting (Main Directional Light)\r\n            // ----------------------------------------------------------------\r\n            const pass = this._cameraConfigs.singleForwardRadiancePass\r\n                ? this._addForwardSingleRadiancePass(ppl, id, camera, enableMSAA, width, height, mainLight,\r\n                    colorName, depthStencilName, depthStencilStoreOp)\r\n                : this._addForwardMultipleRadiancePasses(ppl, id, camera, width, height, mainLight,\r\n                    colorName, depthStencilName, depthStencilStoreOp);\r\n\r\n            // Planar Shadow\r\n            if (this._cameraConfigs.enableMainLightPlanarShadowMap) {\r\n                this.addPlanarShadowQueue(camera, mainLight, pass);\r\n            }\r\n\r\n            // ----------------------------------------------------------------\r\n            // Forward Lighting (Blend)\r\n            // ----------------------------------------------------------------\r\n            // Add transparent queue\r\n\r\n            const sceneFlags = SceneFlags.BLEND |\r\n                (camera.geometryRenderer\r\n                    ? SceneFlags.GEOMETRY\r\n                    : SceneFlags.NONE);\r\n\r\n            pass\r\n                .addQueue(QueueHint.BLEND)\r\n                .addScene(camera, sceneFlags, mainLight || undefined);\r\n\r\n            return pass;\r\n        }\r\n\r\n        private _addForwardSingleRadiancePass(\r\n            ppl: rendering.BasicPipeline,\r\n            id: number,\r\n            camera: renderer.scene.Camera,\r\n            enableMSAA: boolean,\r\n            width: number,\r\n            height: number,\r\n            mainLight: renderer.scene.DirectionalLight | null,\r\n            colorName: string,\r\n            depthStencilName: string,\r\n            depthStencilStoreOp: gfx.StoreOp\r\n        ): rendering.BasicRenderPassBuilder {\r\n            assert(this._cameraConfigs.singleForwardRadiancePass);\r\n            // ----------------------------------------------------------------\r\n            // Forward Lighting (Main Directional Light)\r\n            // ----------------------------------------------------------------\r\n            let pass: rendering.BasicRenderPassBuilder;\r\n            if (enableMSAA) {\r\n                const msaaRadianceName = `MsaaRadiance${id}`;\r\n                const msaaDepthStencilName = `MsaaDepthStencil${id}`;\r\n                const sampleCount = this._cameraConfigs.settings.msaa.sampleCount;\r\n\r\n                const msPass = ppl.addMultisampleRenderPass(width, height, sampleCount, 0, 'default');\r\n                msPass.name = 'MsaaForwardPass';\r\n\r\n                // MSAA always discards depth stencil\r\n                this._buildForwardMainLightPass(msPass, id, camera,\r\n                    msaaRadianceName, msaaDepthStencilName, StoreOp.DISCARD, mainLight);\r\n\r\n                msPass.resolveRenderTarget(msaaRadianceName, colorName);\r\n\r\n                pass = msPass;\r\n            } else {\r\n                pass = ppl.addRenderPass(width, height, 'default');\r\n                pass.name = 'ForwardPass';\r\n\r\n                this._buildForwardMainLightPass(pass, id, camera,\r\n                    colorName, depthStencilName, depthStencilStoreOp, mainLight);\r\n            }\r\n            assert(pass !== undefined);\r\n\r\n            // Forward Lighting (Additive Lights)\r\n            this.forwardLighting.addLightQueues(\r\n                pass,\r\n                camera,\r\n                this._configs.mobileMaxSpotLightShadowMaps,\r\n            );\r\n\r\n            return pass;\r\n        }\r\n        public addPlanarShadowQueue(\r\n            camera: renderer.scene.Camera,\r\n            mainLight: renderer.scene.DirectionalLight | null,\r\n            pass: rendering.BasicRenderPassBuilder,\r\n        ) {\r\n            pass.addQueue(QueueHint.BLEND, 'planar-shadow')\r\n                .addScene(\r\n                    camera,\r\n                    SceneFlags.SHADOW_CASTER | SceneFlags.PLANAR_SHADOW | SceneFlags.BLEND,\r\n                    mainLight || undefined,\r\n                );\r\n        }\r\n        private _addForwardMultipleRadiancePasses(\r\n            ppl: rendering.BasicPipeline,\r\n            id: number,\r\n            camera: renderer.scene.Camera,\r\n            width: number,\r\n            height: number,\r\n            mainLight: renderer.scene.DirectionalLight | null,\r\n            colorName: string,\r\n            depthStencilName: string,\r\n            depthStencilStoreOp: gfx.StoreOp\r\n        ): rendering.BasicRenderPassBuilder {\r\n            assert(!this._cameraConfigs.singleForwardRadiancePass);\r\n\r\n            // Forward Lighting (Main Directional Light)\r\n            let pass = ppl.addRenderPass(width, height, 'default');\r\n            pass.name = 'ForwardPass';\r\n\r\n            const firstStoreOp = this.forwardLighting.isMultipleLightPassesNeeded()\r\n                ? StoreOp.STORE\r\n                : depthStencilStoreOp;\r\n\r\n            this._buildForwardMainLightPass(pass, id, camera,\r\n                colorName, depthStencilName, firstStoreOp, mainLight);\r\n\r\n            // Forward Lighting (Additive Lights)\r\n            pass = this.forwardLighting\r\n                .addLightPasses(colorName, depthStencilName, depthStencilStoreOp,\r\n                    id, width, height, camera, this._viewport, ppl, pass);\r\n\r\n            return pass;\r\n        }\r\n\r\n        private _buildReflectionProbePass(\r\n            pass: rendering.BasicRenderPassBuilder,\r\n            id: number,\r\n            camera: renderer.scene.Camera,\r\n            colorName: string,\r\n            depthStencilName: string,\r\n            mainLight: renderer.scene.DirectionalLight | null,\r\n            scene: renderer.RenderScene | null = null,\r\n        ): void {\r\n            // set viewport\r\n            const colorStoreOp = this._cameraConfigs.enableMSAA ? StoreOp.DISCARD : StoreOp.STORE;\r\n\r\n            // bind output render target\r\n            if (forwardNeedClearColor(camera)) {\r\n                this._reflectionProbeClearColor.x = camera.clearColor.x;\r\n                this._reflectionProbeClearColor.y = camera.clearColor.y;\r\n                this._reflectionProbeClearColor.z = camera.clearColor.z;\r\n                const clearColor = rendering.packRGBE(this._reflectionProbeClearColor);\r\n                this._clearColor.x = clearColor.x;\r\n                this._clearColor.y = clearColor.y;\r\n                this._clearColor.z = clearColor.z;\r\n                this._clearColor.w = clearColor.w;\r\n                pass.addRenderTarget(colorName, LoadOp.CLEAR, colorStoreOp, this._clearColor);\r\n            } else {\r\n                pass.addRenderTarget(colorName, LoadOp.LOAD, colorStoreOp);\r\n            }\r\n\r\n            // bind depth stencil buffer\r\n            if (camera.clearFlag & ClearFlagBit.DEPTH_STENCIL) {\r\n                pass.addDepthStencil(\r\n                    depthStencilName,\r\n                    LoadOp.CLEAR,\r\n                    StoreOp.DISCARD,\r\n                    camera.clearDepth,\r\n                    camera.clearStencil,\r\n                    camera.clearFlag & ClearFlagBit.DEPTH_STENCIL,\r\n                );\r\n            } else {\r\n                pass.addDepthStencil(depthStencilName, LoadOp.LOAD, StoreOp.DISCARD);\r\n            }\r\n\r\n            // Set shadow map if enabled\r\n            if (this._cameraConfigs.enableMainLightShadowMap) {\r\n                pass.addTexture(`ShadowMap${id}`, 'cc_shadowMap');\r\n            }\r\n\r\n            // TODO(zhouzhenglong): Separate OPAQUE and MASK queue\r\n\r\n            // add opaque and mask queue\r\n            pass.addQueue(QueueHint.NONE, 'reflect-map') // Currently we put OPAQUE and MASK into one queue, so QueueHint is NONE\r\n                .addScene(camera,\r\n                    SceneFlags.OPAQUE | SceneFlags.MASK | SceneFlags.REFLECTION_PROBE,\r\n                    mainLight || undefined,\r\n                    scene ? scene : undefined);\r\n        }\r\n\r\n        private _tryAddReflectionProbePasses(ppl: rendering.BasicPipeline, id: number,\r\n            mainLight: renderer.scene.DirectionalLight | null,\r\n            scene: renderer.RenderScene | null,\r\n        ): void {\r\n            const reflectionProbeManager = cclegacy.internal.reflectionProbeManager as ReflectionProbeManager | undefined;\r\n            if (!reflectionProbeManager) {\r\n                return;\r\n            }\r\n            const probes = reflectionProbeManager.getProbes();\r\n            const maxProbeCount = 4;\r\n            let probeID = 0;\r\n            for (const probe of probes) {\r\n                if (!probe.needRender) {\r\n                    continue;\r\n                }\r\n                const area = probe.renderArea();\r\n                const width = Math.max(Math.floor(area.x), 1);\r\n                const height = Math.max(Math.floor(area.y), 1);\r\n\r\n                if (probe.probeType === renderer.scene.ProbeType.PLANAR) {\r\n                    if (!this._cameraConfigs.enablePlanarReflectionProbe) {\r\n                        continue;\r\n                    }\r\n                    const window: renderer.RenderWindow = probe.realtimePlanarTexture!.window!;\r\n                    const colorName = `PlanarProbeRT${probeID}`;\r\n                    const depthStencilName = `PlanarProbeDS${probeID}`;\r\n                    // ProbeResource\r\n                    ppl.addRenderWindow(colorName,\r\n                        this._cameraConfigs.radianceFormat, width, height, window);\r\n                    ppl.addDepthStencil(depthStencilName,\r\n                        gfx.Format.DEPTH_STENCIL, width, height, ResourceResidency.MEMORYLESS);\r\n\r\n                    // Rendering\r\n                    const probePass = ppl.addRenderPass(width, height, 'default');\r\n                    probePass.name = `PlanarReflectionProbe${probeID}`;\r\n                    this._buildReflectionProbePass(probePass, id, probe.camera,\r\n                        colorName, depthStencilName, mainLight, scene);\r\n                } else if (EDITOR) {\r\n                    for (let faceIdx = 0; faceIdx < probe.bakedCubeTextures.length; faceIdx++) {\r\n                        probe.updateCameraDir(faceIdx);\r\n                        const window: renderer.RenderWindow = probe.bakedCubeTextures[faceIdx].window!;\r\n                        const colorName = `CubeProbeRT${probeID}${faceIdx}`;\r\n                        const depthStencilName = `CubeProbeDS${probeID}${faceIdx}`;\r\n                        // ProbeResource\r\n                        ppl.addRenderWindow(colorName,\r\n                            this._cameraConfigs.radianceFormat, width, height, window);\r\n                        ppl.addDepthStencil(depthStencilName,\r\n                            gfx.Format.DEPTH_STENCIL, width, height, ResourceResidency.MEMORYLESS);\r\n\r\n                        // Rendering\r\n                        const probePass = ppl.addRenderPass(width, height, 'default');\r\n                        probePass.name = `CubeProbe${probeID}${faceIdx}`;\r\n                        this._buildReflectionProbePass(probePass, id, probe.camera,\r\n                            colorName, depthStencilName, mainLight, scene);\r\n                    }\r\n                    probe.needRender = false;\r\n                }\r\n                ++probeID;\r\n                if (probeID === maxProbeCount) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        private _initMaterials(ppl: rendering.BasicPipeline): number {\r\n            if (this._initialized) {\r\n                return 0;\r\n            }\r\n\r\n            setupPipelineConfigs(ppl, this._configs);\r\n\r\n            // When add new effect asset, please add its uuid to the dependentAssets in cc.config.json.\r\n            this._copyAndTonemapMaterial._uuid = `builtin-pipeline-tone-mapping-material`;\r\n            this._copyAndTonemapMaterial.initialize({ effectName: 'pipeline/post-process/tone-mapping' });\r\n\r\n            if (this._copyAndTonemapMaterial.effectAsset) {\r\n                this._initialized = true;\r\n            }\r\n\r\n            return this._initialized ? 0 : 1;\r\n        }\r\n    }\r\n\r\n    rendering.setCustomPipeline('Builtin', new BuiltinPipelineBuilder());\r\n\r\n} // if (rendering)\r\n"]}