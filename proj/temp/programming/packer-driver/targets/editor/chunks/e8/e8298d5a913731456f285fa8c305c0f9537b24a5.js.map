{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/manager/Guide.ts"],"names":["Guide","SystenDoor","GuideLay","GuideSub","PointTo","PlayVideo","BlockInputEvents","Button","Input","Label","Layers","Node","Sprite","SpriteFrame","Tween","UITransform","Widget","easing","find","game","instantiate","js","math","path","sp","tween","v3","view","EventMgr","PanelDefine","GameSet","CfgMgr","Tips","CheckCondition","Goto","ResMgr","folder_common","GameObj","Panel","Utils","Snapshot","LocalStorage","PlayerData","constructor","systems","guides","updateLoop","addTick","update","AddChan","Init","fetch","ShowTop","length","door","pop","destory","stdDoors","Get","std","push","guide","player","statusMark","NoobCardsAdd","SetNumber","stdGuids","stdGuide","GetNumber","ID","link","params","route","split","classz","getClassByName","shift","h","Show","target","activeInHierarchy","emit","dt","i","isEnd","splice","open","msg","seed","n","types","values","undefined","type","value","IsArray","uis","UI","HideType","url","active","resetBtn","getChildByName","lock","sprite","addComponent","addChild","LoadResAbSub","join","sf","spriteFrame","maskTouch","size","getComponent","contentSize","sx","getScale","x","sy","y","mask","setContentSize","width","height","on","EventType","TOUCH_START","breakTouch","TOUCH_END","TOUCH_CANCEL","PARENT_CHANGED","onParentChange","e","currentTarget","btn","evt","dispatchEvent","parent","removeChild","off","destroy","isOpen","Std","prefab","onShow","flush","args","onHide","Add","node","$instance","Del","$loading","cfg","state","progress","pointTo","video","$currentTarget","loop","result","cs","vs","next","end","checkTarget","isRunning","Steps","OpenUI","receive","Type","OverTime","step","Prefabs","Create","Play","modal","console","log","Target","Angle","Offset","TipsAngle","TipsOffset","TipsSize","clickSzie","ClickSize","Childs","id","$prefab","modalMask","finger","pointer","tips","label","overTime","img","imgSp","sub","duration","tipsSize","pointerAngle","offset","msgAngle","msgOffset","secondTick","onLoad","widget","isAlignLeft","isAlignRight","isAlignBottom","isAlignTop","left","right","bottom","top","getVisibleSize","ut","clone","Stop","$hasLoad","loadSub","angle","msgSize","string","prefabNode","setSiblingIndex","name","onModalTouch","layer","Enum","onTouchCanvas","once","onTouch","pointSub","position","setPosition","to","quadOut","call","bind","start","quadIn","out","mainCamera","worldToScreen","worldPosition","p","getLocation","w","Math","abs","isValid","UICamera","CLICK","convertToUINode","Number","Convert","box","GetBoundingBoxTo","max","xMin","xMax","yMin","yMax","cos","toRadian","min","sin","setRotationFromEuler","rad","fingerSize","fingerWide","a","b","Remove","stopAllByTarget","targetUrl","startTick","ls","children","child","totalTime","t","list","index","floor","sk","Skeleton","action","GetSkeAciton","setAnimation","getCurrent","animation","scale","timeScale"],"mappings":"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","sourcesContent":["import { BlockInputEvents, Button, EventTouch, Input, Label, Layers, Node, Size, Sprite, SpriteFrame, System, Tween, UITransform, Vec2, Widget, debug, director, easing, find, game, input, instantiate, js, math, path, sp, tween, v2, v3, view } from \"cc\";\r\nimport { EventMgr } from \"./EventMgr\";\r\nimport { PanelDefine } from \"../PanelDefine\";\r\nimport { GameSet } from \"./GameSet\";\r\nimport { CfgMgr, StdGuide, StdUIOpen } from \"./CfgMgr\";\r\nimport { Tips } from \"../module/common/Tips\";\r\nimport { CheckCondition, Goto } from \"../DL\";\r\nimport { ResMgr, folder_common } from \"./ResMgr\";\r\nimport { GameObj, Panel } from \"./GameRoot\";\r\nimport { Second, Utils } from \"../utils/Utils\";\r\nimport { Snapshot } from \"../utils/Snapshot\";\r\nimport LocalStorage from \"../utils/LocalStorage\";\r\nimport { PlayerData } from \"../module/player/PlayerData\";\r\n\r\n/**\r\n * 引导系统\r\n */\r\nexport class Guide {\r\n\r\n    protected systems: SystenDoor[] = [];\r\n    protected guides: GuideSub[] = [];\r\n\r\n    constructor() {\r\n        GameSet.addTick(this.update, this);\r\n        EventMgr.AddChan('reset_guide', this.Init, this);\r\n        EventMgr.AddChan('ui_guide', this.fetch, this);\r\n    }\r\n\r\n    /**\r\n     * 初始\r\n     */\r\n    protected async Init() {\r\n        await GuideLay.ShowTop();\r\n        while (this.systems.length) {\r\n            let door = this.systems.pop();\r\n            door.destory();\r\n        }\r\n        let stdDoors = CfgMgr.Get(\"SystemOpen\");\r\n        for (let std of stdDoors) {\r\n            let door = new SystenDoor(std);\r\n            this.systems.push(door);\r\n        }\r\n\r\n        while (this.guides.length) {\r\n            let guide = this.guides.pop();\r\n            guide.destory();\r\n        }\r\n\r\n        if (PlayerData.player?.statusMark.NoobCardsAdd) {\r\n            LocalStorage.SetNumber(\"guide301\", 1);\r\n            LocalStorage.SetNumber(\"guide302\", 1);\r\n        }\r\n\r\n        let stdGuids: StdGuide[] = CfgMgr.Get(\"guide\");\r\n        for (let stdGuide of stdGuids) {\r\n            if (!LocalStorage.GetNumber(\"guide\" + stdGuide.ID, 0)) {\r\n                this.guides.push(new GuideSub(stdGuide));\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 打开界面\r\n     * @param link \r\n     * @param params \r\n     * @returns \r\n     */\r\n    protected fetch(link: string, ...params: any[]) {\r\n        let route = link.split(\".\");\r\n        if (PanelDefine[route[0]]) {\r\n            let classz: any = js.getClassByName(route.shift());\r\n            if (!classz) return;\r\n            if (route.length) {\r\n                for (let h of route) {\r\n                    classz = classz[h];\r\n                }\r\n                classz(...params);\r\n            } else {\r\n                classz.Show(...params);\r\n            }\r\n        } else {\r\n            let target = find(route[0]);\r\n            if (target && target.activeInHierarchy && params) {\r\n                target.emit(params.shift(), ...params);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected updateLoop = 0;\r\n    protected update(dt: number) {\r\n        this.updateLoop += dt;\r\n        if (this.updateLoop >= 0.25) {\r\n            this.updateLoop = 0;\r\n            for (let door of this.systems) {\r\n                door.update();\r\n            }\r\n            let i = 0;\r\n            while (i < this.guides.length) {\r\n                let guide = this.guides[i];\r\n                guide.update();\r\n                if (guide.isEnd) {\r\n                    this.guides[i].destory();\r\n                    this.guides.splice(i, 1);\r\n                } else {\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * 系统开启\r\n */\r\nclass SystenDoor {\r\n    private std: StdUIOpen;\r\n    private open: boolean = true;\r\n    private msg: string;\r\n    constructor(std: StdUIOpen) {\r\n        this.std = std;\r\n    }\r\n    update() {\r\n        // 判断触发条件\r\n        let seed = true;\r\n        for (let n = 1; ; n++) {\r\n            let types = this.std['ConditionId' + n];\r\n            let values = this.std['ConditionValue' + n];\r\n            if (types == undefined || types.length == 0 || values == undefined) break;\r\n\r\n            for (let i = 0; i < types.length; i++) {\r\n                let type = types[i];\r\n                let value = values[i];\r\n                if (!Utils.IsArray(value)) value = [value];\r\n                if (!CheckCondition(type, ...value)) this.msg = this.std.Tips;\r\n                if (this.msg != undefined) {\r\n                    seed = false;\r\n                    break;\r\n                }\r\n            }\r\n            if (seed) break;\r\n        }\r\n        if (seed) {\r\n            if (!this.open) {\r\n                this.open = true;\r\n            } else {\r\n                return;\r\n            }\r\n        } else if (this.open) {\r\n            this.open = false;\r\n        } else {\r\n            return;\r\n        }\r\n        let uis: string[] = this.std.UI;\r\n        let types: number[] = this.std.HideType;\r\n        for (let i = 0; i < uis.length; i++) {\r\n            let url = uis[i];\r\n            let target = find(url);\r\n            if (!target) continue;\r\n            // 系统入口开启或隐藏样式\r\n            switch (types[i]) {\r\n                case 0:\r\n                    target.active = this.open;\r\n                    break;\r\n                case 1:\r\n                    if (this.open) {\r\n                        this.resetBtn(target);\r\n                    } else {\r\n                        if (target.getChildByName(`lock`)) {\r\n                            target.getChildByName(`lock`).active = true;\r\n                        } else {\r\n                            let lock = new Node(\"lock\");\r\n                            let sprite = lock.addComponent(Sprite);\r\n                            target.addChild(lock);\r\n                            ResMgr.LoadResAbSub(path.join(folder_common, \"lock/spriteFrame\"), SpriteFrame, sf => {\r\n                                sprite.spriteFrame = sf;\r\n                            });\r\n                        }\r\n                        this.maskTouch(target);\r\n                    }\r\n                    break;\r\n                default:\r\n                    target.active = this.open;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected maskTouch(target: any) {\r\n        if (!target['$$mask']) {\r\n            let size = target.getComponent(UITransform).contentSize;\r\n            let sx = target.getScale().x, sy = target.getScale().y;\r\n            let mask = new Node('mask');\r\n            mask.addComponent(Sprite);\r\n            mask.addComponent(BlockInputEvents);\r\n            mask.getComponent(UITransform).setContentSize(size.width * sx, size.height * sy);\r\n            target.addChild(mask);\r\n            target['$$mask'] = mask;\r\n            mask['$$target'] = target;\r\n            mask.on(Input.EventType.TOUCH_START, this.breakTouch, this);\r\n            mask.on(Input.EventType.TOUCH_END, this.breakTouch, this);\r\n            mask.on(Input.EventType.TOUCH_CANCEL, this.breakTouch, this);\r\n            target.on(Node.EventType.PARENT_CHANGED, this.onParentChange, this);\r\n        }\r\n    }\r\n    protected breakTouch(e: EventTouch) {\r\n        let target = e.currentTarget['$$target'];\r\n        let btn = target.getComponent(Button);\r\n        if (btn) {\r\n            if (e.type == Input.EventType.TOUCH_END) {\r\n                btn['_pressed'] = false;\r\n                btn['_updateState']();\r\n            } else {\r\n                let evt = instantiate(e);\r\n                evt.target = btn;\r\n                evt.currentTarget = btn;\r\n                target.dispatchEvent(evt);\r\n            }\r\n        }\r\n        if (e.type == Input.EventType.TOUCH_END) Tips.Show(this.msg);\r\n    }\r\n    protected onParentChange(target: any) {\r\n        if (!target || !target['$$mask']) return;\r\n        if (target['$$mask'].parent) {\r\n            target['$$mask'].parent.removeChild(target['$$mask']);\r\n        }\r\n    }\r\n\r\n    resetBtn(target: Node) {\r\n        target.active = true\r\n        if (target.getChildByName(`lock`)) target.getChildByName(`lock`).active = false;\r\n        if (target['$$mask']) {\r\n            let mask = target['$$mask'];\r\n            target['$$mask'] = undefined;\r\n            mask.off(Input.EventType.TOUCH_START);\r\n            mask.off(Input.EventType.TOUCH_END);\r\n            mask.off(Input.EventType.TOUCH_CANCEL);\r\n            mask.parent && mask.parent.removeChild(mask);\r\n            mask.destroy();\r\n        }\r\n    }\r\n    get isOpen() {\r\n        return this.open;\r\n    }\r\n    get Std() {\r\n        return this.std;\r\n    }\r\n\r\n    destory() {\r\n        if (!this.std) return;\r\n        let uis: string[] = this.std.UI;\r\n        if (!uis) return;\r\n        for (let i = 0; i < uis.length; i++) {\r\n            let url = uis[i];\r\n            let target = find(url);\r\n            if (!target) continue;\r\n            target.active = true;\r\n            this.resetBtn(target);\r\n        }\r\n    }\r\n}\r\n\r\nexport class GuideLay extends Panel {\r\n    protected prefab: string = \"prefabs/guide/GuideLay\";\r\n    protected onShow(): void { }\r\n    public flush(...args: any[]): void { }\r\n    protected onHide(...args: any[]): void { }\r\n    static async Add(node: Node) {\r\n        if (!this.$instance) await this.ShowTop();\r\n        this.$instance.node.addChild(node);\r\n    }\r\n    static async Del(node: Node) {\r\n        if (!this.$instance) await this.$loading;\r\n        this.$instance.node.removeChild(node);\r\n    }\r\n}\r\n\r\n/**\r\n * 引导\r\n */\r\nexport class GuideSub {\r\n    protected state: number;\r\n    protected progress: number;\r\n    protected cfg: StdGuide;\r\n    protected pointTo: PointTo;\r\n    protected video: PlayVideo;\r\n    protected $currentTarget: Node;\r\n    protected loop = 0;\r\n\r\n    constructor(cfg: StdGuide) {\r\n        this.cfg = cfg;\r\n        this.progress = 0;\r\n        this.state = 0;\r\n    }\r\n\r\n    set currentTarget(value: Node) {\r\n        this.$currentTarget = value;\r\n    }\r\n    get currentTarget() {\r\n        return this.$currentTarget\r\n    }\r\n\r\n    update() {\r\n        if (!this.state) {\r\n            let result = true;\r\n            for (let n = 1; ; n++) {\r\n                let cs = this.cfg[\"ConditionId\" + n];\r\n                if (cs == undefined || !cs.length) break;\r\n                let vs = this.cfg[\"ConditionValue\" + n];\r\n                for (let i = 0; i < cs.length; i++) {\r\n                    let values = vs[i];\r\n                    if (!Utils.IsArray(values)) values = [values];\r\n                    if (!CheckCondition(cs[i], ...values)) {\r\n                        result = false;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (result) {\r\n                //开始指引\r\n                this.state = 1;\r\n                this.progress = -1;\r\n                this.next();\r\n            }\r\n        } else if (this.state == 1) {\r\n            let result = false;\r\n            for (let n = 1; ; n++) {\r\n                let cs = this.cfg[\"EndConditionId\" + n];\r\n                if (cs == undefined || !cs.length) break;\r\n                let vs = this.cfg[\"EndConditionValue\" + n];\r\n                for (let i = 0; i < cs.length; i++) {\r\n                    let values = vs[i];\r\n                    if (!Utils.IsArray(values)) values = [values];\r\n                    if (CheckCondition(cs[i], ...values)) {\r\n                        result = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (result) {\r\n                this.end();\r\n            } else {\r\n                if (!this.currentTarget) {\r\n                    this.next();\r\n                } else {\r\n                    this.checkTarget();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    get isRunning() {\r\n        return this.state == 1;\r\n    }\r\n    get isEnd() {\r\n        return this.state == 2;\r\n    }\r\n    protected async next(e?: any) {\r\n        if (this.progress + 1 <= this.cfg.Steps.length) {\r\n            if (e && this.cfg.OpenUI[this.progress]) {\r\n                Goto(this.cfg.OpenUI[this.progress]);\r\n            }\r\n\r\n            if (this.pointTo) {\r\n                this.pointTo.receive();\r\n                this.pointTo = undefined;\r\n            }\r\n            if (this.video) {\r\n                this.video.receive();\r\n                this.video = undefined;\r\n            }\r\n            this.currentTarget = undefined;\r\n            let i = this.progress + 1, cfg = this.cfg;\r\n            if (!cfg.Type[i] && cfg.OverTime[i] == undefined) {\r\n                this.progress++;\r\n                return this.next();\r\n            }\r\n            let step = cfg.Steps[i];\r\n            if (cfg?.Type?.[i] == 3) {\r\n                if (!cfg.Prefabs[i]) return this.next();\r\n                this.video = PlayVideo.Create(\"prefabs/guide/\" + cfg.Prefabs[i]);\r\n                this.video.on(\"end\", this.next, this);\r\n                this.video.Play(cfg?.OverTime?.[i] || 0);\r\n                this.progress++;\r\n                this.currentTarget = this.video;\r\n                return;\r\n            }\r\n            this.currentTarget = step ? find(step) : undefined;\r\n            if (!this.currentTarget || !this.currentTarget.activeInHierarchy) {\r\n                this.currentTarget = undefined;\r\n                return;\r\n            }\r\n            let modal = false;\r\n            if (cfg.Type?.[i] == 0) {\r\n                modal = true;\r\n            } else {\r\n                modal = cfg.Type?.[i] == 2;\r\n            }\r\n            this.pointTo = PointTo.Create();\r\n            this.pointTo.on(\"end\", this.next, this);\r\n            console.log(\"Step--->\", step, this.currentTarget);\r\n            this.pointTo.Target(this.currentTarget, cfg.Angle?.[i], cfg.Tips?.[i], modal, cfg.Offset?.[i], cfg.TipsAngle?.[i], cfg.TipsOffset?.[i], cfg.TipsSize?.[i], cfg.OverTime[i] ? cfg.OverTime[i] : undefined);\r\n            this.pointTo.clickSzie = [cfg?.ClickSize?.[0] || 100, cfg?.ClickSize?.[1] || 100];\r\n            this.progress++;\r\n        } else {\r\n            this.end();\r\n        }\r\n    }\r\n    protected checkTarget() {\r\n        let cfg = this.cfg;\r\n        let step = this.cfg.Steps[this.progress];\r\n        if (this.cfg?.Type?.[this.progress] == 3) return;\r\n        let target = step ? find(step) : undefined;\r\n        if (!this.currentTarget || this.currentTarget == target) return;\r\n        let modal = false;\r\n        if (this.cfg.Type?.[this.progress] == 0) {\r\n            modal = true;\r\n        } else {\r\n            modal = this.cfg.Type?.[this.progress] == 2;\r\n        }\r\n        let i = this.progress;\r\n        this.currentTarget = target;\r\n        if (this.pointTo) this.pointTo.receive()\r\n        this.pointTo = PointTo.Create();\r\n        this.pointTo.on(\"end\", this.next, this);\r\n        this.pointTo.Target(this.currentTarget, cfg.Angle?.[i], cfg.Tips?.[i], modal, cfg.Offset?.[i], cfg.TipsAngle?.[i], cfg.TipsOffset?.[i], cfg.TipsSize?.[i], cfg.OverTime[i] ? cfg.OverTime[i] : undefined);\r\n        this.pointTo.clickSzie = [cfg?.ClickSize?.[0] || 100, cfg?.ClickSize?.[1] || 100];\r\n    }\r\n    protected end() {\r\n        LocalStorage.SetNumber(\"guide\" + this.cfg.ID, 1);\r\n        if (this.cfg.Childs) {\r\n            for (let id of this.cfg.Childs) {\r\n                LocalStorage.SetNumber(\"guide\" + id, 1);\r\n            }\r\n        }\r\n        this.state = 2;\r\n        this.currentTarget = undefined;\r\n        if (this.pointTo) {\r\n            this.pointTo.receive();\r\n            this.pointTo = undefined;\r\n        }\r\n        if (this.video) {\r\n            this.video.receive();\r\n            this.video = undefined;\r\n        }\r\n\r\n        if (this.cfg.OpenUI[this.cfg.OpenUI.length - 1]) {\r\n            Goto(this.cfg.OpenUI[this.cfg.OpenUI.length - 1]);\r\n        }\r\n    }\r\n    destory() {\r\n        this.currentTarget = undefined;\r\n        if (this.pointTo) {\r\n            this.pointTo.receive();\r\n            this.pointTo = undefined;\r\n        }\r\n        if (this.video) {\r\n            this.video.receive();\r\n            this.video = undefined;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * 指引\r\n */\r\nexport class PointTo extends GameObj {\r\n    protected $prefab: string = \"prefabs/guide/PointTo\";\r\n    protected cfg: StdGuide;\r\n    protected modalMask: Node;\r\n    protected finger: Node;\r\n    protected pointer: Node;\r\n    protected tips: Node;\r\n    protected label: Label;\r\n\r\n    target: Node;\r\n    protected overTime: number;\r\n    protected img: Node;\r\n    protected imgSp: Sprite;\r\n    protected sub = 50;\r\n    protected duration = 0.4;\r\n    protected modal = false;\r\n    protected tipsSize: Size;\r\n    protected pointerAngle: number;\r\n    protected offset: number[];\r\n    protected msgAngle: number;\r\n    protected msgOffset: number[];\r\n\r\n    protected onLoad(): void {\r\n        let widget = this.addComponent(Widget);\r\n        widget.isAlignLeft = widget.isAlignRight = widget.isAlignBottom = widget.isAlignTop = true;\r\n        widget.left = 0;\r\n        widget.right = 0;\r\n        widget.bottom = 0;\r\n        widget.top = 0;\r\n        let size = view.getVisibleSize();\r\n        let ut = this.getComponent(UITransform);\r\n        ut.setContentSize(size);\r\n        this.modalMask = this.find(\"mask\");\r\n        this.pointer = this.find(\"pointer\");\r\n        this.finger = this.pointer.getChildByName(\"finger\");\r\n        this.tips = this.find(\"tips\");\r\n        this.label = this.find(\"tips/label\").getComponent(Label);\r\n        this.tipsSize = this.tips.getComponent(UITransform).contentSize.clone();\r\n    }\r\n\r\n    async Stop() {\r\n        if (!this.$hasLoad) await this.loadSub;\r\n        this.active = false;\r\n    }\r\n\r\n    async Target(node: Node, angle: number, msg: string = \"\", modal: boolean = false, offset: number[], msgAngle?: number, msgOffset?: number[], msgSize?: number[], duration?: number) {\r\n        GuideLay.Add(this);\r\n        this.clickSzie = [];\r\n        this.overTime = duration;\r\n        this.pointerAngle = angle;\r\n        this.modal = modal;\r\n        if (!this.$hasLoad) await this.loadSub;\r\n        // this.modalMask.active = modal;\r\n        if (!msgSize) msgSize = [this.tipsSize.x, this.tipsSize.y];\r\n        this.offset = offset || [0, 0];\r\n        this.msgAngle = msgAngle;\r\n        this.msgOffset = msgOffset || [0, 0];\r\n        this.tips.getComponent(UITransform).setContentSize(msgSize[0], msgSize[1]);\r\n        this.label.string = msg;\r\n        this.tips.active = (msg != \"\");\r\n        this.target = node;\r\n        if (this.modal) {\r\n            this.img = Snapshot.Add(this.target);\r\n            this.prefabNode.addChild(this.img);\r\n            this.img.setSiblingIndex(1);\r\n            this.img.name = msg;\r\n            this.img.on(Input.EventType.TOUCH_START, this.onModalTouch, this);\r\n        } else {\r\n            if (this.target.layer & Layers.Enum['SCENE']) {\r\n                find(\"Canvas\").on(Input.EventType.TOUCH_START, this.onTouchCanvas, this);\r\n            } else {\r\n                this.target.once(Input.EventType.TOUCH_START, this.onTouch, this);\r\n            }\r\n        }\r\n\r\n        this.pointSub();\r\n        this.update(1);\r\n    }\r\n    protected pointSub() {\r\n        if (this.finger.position.x < this.sub) {\r\n            this.finger.setPosition(0, 0, 0);\r\n            tween(this.finger).to(this.duration, { position: v3(this.sub, 0, 0) }, { easing: easing.quadOut }).call(this.pointSub.bind(this)).start();\r\n        } else {\r\n            this.finger.setPosition(this.sub, 0, 0);\r\n            tween(this.finger).to(this.duration, { position: v3(0, 0, 0) }, { easing: easing.quadIn }).call(this.pointSub.bind(this)).start();\r\n        }\r\n    }\r\n    clickSzie = [];\r\n    protected onTouchCanvas(e: EventTouch) {\r\n        let out = v3();\r\n        GameSet.mainCamera.worldToScreen(this.target.worldPosition, out);\r\n        let p = e.getLocation();\r\n        let w = this.clickSzie[0] || 100, h = this.clickSzie[1] || 100;\r\n        if (Math.abs(p.x - out.x) <= w && Math.abs(p.y - out.y) <= h) {\r\n            if (this.target) {\r\n                e.type = Input.EventType.TOUCH_END;\r\n                this.target.dispatchEvent(e);\r\n                this.end();\r\n            } else {\r\n\r\n            }\r\n        }\r\n    }\r\n    protected onModalTouch(e: EventTouch) {\r\n        if (this.target && this.target.isValid) {\r\n            let out = v3();\r\n            if (this.target.layer & Layers.Enum['SCENE']) {\r\n                GameSet.mainCamera.worldToScreen(this.target.worldPosition, out);\r\n                let p = e.getLocation();\r\n                let w = this.clickSzie[0] || 100, h = this.clickSzie[1] || 100;\r\n                if (Math.abs(p.x - out.x) <= w && Math.abs(p.y - out.y) <= h) {\r\n\r\n                } else return;\r\n            } else {\r\n                GameSet.UICamera.worldToScreen(this.target.worldPosition, out);\r\n                let p = e.getLocation();\r\n                let w = 100, h = 100;\r\n                if (this.clickSzie[0] != undefined && this.clickSzie[1] != undefined) {\r\n                    w = this.clickSzie[0], h = this.clickSzie[1];\r\n                }\r\n                if (Math.abs(p.x - out.x) <= w && Math.abs(p.y - out.y) <= h) {\r\n\r\n                } else return;\r\n            }\r\n            e.type = Input.EventType.TOUCH_END;\r\n            this.target.dispatchEvent(e);\r\n            this.target.emit(Button.EventType.CLICK, this.target.getComponent(Button));\r\n        }\r\n        this.end();\r\n    }\r\n    protected onTouch(e: EventTouch) {\r\n        if (this.target && this.target.isValid) {\r\n            this.target.off(Input.EventType.TOUCH_START, this.onTouch, this);\r\n        }\r\n        this.end();\r\n    }\r\n\r\n    protected secondTick = 0;\r\n    protected update(dt: number) {\r\n        if (this.overTime != undefined) {\r\n            this.overTime -= dt;\r\n            if (this.overTime <= 0) {\r\n                // if (this.target && this.target.isValid) {\r\n                //     this.target.dispatchEvent(new EventTouch([], true, Input.EventType.TOUCH_END));\r\n                //     this.target.emit(Button.EventType.CLICK, this.target.getComponent(Button));\r\n                // }\r\n                this.overTime = undefined;\r\n                this.end();\r\n                return;\r\n            }\r\n        }\r\n        this.secondTick += dt;\r\n        if (!this.target || this.secondTick < 0.25) return;\r\n        this.secondTick = 0;\r\n\r\n        if (!this.modal && !this.target.activeInHierarchy) {\r\n            this.active = false;\r\n            return;\r\n        }\r\n        this.active = true;\r\n        let offset = this.offset;\r\n        if (this.target.layer & Layers.Enum['SCENE']) {\r\n            let out = v3();\r\n            GameSet.mainCamera.convertToUINode(this.target.worldPosition, find(\"Canvas\"), out);\r\n            this.pointer.setPosition(out.x + (Number(offset[0]) || 0), out.y + Number(offset[1] || 0));\r\n        } else {\r\n            let [x, y] = Utils.Convert(0, 0, this.target, this.prefabNode);\r\n            let box = Utils.GetBoundingBoxTo(this.target, this.pointer.parent);\r\n            let w = Math.max(Math.abs(box.xMin - x), Math.abs(box.xMax - x));\r\n            let h = Math.max(Math.abs(box.yMin - y), Math.abs(box.yMax - y));\r\n            w = Math.max(w, h) * Math.cos(math.toRadian(this.pointerAngle));\r\n            h = Math.min(w, h) * Math.sin(math.toRadian(this.pointerAngle));\r\n            this.pointer.setPosition(x + w + (Number(offset[0]) || 0), y + h + Number(offset[1] || 0));\r\n        }\r\n        this.pointer.setRotationFromEuler(0, 0, this.pointerAngle);\r\n\r\n        let rad = math.toRadian(this.pointerAngle);\r\n        if (this.msgAngle) rad = this.msgAngle;\r\n\r\n        let fingerSize = this.finger.getComponent(UITransform).contentSize;\r\n        let fingerWide = Math.max(fingerSize.width, fingerSize.height);\r\n        let size = this.tips.getComponent(UITransform).contentSize;\r\n        let a = Math.max(size.width, size.height) / 2 + this.sub + fingerWide;\r\n        let b = Math.min(size.width, size.height) / 2 + this.sub + fingerWide;\r\n        this.tips.setPosition(this.pointer.position.x + a * Math.cos(rad) + this.msgOffset[0], this.pointer.position.y + b * Math.sin(rad) + this.msgOffset[1]);\r\n    }\r\n\r\n    protected end() {\r\n        if (this.target) {\r\n            this.target.off(Input.EventType.TOUCH_START, this.onTouch, this);\r\n            Snapshot.Remove(this.target);\r\n        }\r\n        if (this.img) {\r\n            this.img.off(Input.EventType.TOUCH_START, this.onModalTouch, this);\r\n            this.img.parent && this.img.parent.removeChild(this.img);\r\n        }\r\n        find(\"Canvas\").off(Input.EventType.TOUCH_START, this.onTouchCanvas, this);\r\n        this.emit('end', this);\r\n    }\r\n    async receive() {\r\n        if (!this.$hasLoad) await this.loadSub;\r\n        if (this.target) {\r\n            this.target.off(Input.EventType.TOUCH_START, this.onTouch, this);\r\n            Snapshot.Remove(this.target);\r\n        }\r\n        this.off(\"end\");\r\n        this.Stop();\r\n        if (this.img) {\r\n            this.img.off(Input.EventType.TOUCH_START, this.onModalTouch, this);\r\n            this.img.parent && this.img.parent.removeChild(this.img);\r\n            this.img.off(Input.EventType.TOUCH_END);\r\n        }\r\n        this.img = undefined;\r\n        if (this.target) {\r\n            if (this.target.isValid) this.target.off(Input.EventType.TOUCH_END, this.onTouch, this);\r\n            this.target = undefined;\r\n        }\r\n        find(\"Canvas\").off(Input.EventType.TOUCH_START, this.onTouchCanvas, this);\r\n        Tween.stopAllByTarget(this.pointer);\r\n        super.receive();\r\n    }\r\n}\r\n\r\nclass PlayVideo extends GameObj {\r\n    protected $prefab: string;\r\n    protected targetUrl: string;\r\n    protected duration: number;\r\n    protected startTick: number;\r\n    async Play(duration: number) {\r\n        GuideLay.Add(this);\r\n        if (!this.$hasLoad) await this.loadSub;\r\n        let ls = this.prefabNode.children;\r\n        for (let child of ls) {\r\n            child.active = false;\r\n        }\r\n        this.duration = duration || 0.1;\r\n        this.startTick = game.totalTime / 1000;\r\n    }\r\n    protected update(dt: number): void {\r\n        let t = game.totalTime / 1000 - this.startTick;\r\n        if (t >= this.duration) {\r\n            this.end();\r\n            if (this.parent) this.parent.removeChild(this);\r\n            return;\r\n        }\r\n        let list = this.prefabNode.children;\r\n        let index = Math.floor(t / this.duration * list.length);\r\n        for (let i = 0; i < list.length; i++) {\r\n            let child = list[i];\r\n            if (i == index) {\r\n                if (!child.active) {\r\n                    child.active = true;\r\n                    let sk = child.getComponent(sp.Skeleton);\r\n                    if (sk) {\r\n                        let action = Utils.GetSkeAciton(sk);\r\n                        sk.setAnimation(0, action, false);\r\n                        let duration = sk.getCurrent(0)?.animation?.duration || 0;\r\n                        let scale = Math.min(1, this.duration / duration)\r\n                        sk.timeScale = scale;\r\n                    }\r\n                }\r\n            } else {\r\n                child.active = false;\r\n            }\r\n        }\r\n    }\r\n    end() {\r\n        this.emit('end', this);\r\n    }\r\n}"]}