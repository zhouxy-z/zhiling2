{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/utils/AutoScroller.ts"],"names":["Component","Event","EventTouch","Input","Layout","Node","ScrollView","UITransform","_decorator","instantiate","Second","ccclass","property","disallowMultiple","requireComponent","AutoScroller","scroller","createItem","updateItem","datas","itemPool","itemTransForm","original","startX","startY","showing","type","contentW","contentH","spaceX","spaceY","paddingLeft","paddingRight","paddingTop","paddingDown","selectIndex","isMoveSub","onLoad","getComponent","content","contentTrans","ins","width","height","children","length","position","x","y","trans","parent","removeChild","layout","paddingBottom","spacingX","spacingY","enabled","vertical","horizontal","Type","HORIZONTAL","VERTICAL","child","push","removeAllChildren","node","on","flush","apply","nestedCall","event","captureListeners","eventPhase","CAPTURING_PHASE","call","EventType","TOUCH_MOVE","e","target","propagationStopped","start","getStartLocation","curre","getLocation","isMoveX","Math","abs","isMoveY","TOUCH_END","TOUCH_CANCEL","UpdateDatas","SelectFirst","t","ScrollToHead","onSelect","SelectLast","ScrollToLast","scrollToTop","scrollToLeft","scrollToBottom","scrollToRight","ScrollNext","ScrollPrev","SetHandle","craeteItem","box","getBoundingBoxTo","getWorldMatrix","xMin","anchorX","contentSize","yMax","anchorY","Clean","item","itemSize","wide","len","max","setContentSize","col","getGridCol","row","ceil","k","undefined","itemW","floor","tempW","GetSelectIndex","reflush","getItem","index","pop","hasEventListener","emit","nx","ny","GRID","setPosition","reset","leftX","topY","rightX","xMax","downY","yMin","views","hide","end","i","addChild","isDel","receiveItem","ScrollToIndex","transform"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,S,OAAAA,S;AAAWC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,U,OAAAA,U;AAAYC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,I,OAAAA,I;AAAqBC,MAAAA,U,OAAAA,U;AAAkBC,MAAAA,W,OAAAA,W;AAAyBC,MAAAA,U,OAAAA,U;AAAYC,MAAAA,W,OAAAA,W;;AACzHC,MAAAA,M,iBAAAA,M;;;;;;;;;OAEH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA,QAAX;AAAqBC,QAAAA,gBAArB;AAAuCC,QAAAA;AAAvC,O,GAA4DN,U;;8BAKrDO,Y,WAHZJ,OAAO,CAAC,cAAD,C,UACPE,gBAAgB,CAAC,IAAD,C,UAChBC,gBAAgB,CAACR,UAAD,C,8CAFjB,MAGaS,YAHb,SAGkCf,SAHlC,CAG4C;AAAA;AAAA;AAAA,eAEhCgB,QAFgC;AAAA,eAGhCC,UAHgC;AAAA,eAIjCC,UAJiC;AAAA,eAKhCC,KALgC;AAAA,eAMhCC,QANgC,GAMb,EANa;AAAA,eAOhCC,aAPgC;AAAA,eAQhCC,QARgC;AAAA,eAShCC,MATgC;AAAA,eAUhCC,MAVgC;AAAA,eAWhCC,OAXgC,GAWG,EAXH;AAAA,eAYhCC,IAZgC;AAAA,eAahCC,QAbgC,GAab,CAba;AAAA,eAchCC,QAdgC,GAcb,CAda;AAAA,eAehCC,MAfgC,GAef,EAfe;AAAA,eAgBhCC,MAhBgC,GAgBf,EAhBe;AAAA,eAiBhCC,WAjBgC,GAiBV,CAjBU;AAAA,eAkBhCC,YAlBgC,GAkBT,CAlBS;AAAA,eAmBhCC,UAnBgC,GAmBX,CAnBW;AAAA,eAoBhCC,WApBgC,GAoBV,CApBU;AAAA,eAqBhCC,WArBgC;AAAA,eAsBhCC,SAtBgC,GAsBX,KAtBW;AAAA;;AAuB9BC,QAAAA,MAAM,GAAS;AACrB,cAAIrB,QAAQ,GAAG,KAAKsB,YAAL,CAAkBhC,UAAlB,CAAf;AACA,cAAI,CAACU,QAAD,IAAa,CAACA,QAAQ,CAACuB,OAA3B,EAAoC,MAAM,mBAAN;AACpC,cAAIC,YAAY,GAAGxB,QAAQ,CAACuB,OAAT,CAAiBD,YAAjB,CAA8B/B,WAA9B,CAAnB;AACA,cAAIkC,GAAG,GAAG,IAAV;AACAA,UAAAA,GAAG,CAACzB,QAAJ,GAAeA,QAAf;AACAyB,UAAAA,GAAG,CAACd,QAAJ,GAAea,YAAY,CAACE,KAA5B;AACAD,UAAAA,GAAG,CAACb,QAAJ,GAAeY,YAAY,CAACG,MAA5B;;AACA,cAAI,KAAK3B,QAAL,CAAcuB,OAAd,CAAsBK,QAAtB,CAA+BC,MAAnC,EAA2C;AACvC,iBAAKvB,QAAL,GAAgB,KAAKN,QAAL,CAAcuB,OAAd,CAAsBK,QAAtB,CAA+B,CAA/B,CAAhB;AACAH,YAAAA,GAAG,CAAClB,MAAJ,GAAakB,GAAG,CAACnB,QAAJ,CAAawB,QAAb,CAAsBC,CAAnC;AACAN,YAAAA,GAAG,CAACjB,MAAJ,GAAaiB,GAAG,CAACnB,QAAJ,CAAawB,QAAb,CAAsBE,CAAnC;AACA,gBAAIC,KAAK,GAAGR,GAAG,CAACnB,QAAJ,CAAagB,YAAb,CAA0B/B,WAA1B,CAAZ;AACAkC,YAAAA,GAAG,CAACnB,QAAJ,CAAa4B,MAAb,CAAoBC,WAApB,CAAgCV,GAAG,CAACnB,QAApC;AACAmB,YAAAA,GAAG,CAACpB,aAAJ,GAAoB4B,KAApB;AACH;;AAED,cAAIG,MAAM,GAAGpC,QAAQ,CAACuB,OAAT,CAAiBD,YAAjB,CAA8BlC,MAA9B,CAAb;;AACA,cAAIgD,MAAJ,EAAY;AACR;AACAX,YAAAA,GAAG,CAACf,IAAJ,GAAW0B,MAAM,CAAC1B,IAAlB;AACAe,YAAAA,GAAG,CAACR,UAAJ,GAAiBmB,MAAM,CAACnB,UAAxB;AACAQ,YAAAA,GAAG,CAACP,WAAJ,GAAkBkB,MAAM,CAACC,aAAzB;AACAZ,YAAAA,GAAG,CAACV,WAAJ,GAAkBqB,MAAM,CAACrB,WAAzB;AACAU,YAAAA,GAAG,CAACT,YAAJ,GAAmBoB,MAAM,CAACpB,YAA1B;AACAS,YAAAA,GAAG,CAACZ,MAAJ,GAAauB,MAAM,CAACE,QAApB;AACAb,YAAAA,GAAG,CAACX,MAAJ,GAAasB,MAAM,CAACG,QAApB;AACAH,YAAAA,MAAM,CAACI,OAAP,GAAiB,KAAjB;AACH,WAVD,MAUO;AACH,gBAAI,CAACxC,QAAQ,CAACyC,QAAV,IAAsBzC,QAAQ,CAAC0C,UAAnC,EAA+C;AAC3CjB,cAAAA,GAAG,CAACf,IAAJ,GAAWtB,MAAM,CAACuD,IAAP,CAAYC,UAAvB;AACH,aAFD,MAEO;AACHnB,cAAAA,GAAG,CAACf,IAAJ,GAAWtB,MAAM,CAACuD,IAAP,CAAYE,QAAvB;AACH;AACJ;;AACD,eAAK,IAAIC,KAAT,IAAkB9C,QAAQ,CAACuB,OAAT,CAAiBK,QAAnC,EAA6C;AACzCH,YAAAA,GAAG,CAACrB,QAAJ,CAAa2C,IAAb,CAAkBD,KAAlB;AACH;;AACD9C,UAAAA,QAAQ,CAACuB,OAAT,CAAiByB,iBAAjB;AAEAhD,UAAAA,QAAQ,CAACiD,IAAT,CAAcC,EAAd,CAAiB,WAAjB,EAA8B,MAAM;AAChCzB,YAAAA,GAAG,CAAC0B,KAAJ,CAAUC,KAAV,CAAgB3B,GAAhB;AACH,WAFD,EAEGA,GAFH;AAKA;;AACA,cAAI4B,UAAU,GAAGrD,QAAQ,CAAC,qBAAD,CAAzB;;AACAA,UAAAA,QAAQ,CAAC,qBAAD,CAAR,GAAkC,UAAUsD,KAAV,EAA6BC,gBAA7B,EAAwD;AACtF,gBAAID,KAAK,CAACE,UAAN,KAAqBvE,KAAK,CAACwE,eAA/B,EAAgD,OAAO,KAAP;AAChD,gBAAI,CAAChC,GAAG,CAACL,SAAT,EAAoB,OAAO,KAAP;AACpB,mBAAOiC,UAAU,CAACK,IAAX,CAAgB,IAAhB,EAAsBJ,KAAtB,EAA6BC,gBAA7B,CAAP;AACH,WAJD;;AAMAvD,UAAAA,QAAQ,CAACiD,IAAT,CAAcC,EAAd,CAAiB7D,IAAI,CAACsE,SAAL,CAAeC,UAAhC,EAA4C,UAAUC,CAAV,EAAwB;AAChE,gBAAIA,CAAC,CAACC,MAAF,IAAY9D,QAAQ,CAACiD,IAAzB,EAA+B;AAC3B,kBAAIxB,GAAG,CAACL,SAAR,EAAmB;AACnByC,cAAAA,CAAC,CAACE,kBAAF,GAAuB,IAAvB;AACA,kBAAIC,KAAK,GAAGH,CAAC,CAACI,gBAAF,EAAZ;AACA,kBAAIC,KAAK,GAAGL,CAAC,CAACM,WAAF,EAAZ;AACA,kBAAIC,OAAO,GAAGC,IAAI,CAACC,GAAL,CAASN,KAAK,CAACjC,CAAN,GAAUmC,KAAK,CAACnC,CAAzB,IAA8B,CAA5C;AACA,kBAAIwC,OAAO,GAAGF,IAAI,CAACC,GAAL,CAASN,KAAK,CAAChC,CAAN,GAAUkC,KAAK,CAAClC,CAAzB,IAA8B,CAA5C;;AACA,kBAAIhC,QAAQ,CAAC,YAAD,CAAR,IAA0B,CAACoE,OAA3B,IAAsCG,OAA1C,EAAmD;AAC/C9C,gBAAAA,GAAG,CAACL,SAAJ,GAAgB,IAAhB;AACH,eAFD,MAEO,IAAIpB,QAAQ,CAAC,UAAD,CAAR,IAAwB,CAACuE,OAAzB,IAAoCH,OAAxC,EAAiD;AACpD3C,gBAAAA,GAAG,CAACL,SAAJ,GAAgB,IAAhB;AACH,eAX0B,CAY3B;;AACH;AACJ,WAfD,EAeGK,GAfH,EAeQ,IAfR;AAgBAzB,UAAAA,QAAQ,CAACiD,IAAT,CAAcC,EAAd,CAAiB7D,IAAI,CAACsE,SAAL,CAAea,SAAhC,EAA2C,YAAY;AAAE/C,YAAAA,GAAG,CAACL,SAAJ,GAAgB,KAAhB;AAAuB,WAAhF,EAAkFK,GAAlF,EAAuF,IAAvF;AACAzB,UAAAA,QAAQ,CAACiD,IAAT,CAAcC,EAAd,CAAiB7D,IAAI,CAACsE,SAAL,CAAec,YAAhC,EAA8C,YAAY;AAAEhD,YAAAA,GAAG,CAACL,SAAJ,GAAgB,KAAhB;AAAuB,WAAnF,EAAqFK,GAArF,EAA0F,IAA1F;AACA;;AAGA,cAAI,KAAKtB,KAAL,KAAe,KAAKG,QAAL,IAAiB,KAAKL,UAArC,CAAJ,EAAsD;AAClD,iBAAKyE,WAAL,CAAiB,KAAKvE,KAAtB;AACH;AAEJ;AACD;AACJ;AACA;;;AACqB,cAAXwE,WAAW,CAACC,CAAS,GAAG,GAAb,EAAkB;AAC/B,eAAKC,YAAL,CAAkBD,CAAlB;AACA,gBAAM;AAAA;AAAA,gCAAOA,CAAP,CAAN;AACA,cAAIhD,QAAQ,GAAG,KAAK5B,QAAL,CAAcuB,OAAd,CAAsBK,QAArC;;AACA,eAAK,IAAIkB,KAAT,IAAkBlB,QAAlB,EAA4B;AACxB,gBAAIkB,KAAK,CAAC,SAAD,CAAL,IAAoB,CAAxB,EAA2B;AACvB,mBAAKgC,QAAL,CAAchC,KAAd;AACA;AACH;AACJ;AACJ;;AACe,cAAViC,UAAU,CAACH,CAAS,GAAG,GAAb,EAAkB;AAC9B,eAAKI,YAAL,CAAkBJ,CAAlB;AACA,gBAAM;AAAA;AAAA,gCAAOA,CAAP,CAAN;AACA,cAAIhD,QAAQ,GAAG,KAAK5B,QAAL,CAAcuB,OAAd,CAAsBK,QAArC;;AACA,eAAK,IAAIkB,KAAT,IAAkBlB,QAAlB,EAA4B;AACxB,gBAAIkB,KAAK,CAAC,SAAD,CAAL,IAAoB,KAAK3C,KAAL,CAAW0B,MAAX,GAAoB,CAA5C,EAA+C;AAC3C,mBAAKiD,QAAL,CAAchC,KAAd;AACA;AACH;AACJ;AACJ;;AAGD+B,QAAAA,YAAY,CAACD,CAAS,GAAG,GAAb,EAAkB;AAC1B,cAAI,CAAC,KAAK5E,QAAV,EAAoB;;AACpB,cAAI,KAAKA,QAAL,CAAcyC,QAAlB,EAA4B;AACxB,iBAAKzC,QAAL,CAAciF,WAAd,CAA0BL,CAA1B;AACH,WAFD,MAEO;AACH,iBAAK5E,QAAL,CAAckF,YAAd,CAA2BN,CAA3B;AACH;AACJ;;AACDI,QAAAA,YAAY,CAACJ,CAAS,GAAG,GAAb,EAAkB;AAC1B,cAAI,CAAC,KAAK5E,QAAV,EAAoB;;AACpB,cAAI,KAAKA,QAAL,CAAcyC,QAAlB,EAA4B;AACxB,iBAAKzC,QAAL,CAAcmF,cAAd,CAA6BP,CAA7B;AACH,WAFD,MAEO;AACH,iBAAK5E,QAAL,CAAcoF,aAAd,CAA4BR,CAA5B;AACH;AACJ;;AACDS,QAAAA,UAAU,CAACT,CAAS,GAAG,CAAb,EAAgB;AACtB,eAAK5E,QAAL,CAAcoF,aAAd,CAA4BR,CAA5B;AACH;;AACDU,QAAAA,UAAU,CAACV,CAAS,GAAG,CAAb,EAAgB;AACtB,eAAK5E,QAAL,CAAckF,YAAd,CAA2BN,CAA3B;AACH;;AAEDW,QAAAA,SAAS,CAACrF,UAAD,EAA8CsF,UAA9C,EAAuE;AAC5E,eAAKtF,UAAL,GAAkBA,UAAlB;;AACA,cAAIsF,UAAJ,EAAgB;AACZ,iBAAKvF,UAAL,GAAkBuF,UAAlB;;AACA,gBAAI,CAAC,KAAKlF,QAAV,EAAoB;AAChB,kBAAI2B,KAAK,GAAGuD,UAAU,GAAGlE,YAAb,CAA0B/B,WAA1B,CAAZ;AACA,kBAAIkG,GAAG,GAAG,KAAKzF,QAAL,CAAcsB,YAAd,CAA2B/B,WAA3B,EAAwCmG,gBAAxC,CAAyD,KAAK1F,QAAL,CAAcuB,OAAd,CAAsBoE,cAAtB,EAAzD,CAAV;AACA,mBAAKpF,MAAL,GAAckF,GAAG,CAACG,IAAJ,GAAW3D,KAAK,CAAC4D,OAAN,GAAgB5D,KAAK,CAAC6D,WAAN,CAAkBpE,KAA3D;AACA,mBAAKlB,MAAL,GAAciF,GAAG,CAACM,IAAJ,GAAW,CAAC,IAAI9D,KAAK,CAAC+D,OAAX,IAAsB/D,KAAK,CAAC6D,WAAN,CAAkBnE,MAAjE;AACH;AACJ;AACJ;AAED;AACJ;AACA;;;AACIsE,QAAAA,KAAK,GAAG;AACJ,eAAKvB,WAAL,CAAiB,EAAjB;;AACA,eAAK,IAAIwB,IAAT,IAAiB,KAAK9F,QAAtB,EAAgC;AAAA;;AAC5B,qCAAKF,UAAL,yCAAkBgG,IAAlB,EAAwB,IAAxB,EAA8B,CAAC,CAA/B;AACH;AACJ;AAED;AACJ;AACA;AACA;AACA;;;AACIxB,QAAAA,WAAW,CAACvE,KAAD,EAAe;AACtB,eAAKA,KAAL,GAAaA,KAAb;;AACA,cAAI,CAAC,KAAKA,KAAV,EAAiB;AACb;AACA;AACH;;AACD,cAAI,CAAC,KAAKH,QAAV,EAAoB;AACpB,cAAIiC,KAAK,GAAG,KAAKjC,QAAL,CAAcuB,OAAd,CAAsBD,YAAtB,CAAmC/B,WAAnC,CAAZ;AACA,cAAI4G,QAAQ,GAAG,KAAK9F,aAAL,CAAmByF,WAAlC;AACA,cAAIM,IAAJ;AACA,cAAIC,GAAW,GAAGlG,KAAK,CAAC0B,MAAxB;;AACA,cAAI,KAAKnB,IAAL,IAAatB,MAAM,CAACuD,IAAP,CAAYE,QAA7B,EAAuC;AACnCuD,YAAAA,IAAI,GAAG/B,IAAI,CAACiC,GAAL,CAASD,GAAG,IAAIF,QAAQ,CAACxE,MAAT,GAAkB,KAAKb,MAA3B,CAAH,GAAwC,KAAKA,MAAtD,EAA8D,CAA9D,CAAP;AACAmB,YAAAA,KAAK,CAACsE,cAAN,CAAqB,KAAK5F,QAA1B,EAAoCyF,IAAI,GAAG,KAAKnF,UAAZ,GAAyB,KAAKC,WAAlE;AACH,WAHD,MAGO,IAAI,KAAKR,IAAL,IAAatB,MAAM,CAACuD,IAAP,CAAYC,UAA7B,EAAyC;AAC5CwD,YAAAA,IAAI,GAAG/B,IAAI,CAACiC,GAAL,CAASD,GAAG,IAAIF,QAAQ,CAACzE,KAAT,GAAiB,KAAKb,MAA1B,CAAH,GAAuC,KAAKA,MAArD,EAA6D,CAA7D,CAAP;AACAoB,YAAAA,KAAK,CAACsE,cAAN,CAAqBH,IAAI,GAAG,KAAKrF,WAAZ,GAA0B,KAAKC,YAApD,EAAkE,KAAKJ,QAAvE;AACH,WAHM,MAGA;AACH,gBAAI4F,GAAG,GAAG,KAAKC,UAAL,CAAgBN,QAAQ,CAACzE,KAAzB,CAAV;AACA,gBAAIgF,GAAG,GAAGrC,IAAI,CAACsC,IAAL,CAAUN,GAAG,GAAGG,GAAhB,CAAV;AACAJ,YAAAA,IAAI,GAAG/B,IAAI,CAACiC,GAAL,CAASI,GAAG,IAAIP,QAAQ,CAACxE,MAAT,GAAkB,KAAKb,MAA3B,CAAH,GAAwC,KAAKA,MAAtD,EAA8D,CAA9D,CAAP;AACAmB,YAAAA,KAAK,CAACsE,cAAN,CAAqB,KAAK5F,QAAL,GAAgB,KAAKI,WAArB,GAAmC,KAAKC,YAA7D,EAA2EoF,IAAI,GAAG,KAAKnF,UAAZ,GAAyB,KAAKC,WAAzG;AACH;;AACD,eAAK,IAAI0F,CAAT,IAAc,KAAKnG,OAAnB,EAA4B,KAAKA,OAAL,CAAamG,CAAb,EAAgB,SAAhB,IAA6BC,SAA7B;;AAC5B,eAAK1D,KAAL,CAAW,IAAX;AACH;;AACOsD,QAAAA,UAAU,CAACK,KAAD,EAAwB;AACtC,cAAIN,GAAG,GAAGnC,IAAI,CAAC0C,KAAL,CAAW,KAAKpG,QAAL,GAAgBmG,KAA3B,CAAV;;AACA,iBAAON,GAAG,GAAG,CAAb,EAAgB;AACZ,gBAAIQ,KAAa,GAAGR,GAAG,IAAIM,KAAK,GAAG,KAAKjG,MAAjB,CAAH,GAA8B,KAAKA,MAAvD;;AACA,gBAAImG,KAAK,IAAI,KAAKrG,QAAlB,EAA4B;AACxB;AACH;;AACD6F,YAAAA,GAAG;AACN;;AACD,iBAAOA,GAAP;AACH;;AACDS,QAAAA,cAAc,GAAG;AAAE,iBAAO,KAAK9F,WAAZ;AAA0B;;AAC7C+F,QAAAA,OAAO,GAAG;AAAE,eAAK/D,KAAL,CAAW,IAAX;AAAkB;;AAClB,YAARvB,QAAQ,GAAG;AACX,iBAAO,KAAK5B,QAAL,CAAcuB,OAAd,CAAsBK,QAA7B;AACH;;AAEOuF,QAAAA,OAAO,CAACC,KAAD,EAAmB;AAC9B,cAAI,KAAK3G,OAAL,CAAa2G,KAAb,CAAJ,EAAyB,OAAO,KAAK3G,OAAL,CAAa2G,KAAb,CAAP;;AACzB,cAAI,KAAKhH,QAAL,CAAcyB,MAAlB,EAA0B;AACtB,gBAAIqE,IAAI,GAAG,KAAK9F,QAAL,CAAciH,GAAd,EAAX;;AACA,gBAAI,CAACnB,IAAI,CAACoB,gBAAL,CAAsBnI,KAAK,CAACwE,SAAN,CAAgBa,SAAtC,EAAiD,KAAKM,QAAtD,EAAgE,IAAhE,CAAL,EAA4E;AACxEoB,cAAAA,IAAI,CAAChD,EAAL,CAAQ/D,KAAK,CAACwE,SAAN,CAAgBa,SAAxB,EAAmC,KAAKM,QAAxC,EAAkD,IAAlD;AACH;;AACD,mBAAOoB,IAAP;AACH;;AACD,cAAI,KAAK5F,QAAT,EAAmB;AACf;AACA,gBAAI4F,IAAI,GAAGzG,WAAW,CAAC,KAAKa,QAAN,CAAtB;AACA4F,YAAAA,IAAI,CAAChD,EAAL,CAAQ/D,KAAK,CAACwE,SAAN,CAAgBa,SAAxB,EAAmC,KAAKM,QAAxC,EAAkD,IAAlD;AACA,mBAAOoB,IAAP;AACH;;AACD,cAAIA,IAAI,GAAG,KAAKjG,UAAL,EAAX;AACAiG,UAAAA,IAAI,CAAChD,EAAL,CAAQ/D,KAAK,CAACwE,SAAN,CAAgBa,SAAxB,EAAmC,KAAKM,QAAxC,EAAkD,IAAlD;AACA,iBAAOoB,IAAP;AACH;;AACOpB,QAAAA,QAAQ,CAACjB,CAAD,EAAuB;AACnC,cAAIqC,IAAJ;;AACA,cAAIrC,CAAC,YAAY3E,UAAjB,EAA6B;AACzBgH,YAAAA,IAAI,GAAGrC,CAAC,CAACC,MAAT;AACH,WAFD,MAEO;AACHoC,YAAAA,IAAI,GAAGrC,CAAP;AACH;;AACD,eAAK1C,WAAL,GAAmB+E,IAAI,CAAC,SAAD,CAAvB;;AACA,cAAIA,IAAI,IAAIW,SAAZ,EAAuB;AACnB,iBAAK5D,IAAL,CAAUsE,IAAV,CAAe,QAAf,EAAyBrB,IAAI,CAAC,SAAD,CAA7B,EAA0CA,IAA1C;AACH;AACJ;;AAEO9D,QAAAA,MAAM,CAAC8D,IAAD,EAAasB,EAAb,EAAyBC,EAAzB,EAAqC;AAC/C,cAAIxF,KAAK,GAAGiE,IAAI,CAAC5E,YAAL,CAAkB/B,WAAlB,CAAZ;AACA,cAAIwC,CAAC,GAAG,KAAKxB,MAAL,GAAciH,EAAE,IAAIvF,KAAK,CAAC6D,WAAN,CAAkBpE,KAAlB,GAA0B,KAAKb,MAAnC,CAAxB;AACA,cAAImB,CAAC,GAAG,KAAKxB,MAAL,GAAciH,EAAE,IAAIxF,KAAK,CAAC6D,WAAN,CAAkBnE,MAAlB,GAA2B,KAAKb,MAApC,CAAxB;AACA,cAAI,KAAKJ,IAAL,IAAatB,MAAM,CAACuD,IAAP,CAAYC,UAAzB,IAAuC,KAAKlC,IAAL,IAAatB,MAAM,CAACuD,IAAP,CAAY+E,IAApE,EAA0E3F,CAAC,IAAI,KAAKhB,WAAV;AAC1E,cAAI,KAAKL,IAAL,IAAatB,MAAM,CAACuD,IAAP,CAAYE,QAAzB,IAAqC,KAAKnC,IAAL,IAAatB,MAAM,CAACuD,IAAP,CAAY+E,IAAlE,EAAwE1F,CAAC,IAAI,KAAKf,UAAV;AACxEiF,UAAAA,IAAI,CAACyB,WAAL,CAAiB5F,CAAjB,EAAoBC,CAApB,EAAuB,CAAvB;AACH;;AAEOmB,QAAAA,KAAK,CAACyE,KAAc,GAAG,KAAlB,EAAyB;AAClC,cAAI,CAAC,KAAKzH,KAAV,EAAiB;AACjB,cAAI8B,KAAK,GAAG,KAAKjC,QAAL,CAAcsB,YAAd,CAA2B/B,WAA3B,CAAZ;AACA,cAAIkG,GAAG,GAAGxD,KAAK,CAACyD,gBAAN,CAAuB,KAAK1F,QAAL,CAAcuB,OAAd,CAAsBoE,cAAtB,EAAvB,CAAV;AACA,cAAIkC,KAAK,GAAGpC,GAAG,CAACG,IAAhB;AAAA,cAAsBkC,IAAI,GAAGrC,GAAG,CAACM,IAAjC;AACA,cAAIgC,MAAM,GAAGtC,GAAG,CAACuC,IAAjB;AAAA,cAAuBC,KAAK,GAAGxC,GAAG,CAACyC,IAAnC,CALkC,CAMlC;;AACA,cAAIC,KAAK,GAAG,EAAZ;AACA,cAAIhC,QAAQ,GAAG,KAAK9F,aAAL,CAAmByF,WAAlC;;AACA,cAAI,KAAKpF,IAAL,IAAatB,MAAM,CAACuD,IAAP,CAAYE,QAA7B,EAAuC;AACnC,gBAAIuF,IAAI,GAAGjC,QAAQ,CAACxE,MAAT,GAAkB,KAAKb,MAAlC;AACA,gBAAIkD,KAAK,GAAGK,IAAI,CAAC0C,KAAL,CAAW1C,IAAI,CAACiC,GAAL,CAAS,CAAT,EAAY,KAAK9F,MAAL,GAAcsH,IAA1B,IAAkCM,IAA7C,CAAZ;AACA,gBAAIC,GAAG,GAAGhE,IAAI,CAACsC,IAAL,CAAUtC,IAAI,CAACiC,GAAL,CAAS,CAAT,EAAY,KAAK9F,MAAL,GAAcyH,KAA1B,IAAmCG,IAA7C,CAAV,CAHmC,CAInC;;AACA,iBAAK,IAAIE,CAAC,GAAGtE,KAAb,EAAoBsE,CAAC,IAAID,GAAzB,EAA8BC,CAAC,EAA/B,EAAmC;AAAA;;AAC/B,kBAAIA,CAAC,IAAI,KAAKnI,KAAL,CAAW0B,MAApB,EAA4B;AAC5B,kBAAIqE,IAAI,GAAG,KAAKiB,OAAL,CAAamB,CAAb,CAAX;AACA,kBAAIpC,IAAI,CAAC,SAAD,CAAJ,IAAmBoC,CAAnB,IAAwBV,KAA5B,EAAmC,0BAAK1H,UAAL,0CAAkBgG,IAAlB,EAAwB,KAAK/F,KAAL,CAAWmI,CAAX,CAAxB,EAAuCA,CAAvC;AACnCpC,cAAAA,IAAI,CAAC,SAAD,CAAJ,GAAkBoC,CAAlB;AACA,mBAAKtI,QAAL,CAAcuB,OAAd,CAAsBgH,QAAtB,CAA+BrC,IAA/B;AACA,mBAAK9D,MAAL,CAAY8D,IAAZ,EAAkB,CAAlB,EAAqBoC,CAArB;AACAH,cAAAA,KAAK,CAACG,CAAC,GAAG,EAAL,CAAL,GAAgBpC,IAAhB;AACA,mBAAKzF,OAAL,CAAa6H,CAAC,GAAG,EAAjB,IAAuBpC,IAAvB;AACH;AACJ,WAfD,MAeO,IAAI,KAAKxF,IAAL,IAAatB,MAAM,CAACuD,IAAP,CAAYC,UAA7B,EAAyC;AAC5C,gBAAIwD,IAAI,GAAGD,QAAQ,CAACzE,KAAT,GAAiB,KAAKb,MAAjC;AACA,gBAAImD,KAAK,GAAGK,IAAI,CAAC0C,KAAL,CAAW1C,IAAI,CAACiC,GAAL,CAAS,CAAT,EAAYuB,KAAK,GAAG,KAAKtH,MAAzB,IAAmC6F,IAA9C,CAAZ;AACA,gBAAIiC,GAAG,GAAGhE,IAAI,CAACsC,IAAL,CAAUtC,IAAI,CAACiC,GAAL,CAAS,CAAT,EAAYyB,MAAM,GAAG,KAAKxH,MAA1B,IAAoC6F,IAA9C,CAAV,CAH4C,CAI5C;;AACA,iBAAK,IAAIkC,CAAC,GAAGtE,KAAb,EAAoBsE,CAAC,IAAID,GAAzB,EAA8BC,CAAC,EAA/B,EAAmC;AAAA;;AAC/B,kBAAIA,CAAC,IAAI,KAAKnI,KAAL,CAAW0B,MAApB,EAA4B;AAC5B,kBAAIqE,IAAI,GAAG,KAAKiB,OAAL,CAAamB,CAAb,CAAX;AACA,kBAAIpC,IAAI,CAAC,SAAD,CAAJ,IAAmBoC,CAAnB,IAAwBV,KAA5B,EAAmC,0BAAK1H,UAAL,0CAAkBgG,IAAlB,EAAwB,KAAK/F,KAAL,CAAWmI,CAAX,CAAxB,EAAuCA,CAAvC;AACnCpC,cAAAA,IAAI,CAAC,SAAD,CAAJ,GAAkBoC,CAAlB;AACA,mBAAKtI,QAAL,CAAcuB,OAAd,CAAsBgH,QAAtB,CAA+BrC,IAA/B;AACA,mBAAK9D,MAAL,CAAY8D,IAAZ,EAAkBoC,CAAlB,EAAqB,CAArB;AACAH,cAAAA,KAAK,CAACG,CAAC,GAAG,EAAL,CAAL,GAAgBpC,IAAhB;AACA,mBAAKzF,OAAL,CAAa6H,CAAC,GAAG,EAAjB,IAAuBpC,IAAvB;AACH;AACJ,WAfM,MAeA,IAAI,KAAKxF,IAAL,IAAatB,MAAM,CAACuD,IAAP,CAAY+E,IAA7B,EAAmC;AACtC,gBAAIU,IAAI,GAAGjC,QAAQ,CAACxE,MAAT,GAAkB,KAAKb,MAAlC;AACA,gBAAIkD,KAAK,GAAGK,IAAI,CAAC0C,KAAL,CAAW1C,IAAI,CAACiC,GAAL,CAAS,CAAT,EAAY,KAAK9F,MAAL,GAAcsH,IAA1B,IAAkCM,IAA7C,CAAZ;AACA,gBAAIC,GAAG,GAAGhE,IAAI,CAACsC,IAAL,CAAUtC,IAAI,CAACiC,GAAL,CAAS,CAAT,EAAY,KAAK9F,MAAL,GAAcyH,KAA1B,IAAmCG,IAA7C,CAAV;AACA,gBAAI5B,GAAG,GAAG,KAAKC,UAAL,CAAgBN,QAAQ,CAACzE,KAAzB,CAAV;AACA,gBAAI4G,CAAC,GAAGtE,KAAK,GAAGwC,GAAhB;;AACA,iBAAK,IAAIxE,CAAC,GAAGgC,KAAb,EAAoBhC,CAAC,IAAIqG,GAAzB,EAA8BrG,CAAC,EAA/B,EAAmC;AAC/B,mBAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyE,GAApB,EAAyBzE,CAAC,EAA1B,EAA8B;AAAA;;AAC1B,oBAAIuG,CAAC,IAAI,KAAKnI,KAAL,CAAW0B,MAApB,EAA4B,MADF,CAE1B;;AACA,oBAAIqE,IAAI,GAAG,KAAKiB,OAAL,CAAamB,CAAb,CAAX;AACA,oBAAIpC,IAAI,CAAC,SAAD,CAAJ,IAAmBoC,CAAnB,IAAwBV,KAA5B,EAAmC,0BAAK1H,UAAL,0CAAkBgG,IAAlB,EAAwB,KAAK/F,KAAL,CAAWmI,CAAX,CAAxB,EAAuCA,CAAvC;AACnCpC,gBAAAA,IAAI,CAAC,SAAD,CAAJ,GAAkBoC,CAAlB;AACA,qBAAKtI,QAAL,CAAcuB,OAAd,CAAsBgH,QAAtB,CAA+BrC,IAA/B;AACA,qBAAK9D,MAAL,CAAY8D,IAAZ,EAAkBnE,CAAlB,EAAqBC,CAArB;AACAmG,gBAAAA,KAAK,CAACG,CAAC,GAAG,EAAL,CAAL,GAAgBpC,IAAhB;AACA,qBAAKzF,OAAL,CAAa6H,CAAC,GAAG,EAAjB,IAAuBpC,IAAvB;AACAoC,gBAAAA,CAAC;AACJ;;AACD,kBAAIA,CAAC,IAAI,KAAKnI,KAAL,CAAW0B,MAApB,EAA4B;AAC/B;AACJ;;AACD,eAAK,IAAI+E,CAAT,IAAc,KAAKnG,OAAnB,EAA4B;AACxB,gBAAI,CAAC0H,KAAK,CAACvB,CAAD,CAAV,EAAe;AACX,kBAAI4B,KAAa,GAAG,KAAKC,WAAL,CAAiB,KAAKhI,OAAL,CAAamG,CAAb,CAAjB,CAApB;AACA,kBAAG4B,KAAH,EAAU,OAAO,KAAK/H,OAAL,CAAamG,CAAb,CAAP;AAEb;AACJ;AACJ;;AAEO6B,QAAAA,WAAW,CAACvC,IAAD,EAAsB;AACrC;;AACA;AACA,cAAG,KAAKlG,QAAL,CAAc,kBAAd,GAAH,EAAwC,OAAO,KAAP;AACxC,cAAIkG,IAAI,CAAChE,MAAT,EAAiBgE,IAAI,CAAChE,MAAL,CAAYC,WAAZ,CAAwB+D,IAAxB;AACjBA,UAAAA,IAAI,CAAC,SAAD,CAAJ,GAAkBW,SAAlB;AACA,eAAKzG,QAAL,CAAc2C,IAAd,CAAmBmD,IAAnB;AACA,iBAAO,IAAP;AACH,SAtVuC,CAwVxC;;;AACAwC,QAAAA,aAAa,CAACtB,KAAD,EAAe;AAExB,eAAK,IAAIR,CAAT,IAAc,KAAKnG,OAAnB,EAA4B;AACxB,gBAAI+H,KAAa,GAAG,KAAKC,WAAL,CAAiB,KAAKhI,OAAL,CAAamG,CAAb,CAAjB,CAApB;AACA,gBAAG4B,KAAH,EAAU,OAAO,KAAK/H,OAAL,CAAamG,CAAb,CAAP;AACb;;AAED,cAAI3E,KAAK,GAAG,KAAKjC,QAAL,CAAcsB,YAAd,CAA2B/B,WAA3B,CAAZ;AACA,cAAIkG,GAAG,GAAGxD,KAAK,CAACyD,gBAAN,CAAuB,KAAK1F,QAAL,CAAcuB,OAAd,CAAsBoE,cAAtB,EAAvB,CAAV;AAEA,cAAIwC,KAAK,GAAG,EAAZ;AACA,cAAIhC,QAAQ,GAAG,KAAK9F,aAAL,CAAmByF,WAAlC;;AACA,cAAI,KAAKpF,IAAL,IAAatB,MAAM,CAACuD,IAAP,CAAYE,QAA7B,EAAuC;AACnC,gBAAIuF,IAAI,GAAGjC,QAAQ,CAACxE,MAAT,GAAkB,KAAKb,MAAlC;AACA,gBAAIkD,KAAK,GAAGoD,KAAZ;AACA,gBAAIiB,GAAG,GAAIrE,KAAK,GAAGK,IAAI,CAACsC,IAAL,CAAU,CAAClB,GAAG,CAACM,IAAJ,GAAWN,GAAG,CAACyC,IAAhB,IAAwBE,IAAlC,CAAnB;;AACA,iBAAK,IAAIE,CAAC,GAAGtE,KAAb,EAAoBsE,CAAC,IAAID,GAAzB,EAA8BC,CAAC,EAA/B,EAAmC;AAAA;;AAC/B,kBAAIA,CAAC,IAAI,KAAKnI,KAAL,CAAW0B,MAApB,EAA4B;AAC5B,kBAAIqE,IAAI,GAAG,KAAKiB,OAAL,CAAamB,CAAb,CAAX;AACA,kBAAIpC,IAAI,CAAC,SAAD,CAAJ,IAAmBoC,CAAvB,EAA0B,0BAAKpI,UAAL,0CAAkBgG,IAAlB,EAAwB,KAAK/F,KAAL,CAAWmI,CAAX,CAAxB,EAAuCA,CAAvC;AAC1BpC,cAAAA,IAAI,CAAC,SAAD,CAAJ,GAAkBoC,CAAlB;AACA,mBAAKtI,QAAL,CAAcuB,OAAd,CAAsBgH,QAAtB,CAA+BrC,IAA/B;AACA,mBAAK9D,MAAL,CAAY8D,IAAZ,EAAkB,CAAlB,EAAqBoC,CAArB;AACAH,cAAAA,KAAK,CAACG,CAAC,GAAG,EAAL,CAAL,GAAgBpC,IAAhB;AACA,mBAAKzF,OAAL,CAAa6H,CAAC,GAAG,EAAjB,IAAuBpC,IAAvB;AACH;;AACD,gBAAIyC,SAAS,GAAG,KAAK3I,QAAL,CAAcuB,OAAd,CAAsBD,YAAtB,CAAmC/B,WAAnC,CAAhB;AAEA,iBAAKS,QAAL,CAAcuB,OAAd,CAAsBoG,WAAtB,CAAkC,CAAlC,EAAqCP,KAAK,GAAGgB,IAAR,GAAe,KAAKxH,QAAL,IAAiB+H,SAAS,CAAC3C,OAAV,GAAoB,GAArC,CAApD;AACH;AACD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGK;;AA1YuC,O","sourcesContent":["import { Component, Event, EventTouch, Input, Layout, Node, NodeEventType, ScrollView, Size, UITransform, Vec2, Vec3, _decorator, instantiate, v2, v3 } from \"cc\";\r\nimport { Second } from \"./Utils\";\r\n\r\nconst { ccclass, property, disallowMultiple, requireComponent } = _decorator;\r\n\r\n@ccclass('AutoScroller')\r\n@disallowMultiple(true)\r\n@requireComponent(ScrollView)\r\nexport class AutoScroller extends Component {\r\n\r\n    private scroller: ScrollView;\r\n    private createItem: () => Node;\r\n    public updateItem: (item: Node, data: any, index: number) => void;\r\n    private datas: any[];\r\n    private itemPool: Node[] = [];\r\n    private itemTransForm: UITransform;\r\n    private original: Node;\r\n    private startX: number;\r\n    private startY: number;\r\n    private showing: { [pos: string]: Node } = {};\r\n    private type: number;\r\n    private contentW: number = 0;\r\n    private contentH: number = 0;\r\n    private spaceX: number = 10;\r\n    private spaceY: number = 10;\r\n    private paddingLeft: number = 0;\r\n    private paddingRight: number = 0;\r\n    private paddingTop: number = 0;\r\n    private paddingDown: number = 0;\r\n    private selectIndex: number;\r\n    private isMoveSub: boolean = false;\r\n    protected onLoad(): void {\r\n        let scroller = this.getComponent(ScrollView);\r\n        if (!scroller || !scroller.content) throw \"滚动组件必须指定一个Content\";\r\n        let contentTrans = scroller.content.getComponent(UITransform);\r\n        let ins = this;\r\n        ins.scroller = scroller;\r\n        ins.contentW = contentTrans.width;\r\n        ins.contentH = contentTrans.height;\r\n        if (this.scroller.content.children.length) {\r\n            this.original = this.scroller.content.children[0];\r\n            ins.startX = ins.original.position.x;\r\n            ins.startY = ins.original.position.y;\r\n            var trans = ins.original.getComponent(UITransform);\r\n            ins.original.parent.removeChild(ins.original);\r\n            ins.itemTransForm = trans;\r\n        }\r\n\r\n        let layout = scroller.content.getComponent(Layout);\r\n        if (layout) {\r\n            // Layout.Type.VERTICAL\r\n            ins.type = layout.type;\r\n            ins.paddingTop = layout.paddingTop;\r\n            ins.paddingDown = layout.paddingBottom;\r\n            ins.paddingLeft = layout.paddingLeft;\r\n            ins.paddingRight = layout.paddingRight;\r\n            ins.spaceX = layout.spacingX;\r\n            ins.spaceY = layout.spacingY;\r\n            layout.enabled = false;\r\n        } else {\r\n            if (!scroller.vertical && scroller.horizontal) {\r\n                ins.type = Layout.Type.HORIZONTAL;\r\n            } else {\r\n                ins.type = Layout.Type.VERTICAL;\r\n            }\r\n        }\r\n        for (let child of scroller.content.children) {\r\n            ins.itemPool.push(child);\r\n        }\r\n        scroller.content.removeAllChildren();\r\n        \r\n        scroller.node.on(\"scrolling\", () => {\r\n            ins.flush.apply(ins);\r\n        }, ins);\r\n\r\n\r\n        /**解决表嵌表处理*/\r\n        let nestedCall = scroller[\"_hasNestedViewGroup\"];\r\n        scroller[\"_hasNestedViewGroup\"] = function (event: EventTouch, captureListeners?: Node[]) {\r\n            if (event.eventPhase !== Event.CAPTURING_PHASE) return false;\r\n            if (!ins.isMoveSub) return false;\r\n            return nestedCall.call(this, event, captureListeners);\r\n        };\r\n\r\n        scroller.node.on(Node.EventType.TOUCH_MOVE, function (e: EventTouch){\r\n            if (e.target != scroller.node) {\r\n                if (ins.isMoveSub) return;\r\n                e.propagationStopped = true;\r\n                let start = e.getStartLocation();\r\n                let curre = e.getLocation();\r\n                let isMoveX = Math.abs(start.x - curre.x) > 7;\r\n                let isMoveY = Math.abs(start.y - curre.y) > 7;\r\n                if (scroller[\"horizontal\"] && !isMoveX && isMoveY) {\r\n                    ins.isMoveSub = true;\r\n                } else if (scroller[\"vertical\"] && !isMoveY && isMoveX) {\r\n                    ins.isMoveSub = true;\r\n                }\r\n                //console.log(\"是否滚动子表----->\" + ins.isMoveSub)\r\n            }\r\n        }, ins, true);\r\n        scroller.node.on(Node.EventType.TOUCH_END, function () { ins.isMoveSub = false }, ins, true);\r\n        scroller.node.on(Node.EventType.TOUCH_CANCEL, function () { ins.isMoveSub = false }, ins, true);\r\n        /**解决表嵌表处理*/\r\n        \r\n\r\n        if (this.datas && (this.original || this.createItem)) {\r\n            this.UpdateDatas(this.datas);\r\n        }\r\n        \r\n    }\r\n    /**\r\n     * 选择第一个\r\n     */\r\n    async SelectFirst(t: number = 0.1) {\r\n        this.ScrollToHead(t);\r\n        await Second(t);\r\n        let children = this.scroller.content.children;\r\n        for (let child of children) {\r\n            if (child['$$index'] == 0) {\r\n                this.onSelect(child);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    async SelectLast(t: number = 0.1) {\r\n        this.ScrollToLast(t);\r\n        await Second(t);\r\n        let children = this.scroller.content.children;\r\n        for (let child of children) {\r\n            if (child['$$index'] == this.datas.length - 1) {\r\n                this.onSelect(child);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    ScrollToHead(t: number = 0.1) {\r\n        if (!this.scroller) return;\r\n        if (this.scroller.vertical) {\r\n            this.scroller.scrollToTop(t);\r\n        } else {\r\n            this.scroller.scrollToLeft(t);\r\n        }\r\n    }\r\n    ScrollToLast(t: number = 0.1) {\r\n        if (!this.scroller) return;\r\n        if (this.scroller.vertical) {\r\n            this.scroller.scrollToBottom(t);\r\n        } else {\r\n            this.scroller.scrollToRight(t);\r\n        }\r\n    }\r\n    ScrollNext(t: number = 1) {\r\n        this.scroller.scrollToRight(t);\r\n    }\r\n    ScrollPrev(t: number = 1) {\r\n        this.scroller.scrollToLeft(t);\r\n    }\r\n\r\n    SetHandle(updateItem: (item: Node, data: any) => void, craeteItem?: () => Node) {\r\n        this.updateItem = updateItem;\r\n        if (craeteItem) {\r\n            this.createItem = craeteItem;\r\n            if (!this.original) {\r\n                var trans = craeteItem().getComponent(UITransform);\r\n                let box = this.scroller.getComponent(UITransform).getBoundingBoxTo(this.scroller.content.getWorldMatrix());\r\n                this.startX = box.xMin + trans.anchorX * trans.contentSize.width;\r\n                this.startY = box.yMax - (1 - trans.anchorY) * trans.contentSize.height;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清理列表，并使用null对象初始所有item\r\n     */\r\n    Clean() {\r\n        this.UpdateDatas([]);\r\n        for (let item of this.itemPool) {\r\n            this.updateItem?.(item, null, -1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新数据\r\n     * @param datas \r\n     * @returns \r\n     */\r\n    UpdateDatas(datas: any[]) {\r\n        this.datas = datas;\r\n        if (!this.datas) {\r\n            debugger;\r\n            return;\r\n        }\r\n        if (!this.scroller) return;\r\n        let trans = this.scroller.content.getComponent(UITransform);\r\n        let itemSize = this.itemTransForm.contentSize;\r\n        let wide: number;\r\n        let len: number = datas.length;\r\n        if (this.type == Layout.Type.VERTICAL) {\r\n            wide = Math.max(len * (itemSize.height + this.spaceY) - this.spaceY, 0);\r\n            trans.setContentSize(this.contentW, wide + this.paddingTop + this.paddingDown);\r\n        } else if (this.type == Layout.Type.HORIZONTAL) {\r\n            wide = Math.max(len * (itemSize.width + this.spaceX) - this.spaceX, 0);\r\n            trans.setContentSize(wide + this.paddingLeft + this.paddingRight, this.contentH);\r\n        } else {\r\n            let col = this.getGridCol(itemSize.width);\r\n            let row = Math.ceil(len / col);\r\n            wide = Math.max(row * (itemSize.height + this.spaceY) - this.spaceY, 0);\r\n            trans.setContentSize(this.contentW + this.paddingLeft + this.paddingRight, wide + this.paddingTop + this.paddingDown);\r\n        }\r\n        for (let k in this.showing) this.showing[k][\"$$index\"] = undefined;\r\n        this.flush(true);\r\n    }\r\n    private getGridCol(itemW: number): number {\r\n        let col = Math.floor(this.contentW / itemW);\r\n        while (col > 0) {\r\n            let tempW: number = col * (itemW + this.spaceX) - this.spaceX;\r\n            if (tempW <= this.contentW) {\r\n                break;\r\n            }\r\n            col--;\r\n        }\r\n        return col;\r\n    }\r\n    GetSelectIndex() { return this.selectIndex; }\r\n    reflush() { this.flush(true) }\r\n    get children() {\r\n        return this.scroller.content.children;\r\n    }\r\n\r\n    private getItem(index: any): Node {\r\n        if (this.showing[index]) return this.showing[index];\r\n        if (this.itemPool.length) {\r\n            let item = this.itemPool.pop();\r\n            if (!item.hasEventListener(Input.EventType.TOUCH_END, this.onSelect, this)) {\r\n                item.on(Input.EventType.TOUCH_END, this.onSelect, this);\r\n            }\r\n            return item;\r\n        }\r\n        if (this.original) {\r\n            //console.error(\"-------->创建Item\")\r\n            let item = instantiate(this.original);\r\n            item.on(Input.EventType.TOUCH_END, this.onSelect, this);\r\n            return item;\r\n        }\r\n        let item = this.createItem();\r\n        item.on(Input.EventType.TOUCH_END, this.onSelect, this);\r\n        return item;\r\n    }\r\n    private onSelect(e: EventTouch | Node) {\r\n        let item: Node;\r\n        if (e instanceof EventTouch) {\r\n            item = e.target;\r\n        } else {\r\n            item = e;\r\n        }\r\n        this.selectIndex = item[\"$$index\"];\r\n        if (item != undefined) {\r\n            this.node.emit(\"select\", item[\"$$index\"], item);\r\n        }\r\n    }\r\n\r\n    private layout(item: Node, nx: number, ny: number) {\r\n        let trans = item.getComponent(UITransform);\r\n        let x = this.startX + nx * (trans.contentSize.width + this.spaceX);\r\n        let y = this.startY - ny * (trans.contentSize.height + this.spaceY);\r\n        if (this.type == Layout.Type.HORIZONTAL || this.type == Layout.Type.GRID) x += this.paddingLeft;\r\n        if (this.type == Layout.Type.VERTICAL || this.type == Layout.Type.GRID) y -= this.paddingTop;\r\n        item.setPosition(x, y, 0);\r\n    }\r\n\r\n    private flush(reset: boolean = false) {\r\n        if (!this.datas) return;\r\n        var trans = this.scroller.getComponent(UITransform);\r\n        let box = trans.getBoundingBoxTo(this.scroller.content.getWorldMatrix());\r\n        let leftX = box.xMin, topY = box.yMax;\r\n        let rightX = box.xMax, downY = box.yMin;\r\n        // Logger.log(\"box\", rightX - leftX);\r\n        let views = {};\r\n        let itemSize = this.itemTransForm.contentSize;\r\n        if (this.type == Layout.Type.VERTICAL) {\r\n            let hide = itemSize.height + this.spaceY;\r\n            let start = Math.floor(Math.max(0, this.startY - topY) / hide);\r\n            let end = Math.ceil(Math.max(0, this.startY - downY) / hide);\r\n            // Logger.log(\"flush\", start, end);\r\n            for (let i = start; i <= end; i++) {\r\n                if (i >= this.datas.length) break;\r\n                let item = this.getItem(i);\r\n                if (item['$$index'] != i || reset) this.updateItem?.(item, this.datas[i], i);\r\n                item['$$index'] = i;\r\n                this.scroller.content.addChild(item);\r\n                this.layout(item, 0, i);\r\n                views[i + ''] = item;\r\n                this.showing[i + ''] = item;\r\n            }\r\n        } else if (this.type == Layout.Type.HORIZONTAL) {\r\n            let wide = itemSize.width + this.spaceX;\r\n            let start = Math.floor(Math.max(0, leftX - this.startX) / wide);\r\n            let end = Math.ceil(Math.max(0, rightX - this.startX) / wide);\r\n            // Logger.log(\"flush\", start, end);\r\n            for (let i = start; i <= end; i++) {\r\n                if (i >= this.datas.length) break;\r\n                let item = this.getItem(i);\r\n                if (item['$$index'] != i || reset) this.updateItem?.(item, this.datas[i], i);\r\n                item['$$index'] = i;\r\n                this.scroller.content.addChild(item);\r\n                this.layout(item, i, 0);\r\n                views[i + ''] = item;\r\n                this.showing[i + ''] = item;\r\n            }\r\n        } else if (this.type == Layout.Type.GRID) {\r\n            let hide = itemSize.height + this.spaceY;\r\n            let start = Math.floor(Math.max(0, this.startY - topY) / hide);\r\n            let end = Math.ceil(Math.max(0, this.startY - downY) / hide);\r\n            let col = this.getGridCol(itemSize.width);\r\n            let i = start * col;\r\n            for (let y = start; y <= end; y++) {\r\n                for (let x = 0; x < col; x++) {\r\n                    if (i >= this.datas.length) break;\r\n                    // Logger.log(\"flush\", i, x, y);\r\n                    let item = this.getItem(i);\r\n                    if (item['$$index'] != i || reset) this.updateItem?.(item, this.datas[i], i);\r\n                    item['$$index'] = i;\r\n                    this.scroller.content.addChild(item);\r\n                    this.layout(item, x, y);\r\n                    views[i + ''] = item;\r\n                    this.showing[i + ''] = item;\r\n                    i++;\r\n                }\r\n                if (i >= this.datas.length) break;\r\n            }\r\n        }\r\n        for (let k in this.showing) {\r\n            if (!views[k]) {\r\n                let isDel:boolean = this.receiveItem(this.showing[k]);\r\n                if(isDel) delete this.showing[k];\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    private receiveItem(item: Node): boolean {\r\n        //console.error(\"-------->回收Item\")\r\n        /**增加滚动边界判断（因为滚动到边界item被回收掉了无法派发touch-end导致滚动列表不触发回弹） */\r\n        if(this.scroller[\"_isOutOfBoundary\"]()) return false;\r\n        if (item.parent) item.parent.removeChild(item);\r\n        item[\"$$index\"] = undefined;\r\n        this.itemPool.push(item);\r\n        return true;\r\n    }\r\n\r\n    // 滑动到指定的位置\r\n    ScrollToIndex(index: number){\r\n\r\n        for (let k in this.showing) {\r\n            let isDel:boolean = this.receiveItem(this.showing[k]);\r\n            if(isDel) delete this.showing[k];\r\n        }\r\n\r\n        var trans = this.scroller.getComponent(UITransform);\r\n        let box = trans.getBoundingBoxTo(this.scroller.content.getWorldMatrix());\r\n\r\n        let views = {};\r\n        let itemSize = this.itemTransForm.contentSize;\r\n        if (this.type == Layout.Type.VERTICAL) {\r\n            let hide = itemSize.height + this.spaceY;\r\n            let start = index;\r\n            let end =  start + Math.ceil((box.yMax - box.yMin) / hide);\r\n            for (let i = start; i <= end; i++) {\r\n                if (i >= this.datas.length) break;\r\n                let item = this.getItem(i);\r\n                if (item['$$index'] != i) this.updateItem?.(item, this.datas[i], i);\r\n                item['$$index'] = i;\r\n                this.scroller.content.addChild(item);\r\n                this.layout(item, 0, i);\r\n                views[i + ''] = item;\r\n                this.showing[i + ''] = item;\r\n            }\r\n            let transform = this.scroller.content.getComponent(UITransform);\r\n\r\n            this.scroller.content.setPosition(0, index * hide + this.contentH * (transform.anchorY - 0.5));\r\n        }\r\n        /* else if (this.type == Layout.Type.HORIZONTAL) {\r\n            let width = itemSize.width + this.spaceX;\r\n            let start = index;\r\n            let end =  start + Math.ceil((box.xMax - box.xMin) / width);\r\n            this.scroller.content.setPosition(0, 0);\r\n            for (let i = start; i <= end; i++) {\r\n                if (i >= this.datas.length) break;\r\n                let item = this.getItem(i);\r\n                if (item['$$index'] != i) this.updateItem?.(item, this.datas[i], i);\r\n                item['$$index'] = i;\r\n                this.scroller.content.addChild(item);\r\n                this.layout(item, i, 0);\r\n                views[i + ''] = item;\r\n                this.showing[i + ''] = item;\r\n            }\r\n\r\n            this.scroller.content.setPosition(index * width, 0);\r\n        } */\r\n\r\n    }\r\n}\r\n"]}