{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/rights/RightsConvert.ts"],"names":["Button","Label","ScrollView","Sprite","SpriteFrame","_decorator","instantiate","CfgMgr","ResMgr","folder_item","AsyncComponent","AutoScroller","BagItem","ItemUtil","MsgPanel","PlayerData","ccclass","property","disallowMultiple","requireComponent","RightsConvert","bg","rewardScrollView","getBtn","Limit","icon","name_icon","buyBtn","unLock","time","item_icon","buyNum","clone_item","data","onLoad","node","getChildByName","getComponent","getChildByPath","SetHandle","updateDesItem","bind","on","EventType","CLICK","onClick","hasLoad","Show","loadSub","active","show_list","getEquityShowList","EquityList","des_list","UpdateDatas","reward_list","length","GetSThingList","content","removeAllChildren","index","element","item","updateItem","addChild","bg_url","BgTxture","spriteFrame","LoadResAbSub","icon_url","GetEquityIcon","name_icon_url","NameIcon","item_data","Getitem","ItemId","Icon","setPosition","updatePanel","num","string","LimitNum","reward","reward_item","addComponent","setThing","des","e","name","is_can_get","item_num","GetItemCount","is_can_buy"],"mappings":"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","sourcesContent":["import { Button, Component, Label, Layout, Node, ScrollView, Sprite, SpriteFrame, Widget, _decorator, instantiate, path } from \"cc\";\r\nimport { CfgMgr, ItemType, StdEquityCard, StdEquityList, StdItem, ThingType, ThingTypeName } from \"../../manager/CfgMgr\";\r\nimport { ResMgr, folder_card, folder_item, folder_money } from \"../../manager/ResMgr\";\r\nimport { Second, Utils } from \"../../utils/Utils\";\r\nimport proto from \"../../net/Protocol\";\r\nimport { AsyncComponent } from \"../common/AsyncComponent\";\r\nimport { AutoScroller } from \"../../component/AutoScroller\";\r\nimport { Card } from \"../cards/Card\";\r\nimport { BagItem } from \"../bag/BagItem\";\r\nimport { ItemUtil } from \"../../utils/ItemUtils\";\r\nimport { MsgPanel } from \"../common/MsgPanel\";\r\nimport { PlayerData } from \"../player/PlayerData\";\r\n\r\nconst { ccclass, property, disallowMultiple, requireComponent } = _decorator;\r\n\r\n@ccclass('RightsConvert')\r\n@disallowMultiple(true)\r\nexport class RightsConvert extends AsyncComponent {\r\n    private bg: Sprite;\r\n    private ScrollView:AutoScroller;\r\n    private rewardScrollView:ScrollView;\r\n    private getBtn:Button;\r\n    private Limit: Label\r\n    private icon: Sprite;\r\n    private name_icon: Sprite;\r\n    private buyBtn:Button;\r\n    private unLock: Node;\r\n    private time: Label;\r\n    private item_icon:Sprite\r\n    private buyNum: Label;\r\n\r\n    private clone_item:Node;\r\n    private data:StdEquityCard\r\n    protected onLoad(): void {\r\n        this.bg = this.node.getChildByName(\"bg\").getComponent(Sprite);\r\n        this.ScrollView = this.node.getChildByPath(\"general/ScrollView\").getComponent(AutoScroller);\r\n        this.ScrollView.SetHandle(this.updateDesItem.bind(this));\r\n        this.rewardScrollView = this.node.getChildByPath(\"general/rewardScrollView\").getComponent(ScrollView);\r\n        this.clone_item =  this.node.getChildByPath(\"general/rewardScrollView/view/content/Node\");\r\n        this.getBtn = this.node.getChildByPath(\"general/getBtn\").getComponent(Button);\r\n        this.Limit = this.node.getChildByPath(\"general/limit_time\").getComponent(Label);\r\n        this.icon = this.node.getChildByName(\"icon\").getComponent(Sprite);\r\n        this.name_icon = this.node.getChildByName(\"name_icon\").getComponent(Sprite);\r\n        this.buyBtn = this.node.getChildByName(\"buyBtn\").getComponent(Button);\r\n        this.unLock = this.node.getChildByName(\"unLock\");\r\n        this.time = this.node.getChildByName(\"time\").getComponent(Label);\r\n        this.item_icon = this.node.getChildByPath(\"buyBtn/icon\").getComponent(Sprite);\r\n        this.buyNum = this.node.getChildByPath(\"buyBtn/buyNum\").getComponent(Label);\r\n        this.getBtn.node.on(Button.EventType.CLICK, this.onClick, this);\r\n        this.buyBtn.node.on(Button.EventType.CLICK, this.onClick, this);\r\n\r\n\r\n        this.hasLoad = true;\r\n        super.onLoad();\r\n    }\r\n\r\n    async Show(data: StdEquityCard) {\r\n        if (!this.hasLoad) await this.loadSub;\r\n\r\n        this.data = data;\r\n        this.unLock.active = false\r\n        let show_list = CfgMgr.getEquityShowList(data.EquityList)\r\n        let des_list = show_list[0];\r\n        this.ScrollView.UpdateDatas(des_list);\r\n        let reward_list:proto.base.IThing[] = []\r\n        if(show_list[1].length > 0 && show_list[1][0].length > 0){     \r\n            reward_list = ItemUtil.GetSThingList(show_list[1][0], show_list[1][1], show_list[1][2]);   \r\n        }\r\n        this.rewardScrollView.content.removeAllChildren();\r\n        for (let index = 0; index < reward_list.length; index++) {\r\n            const element = reward_list[index];\r\n            let item = instantiate(this.clone_item);\r\n            this.updateItem(item, element, index);\r\n            this.rewardScrollView.content.addChild(item);\r\n        }\r\n        \r\n        let bg_url = data.BgTxture ? data.BgTxture : \"rightsBg2\"\r\n        this.bg.spriteFrame = await ResMgr.LoadResAbSub(\"sheets/bg/\" + bg_url + \"/spriteFrame\", SpriteFrame)\r\n        let icon_url = data.GetEquityIcon ? data.GetEquityIcon : \"icon201\"\r\n        this.icon.spriteFrame = await ResMgr.LoadResAbSub(\"sheets/rights/icon/\" + icon_url + \"/spriteFrame\", SpriteFrame)\r\n        let name_icon_url = data.NameIcon ? data.NameIcon : \"nameIcon201\";\r\n        this.name_icon.spriteFrame = await ResMgr.LoadResAbSub(\"sheets/rights/icon/\" + name_icon_url + \"/spriteFrame\", SpriteFrame)\r\n        let item_data = CfgMgr.Getitem(data.ItemId)\r\n        if(item_data && item_data.Icon){\r\n            this.item_icon.spriteFrame = await ResMgr.LoadResAbSub(folder_item + item_data.Icon + \"/spriteFrame\", SpriteFrame) \r\n        }\r\n        this.rewardScrollView.content.setPosition(0,0,0)\r\n        this.updatePanel();\r\n    }\r\n\r\n    private updatePanel(){\r\n        let num = 0;\r\n        this.buyNum.string = num + \"/\" + this.data.LimitNum\r\n    }\r\n\r\n    private updateItem(item:Node, data: proto.base.IThing, index: number) {\r\n        let reward = item.getChildByName(\"item\")\r\n        let reward_item = reward.getComponent(BagItem) || reward.addComponent(BagItem);\r\n        reward_item.setThing(data)\r\n    }\r\n\r\n    private updateDesItem(item:Node, data: string, index: number) {\r\n        let des = item.getChildByName(\"TipsLabel\").getComponent(Label);\r\n        des.string = data\r\n    }\r\n\r\n\r\n    private onClick(e:Button){\r\n        let name = e.name\r\n        switch (name) {\r\n            case \"getBtn\":\r\n                let is_can_get = false\r\n                if(is_can_get){\r\n\r\n                }else{\r\n                    MsgPanel.Show(\"不可领取\")\r\n                }\r\n                \r\n                break;\r\n            case \"buyBtn\":\r\n                let item_num = PlayerData.GetItemCount(this.data.ItemId)\r\n                let buyNum = 0;\r\n                \r\n                let is_can_buy = item_num > 1 && buyNum > 0 && buyNum <= this.data.LimitNum;\r\n                if(is_can_buy){\r\n\r\n                }else{\r\n                    MsgPanel.Show(\"无法兑换\")\r\n                }  \r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n}"]}