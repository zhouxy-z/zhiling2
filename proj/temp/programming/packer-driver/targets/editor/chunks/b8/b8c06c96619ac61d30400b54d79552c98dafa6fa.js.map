{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/fight/display/CardAction.ts"],"names":["BaseAction","CardMoveTo","CardLayout","CardFlyToHand","CardFlyToArea","CardTurnBack","CardTurnFront","CardShowBig","Tween","Vec3","easing","game","math","tween","v3","GameSet","Second","constructor","card","start","end","q","v","quat","cb","subComplete","tw","sub","ease","tick","dt","lessTime","set","setWorldPosition","x","y","z","running","CreateSub","self","Promise","resolve","reject","then","Equit","equals","run","onEnd","undefined","destory","prop","worldPosition","worldRotation","opt","to","call","bind","totalTime","merge","act","stopAllByTarget","setWorldRotation","target","dis","distance","quartOut","backIn","$Front_Quat","$Back_Quat","Quat","fromEuler","update","ShowPoint","ScreamRotation","clone","expoOut","onUpdate","ratio","expoIn"],"mappings":"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","sourcesContent":["import { ITweenOption, Node, Tween, Vec3, easing, game, math, tween, v3 } from \"cc\";\r\nimport { GameSet } from \"../../../manager/GameSet\";\r\nimport { Second } from \"../../../utils/Utils\";\r\n\r\nexport interface ICardAction {\r\n    readonly running: Promise<any>;\r\n    /**运行 */\r\n    run(cb?: Function, update?: (ratio: number) => void): Promise<any>;\r\n    /**合并 */\r\n    merge(act: ICardAction): ICardAction;\r\n    /**直接运行最后一帧 */\r\n    end(): void;\r\n    /**销毁 */\r\n    destory(): void\r\n}\r\n\r\n/**卡牌移动 */\r\nclass BaseAction {\r\n    protected card: Node;\r\n    protected v: Vec3 = v3();\r\n    protected q: math.Quat = math.quat();\r\n    protected cb: Function;\r\n    protected subComplete: Function;\r\n    protected tw: Tween;\r\n\r\n    protected sub: Promise<any>;\r\n    protected ease: any;\r\n    protected tick: number;\r\n    protected dt: number;\r\n    protected lessTime: number;\r\n\r\n    constructor(card: Node, start: Vec3, end: Vec3, q: math.Quat) {\r\n        this.card = card;\r\n        end && this.v.set(end);\r\n        q && this.q.set(q);\r\n        start && card.setWorldPosition(start.x, start.y, start.z);\r\n    }\r\n\r\n    get running() {\r\n        return this.sub;\r\n    }\r\n\r\n    CreateSub(dt: number = 2) {\r\n        let self = this;\r\n        let sub = new Promise((resolve, reject) => {\r\n            self.subComplete = resolve;\r\n        });\r\n        dt++;\r\n        Second(dt).then(() => {\r\n            if (self.subComplete) {\r\n                self.subComplete();\r\n            }\r\n        })\r\n        return sub;\r\n    }\r\n\r\n    /**\r\n     * 判断两个动作参数是否相同\r\n     * @param v \r\n     * @param q \r\n     * @param ease \r\n     * @returns \r\n     */\r\n    Equit(v?: Vec3, q?: math.Quat, ease?: Function) {\r\n        if ((!this.v && !v) || !this.v.equals(v)) return false;\r\n        if ((!this.q && !q) || !this.q.equals(q)) return false;\r\n        if ((!this.ease && !ease) || this.ease != ease) return false;\r\n        return true;\r\n    }\r\n\r\n    run(cb?: Function): Promise<any> {\r\n        if (this.running) return this.running;\r\n        this.cb = cb;\r\n        let self = this;\r\n        this.sub = this.CreateSub(this.dt);\r\n\r\n        let onEnd = () => {\r\n            self.cb && self.cb();\r\n            self.subComplete && self.subComplete();\r\n            self.subComplete = undefined;\r\n            self.destory();\r\n        }\r\n        let prop: any = {};\r\n        if (this.v) prop.worldPosition = this.v;\r\n        if (this.q) prop.worldRotation = this.q;\r\n        let opt: ITweenOption = {};\r\n        if (this.ease) opt.easing = this.ease;\r\n        this.tw = tween(this.card).to(this.dt, prop, opt).call(onEnd.bind(this)).start();\r\n        this.tick = game.totalTime / 1000;\r\n        this.lessTime = this.dt;\r\n        return this.sub;\r\n    }\r\n\r\n    merge(act: any): ICardAction {\r\n        if (!this.running) return act;\r\n        if (this.v && act.v && this.v.equals(act.v)) {\r\n            if (act.q && !this?.q?.equals(act.q)) return act;\r\n            return this;\r\n        }\r\n        if (this.q && act.q && this.q.equals(act.q)) {\r\n            if (act.v && !this?.v?.equals(act.v)) return act;\r\n            return this;\r\n        }\r\n        this.end();\r\n        return act;\r\n    }\r\n    end(): void {\r\n        Tween.stopAllByTarget(this.card);\r\n        this.cb && this.cb();\r\n        this.subComplete && this.subComplete();\r\n        this.subComplete = undefined;\r\n        this.sub = undefined;\r\n        this.v && this.card?.setWorldPosition(this.v);\r\n        this.q && this.card?.setWorldRotation(this.q);\r\n        this.tick = 0;\r\n        this.lessTime = 0;\r\n        this.destory();\r\n    }\r\n    destory(): void {\r\n        // console.log(\"destory\", this);\r\n        this.sub = undefined;\r\n        this.tick = 0;\r\n        this.lessTime = 0;\r\n        this.card = this.tw = undefined;\r\n        this.cb = this.subComplete = undefined;\r\n    }\r\n}\r\n\r\n/**普通移动 */\r\nexport class CardMoveTo extends BaseAction implements ICardAction {\r\n    constructor(card: Node, target: Vec3, q: math.Quat) {\r\n        super(card, undefined, target, q);\r\n    }\r\n    run(cb?: Function): Promise<any> {\r\n        if (this.running) return this.running;\r\n        let dis = Vec3.distance(this.card.worldPosition, this.v);\r\n        this.dt = dis / 100;\r\n        return super.run(cb);\r\n    }\r\n}\r\n\r\n/**卡牌布局 */\r\nexport class CardLayout extends BaseAction implements ICardAction {\r\n    constructor(card: Node, target: Vec3, q: math.Quat) {\r\n        super(card, undefined, target, q);\r\n        this.dt = 0.4;\r\n        this.ease = easing.quartOut;\r\n    }\r\n}\r\n\r\n/**移动到手牌 */\r\nexport class CardFlyToHand extends BaseAction implements ICardAction {\r\n    constructor(card: Node, start: Vec3, end: Vec3, q: math.Quat) {\r\n        super(card, start, end, q);\r\n        this.dt = 0.6;\r\n        this.ease = easing.quartOut;\r\n    }\r\n}\r\n\r\n/**卡片飞到战斗区域 */\r\nexport class CardFlyToArea extends BaseAction implements ICardAction {\r\n    constructor(card: Node, target: Vec3, q: math.Quat) {\r\n        super(card, undefined, target, q);\r\n        this.dt = 0.3;\r\n        this.ease = easing.backIn;\r\n    }\r\n}\r\n\r\nexport const $Front_Quat = math.quat();\r\nexport const $Back_Quat = math.quat();\r\nmath.Quat.fromEuler($Back_Quat, 0, 0, 180);\r\nmath.Quat.fromEuler($Front_Quat, 0, 0, 0);\r\n\r\n/**翻转 */\r\nexport class CardTurnBack extends BaseAction implements ICardAction {\r\n    constructor(card: Node) {\r\n        super(card, undefined, card.worldPosition, $Back_Quat);\r\n        this.dt = 0.2;\r\n    }\r\n    run(cb?: Function): Promise<any> {\r\n        if (this.running) return this.running;\r\n        this.cb = cb;\r\n        let self = this;\r\n        this.sub = this.CreateSub(this.dt);\r\n        let onEnd = () => {\r\n            Tween.stopAllByTarget(this.card);\r\n            self.cb && self.cb();\r\n            self.subComplete && self.subComplete();\r\n            self.subComplete = undefined;\r\n            self.destory();\r\n        }\r\n        let dt = this.dt / 2;\r\n        let v = v3(this.v.x, this.v.y + this.card['wide'] / 2, this.v.z);\r\n        this.tw = tween(this.card).to(dt, {\r\n            worldPosition: v, worldRotation: this.q\r\n        }, { easing: easing.quartOut }).to(dt, {\r\n            worldPosition: this.v\r\n        }).call(onEnd.bind(this)).start();\r\n        this.tick = game.totalTime / 1000;\r\n        this.lessTime = this.dt;\r\n        return this.sub;\r\n    }\r\n}\r\n\r\n/**揭示动作 */\r\nexport class CardTurnFront extends BaseAction implements ICardAction {\r\n    constructor(card: Node) {\r\n        super(card, undefined, card.worldPosition, $Front_Quat);\r\n        this.dt = 1.5;\r\n    }\r\n    run(cb?: Function, update?: (ratio: number) => void): Promise<any> {\r\n        if (this.running) return this.running;\r\n        this.cb = cb;\r\n        let self = this;\r\n        this.sub = this.CreateSub(this.dt);\r\n        let onEnd = () => {\r\n            Tween.stopAllByTarget(this.card);\r\n            self.cb && self.cb();\r\n            self.subComplete && self.subComplete();\r\n            self.subComplete = undefined;\r\n            self.destory();\r\n        }\r\n        let dt = this.dt / 4;\r\n        let v = GameSet.ShowPoint;\r\n        this.tw = tween(this.card).to(dt, {\r\n            worldPosition: v3(v.x, v.y, v.z), worldRotation: GameSet.ScreamRotation.clone()\r\n        }, { easing: easing.expoOut }).to(dt * 2, {\r\n            worldPosition: v3(v.x, v.y + 1, v.z)\r\n        }, {\r\n            onUpdate: (target: Node, ratio: number) => {\r\n                update && update(ratio);\r\n            }\r\n        }).to(dt, {\r\n            worldPosition: this.v, worldRotation: this.q\r\n        }, { easing: easing.expoIn }).call(onEnd.bind(this)).start();\r\n        this.tick = game.totalTime / 1000;\r\n        this.lessTime = this.dt;\r\n        return this.sub;\r\n    }\r\n}\r\n\r\nexport class CardShowBig extends BaseAction implements ICardAction {\r\n    constructor(card: Node) {\r\n        super(card, undefined, card.worldPosition, $Front_Quat);\r\n        this.dt = 0.2;\r\n    }\r\n    run(cb?: Function, update?: (ratio: number) => void): Promise<any> {\r\n        if (this.running) return this.running;\r\n        this.cb = cb;\r\n        let self = this;\r\n        this.sub = this.CreateSub(this.dt);\r\n        let onEnd = () => {\r\n            Tween.stopAllByTarget(this.card);\r\n            self.cb && self.cb();\r\n            self.subComplete && self.subComplete();\r\n            self.subComplete = undefined;\r\n            self.destory();\r\n        }\r\n        let dt = this.dt;\r\n        let v = GameSet.ShowPoint;\r\n        this.tw = tween(this.card).to(dt, {\r\n            worldPosition: v3(v.x, v.y, v.z), worldRotation: GameSet.ScreamRotation.clone()\r\n        }, { easing: easing.expoOut }).call(onEnd.bind(this)).start();\r\n        this.tick = game.totalTime / 1000;\r\n        this.lessTime = this.dt;\r\n        return this.sub;\r\n    }\r\n}\r\n\r\n"]}