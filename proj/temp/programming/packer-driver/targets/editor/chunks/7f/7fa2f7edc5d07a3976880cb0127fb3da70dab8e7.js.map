{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/resources/prefabs/bag/OpenBoxPanel.ts"],"names":["OpenBoxPanel","Input","Label","Sprite","SpriteFrame","UITransform","Slider","path","Button","PageView","instantiate","Panel","PlayerData","BoxType","CardQuality","CfgMgr","ResMgr","folder_icon","folder_item","MsgTypeSend","Session","OpenBoxPage","EventMgr","Evt_GetReward","Evt_Item_Change","Evt_OpenBoxGetRewardPanel","Tips","ItemUtil","prefab","iocnBg","icon","itemName","item_num","lbl_tips","consumeNum","hasNum","progress","btn_right","btn_left","okBtn","openBoxItem","page1","itemData","BoxData","curSelectCount","maxItemcount","selectItem","curPageNum","datas","maxPageNum","onLoad","CloseBy","find","on","EventType","TOUCH_END","Hide","node","onOk","onAdd","onDel","onBtnRight","onBtnLeft","onSlide","onShow","ItemChange","resetData","updateBtnState","flush","args","string","ItemName","count","GetItemCount","Items","active","GetBoxData","Limit","icon_url","join","Icon","spriteFrame","LoadResAbSub","icon_bg_url","Quality","is_select","Boxtype","select","enabled","getComponent","grayscale","str","RewardNum","rewardDataType","Types","rewardData","rewardDataNum","ItemsNum","rewardCount","length","page_num","Math","floor","index","pageData","i","type","id","num","GetRewardRoleById","RoleType","awardList","CreateThing","push","removeAllPages","k","item","itemNode","addComponent","SetData","getSelect","bind","addPage","updateProgress","getRoleReward","cfg","Get","element","RewardID","setCurrentPageIndex","getPages","setSelectNum","onHide","undefined","off","update","dt","size","contentSize","setContentSize","width","e","max","ceil","setItemData","cur","getCurrentPageIndex","data","isClick","Show","Text","lbl","RoleName","GetText","name","callBack","random","OpenBoxRequest","item_id","ItemID","selected_items","Send"],"mappings":"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","sourcesContent":["import { Input, Label, Node, Sprite, SpriteFrame, UITransform, Slider, path, Button, tween, v3, PageView, instantiate, Layout } from \"cc\";\r\nimport { Panel } from \"../../GameRoot\";\r\nimport PlayerData from \"../roleModule/PlayerData\";\r\nimport { BoxType, CardQuality, CfgMgr, RewardBox, StdItem } from \"../../manager/CfgMgr\";\r\nimport { ResMgr, folder_icon, folder_item } from \"../../manager/ResMgr\";\r\nimport { MsgTypeSend } from \"../../MsgType\";\r\nimport { Session } from \"../../net/Session\";\r\nimport { OpenBoxPage } from \"./OpenBoxPage\";\r\nimport { EventMgr, Evt_GetReward, Evt_Item_Change, Evt_OpenBoxGetRewardPanel } from \"../../manager/EventMgr\";\r\nimport { Tips } from \"../login/Tips\";\r\nimport { ItemUtil } from \"../../utils/ItemUtils\";\r\n\r\nexport class OpenBoxPanel extends Panel {\r\n    protected prefab: string = \"prefabs/panel/bag/OpenBoxPanel\";\r\n    private iocnBg: Sprite;\r\n    private icon: Sprite;\r\n    private itemName: Label;\r\n    private item_num: Label;\r\n    private lbl_tips: Label;\r\n    private consumeNum: Label;\r\n    private hasNum: Label;\r\n    private Slider: Slider;\r\n    private progress: Node;\r\n    private btn_right: Button;\r\n    private btn_left: Button;\r\n    private okBtn: Button;\r\n    private PageView: PageView;\r\n    private openBoxItem: Node;\r\n    private page1: Node;\r\n\r\n    private itemData: StdItem;\r\n    private BoxData: RewardBox;\r\n\r\n    private curSelectCount = 1;\r\n    private maxItemcount: number;\r\n    private selectItem: number[];\r\n    private curPageNum: number = 0;\r\n    private datas = []\r\n    private maxPageNum: number = 0;\r\n\r\n    protected onLoad(): void {\r\n        this.CloseBy(\"mask\");\r\n        this.find(\"panel/closeBtn\").on(Input.EventType.TOUCH_END, this.Hide, this);\r\n        this.okBtn = this.find(\"panel/okBtn\", Button);\r\n        this.okBtn.node.on(\"click\", this.onOk, this);\r\n        this.iocnBg = this.find(\"panel/iocnBg\", Sprite);\r\n        this.icon = this.find(\"panel/iocnBg/icon\", Sprite);\r\n        this.itemName = this.find(\"panel/itemName\", Label);\r\n        this.item_num = this.find(\"panel/item_num\", Label);\r\n        this.lbl_tips = this.find(\"panel/lbl_tips\", Label);\r\n        this.page1 = this.find(\"panel/page1\");\r\n        this.consumeNum = this.find(\"panel/page1/consumeNum\", Label);\r\n        this.hasNum = this.find(\"panel/page1/hasNum\", Label);\r\n        this.Slider = this.find(\"panel/page1/Slider\", Slider);\r\n        this.progress = this.find(\"panel/page1/Slider/progress\");\r\n        this.btn_right = this.find(\"panel/btn_right\", Button);\r\n        this.btn_left = this.find(\"panel/btn_left\", Button);\r\n       \r\n       \r\n    \r\n        this.PageView = this.find(\"panel/PageView\", PageView)\r\n        this.openBoxItem = this.find(\"panel/PageView/view/content/OpenBoxItem\")\r\n        this.find(\"panel/page1/right\").on(Input.EventType.TOUCH_END, this.onAdd, this);\r\n        this.find(\"panel/page1/left\").on(Input.EventType.TOUCH_END, this.onDel, this);\r\n        this.btn_right.node.on(\"click\", this.onBtnRight, this)\r\n        this.btn_left.node.on(\"click\", this.onBtnLeft, this)\r\n        this.Slider.node.on('slide', this.onSlide, this);\r\n        // EventMgr.on(Evt_Item_Change, this.onItemChange, this);\r\n        // EventMgr.on(Evt_GetReward, this.resetData, this);\r\n        // EventMgr.on(Evt_OpenBoxGetRewardPanel, this.updateBtnState, this);\r\n    }\r\n\r\n    protected onShow(): void {\r\n        EventMgr.on(Evt_Item_Change, this.ItemChange, this);\r\n        EventMgr.on(Evt_GetReward, this.resetData, this);\r\n        EventMgr.on(Evt_OpenBoxGetRewardPanel, this.updateBtnState, this);\r\n    }\r\n\r\n    async flush(...args: any[]) {\r\n        this.itemData = args[0];\r\n        // this.itemData = CfgMgr.Getitem(1202)\r\n        if (!this.itemData) return;\r\n        this.itemName.string = this.itemData.ItemName;\r\n        let count = PlayerData.GetItemCount(this.itemData.Items);\r\n        this.page1.active = true;\r\n        if (count <= 1) {\r\n            this.page1.active = false;\r\n        }\r\n        this.item_num.string = \"\" + count;\r\n        this.BoxData = CfgMgr.GetBoxData(this.itemData.Items);\r\n\r\n        this.maxItemcount = count > this.BoxData.Limit ? this.BoxData.Limit : count;\r\n        this.hasNum.string = \"/\" + this.maxItemcount;\r\n        let icon_url = path.join(folder_item, this.itemData.Icon, \"spriteFrame\");\r\n        this.icon.spriteFrame = await ResMgr.LoadResAbSub(icon_url, SpriteFrame);\r\n        let icon_bg_url = path.join(folder_icon, \"quality\", CardQuality[this.itemData.Quality] + \"_bag_bg\", \"spriteFrame\");\r\n        this.iocnBg.spriteFrame = await ResMgr.LoadResAbSub(icon_bg_url, SpriteFrame);\r\n\r\n        \r\n        // this.BoxData = CfgMgr.GetBoxData(1200);\r\n        let is_select = this.BoxData.Boxtype == BoxType.select\r\n        this.okBtn.enabled = !is_select;\r\n        this.okBtn.node.getComponent(Sprite).grayscale = is_select;\r\n        let str = [\"可随机获得以下道具\" , \"选择获得以下道具0/\", \"可获得以下道具\"]\r\n        this.lbl_tips.string = is_select ? str[this.BoxData.Boxtype - 1] + this.BoxData.RewardNum : str[this.BoxData.Boxtype - 1];\r\n        let rewardDataType = this.BoxData.Types;\r\n        let rewardData = this.BoxData.Items;\r\n        let rewardDataNum = this.BoxData.ItemsNum;\r\n        let rewardCount = this.BoxData.Items.length < 8 ? this.BoxData.Items.length : 8;\r\n\r\n        let page_num = Math.floor(rewardData.length / 8) + (rewardData.length % 8 == 0 ? 0 : 1);\r\n\r\n        this.maxPageNum = page_num;\r\n        this.datas = [];\r\n        for (let index = 0; index < page_num; index++) {\r\n            let pageData = [];\r\n            for (let i = 0; i < rewardCount; i++) {\r\n                let type = rewardDataType[i + (index * rewardCount)]\r\n                let id = rewardData[i + (index * rewardCount)];\r\n                let num = rewardDataNum[i + (index * rewardCount)]\r\n                if (!num) {\r\n                    break;\r\n                }\r\n                if(type == 5){\r\n                  id = CfgMgr.GetRewardRoleById(id).RoleType;\r\n                }\r\n                let awardList = ItemUtil.CreateThing(type, id, num);\r\n                pageData.push(awardList)\r\n            }\r\n            this.datas.push(pageData);\r\n        }\r\n\r\n        this.PageView.removeAllPages();\r\n        for (let k = 0; k < page_num; k++) {\r\n            let item = instantiate(this.openBoxItem)\r\n            let itemNode = item.getComponent(OpenBoxPage);\r\n            if (!itemNode) itemNode = item.addComponent(OpenBoxPage);\r\n            itemNode.SetData(this.datas[k], this.curSelectCount, this.BoxData.RewardNum, is_select, this.getSelect.bind(this))\r\n            this.PageView.addPage(item)\r\n        }\r\n        this.updateProgress();\r\n    }\r\n\r\n    private getRoleReward(type:number){\r\n        let cfg = CfgMgr.Get(\"RewardRole\");\r\n        for (let index = 0; index < cfg.length; index++) {\r\n            const element = cfg[index];\r\n            if(type == element.RewardID){\r\n                return element.RoleType;\r\n            } \r\n        }\r\n        return null;\r\n    }\r\n\r\n    private ItemChange() {\r\n        let count = PlayerData.GetItemCount(this.itemData.Items);\r\n        this.item_num.string = \"\" + count;\r\n        this.maxItemcount = count > this.BoxData.Limit ? this.BoxData.Limit : count;;\r\n        this.hasNum.string = \"/\" + this.maxItemcount;\r\n    }\r\n\r\n    private resetData() {\r\n        if (this.maxItemcount <= 0) {\r\n            this.Hide();\r\n            return;\r\n        }\r\n        if (this.maxItemcount <= 1) {\r\n            this.page1.active = false;\r\n        }\r\n        this.curSelectCount = 1;\r\n        this.curPageNum = 0;\r\n        if (this.BoxData.Boxtype == BoxType.select) {\r\n            this.selectItem = [];\r\n            this.lbl_tips.string = \"选择获得以下道具\" + this.selectItem.length + \"/\" + this.BoxData.RewardNum;\r\n            this.PageView.setCurrentPageIndex(this.curPageNum);\r\n            let item = this.PageView.getPages()[this.curPageNum].getComponent(OpenBoxPage)\r\n            item.SetData(this.datas[this.curPageNum], this.curSelectCount, this.BoxData.RewardNum, this.BoxData.Boxtype == BoxType.select, this.getSelect.bind(this))\r\n            this.okBtn.enabled = false;\r\n            this.okBtn.node.getComponent(Sprite).grayscale = true;\r\n        }\r\n        this.updateProgress();\r\n    }\r\n\r\n    private updateProgress() {\r\n        this.Slider.progress = this.curSelectCount / this.maxItemcount;\r\n        this.consumeNum.string = this.curSelectCount + \"\";\r\n        let item = this.PageView.getPages()[this.curPageNum].getComponent(OpenBoxPage)\r\n        item.setSelectNum(this.curSelectCount, this.BoxData.Boxtype == BoxType.select)\r\n    }\r\n\r\n    private updateBtnState(){\r\n        this.okBtn.enabled = true;\r\n    }\r\n\r\n    protected onHide(...args: any[]): void {\r\n        this.curSelectCount = 1;\r\n        this.curPageNum = 0;\r\n        this.selectItem = undefined;\r\n        this.PageView.removeAllPages();\r\n        EventMgr.off(Evt_Item_Change, this.ItemChange, this);\r\n        EventMgr.off(Evt_GetReward, this.resetData, this);\r\n        EventMgr.off(Evt_OpenBoxGetRewardPanel, this.updateBtnState, this);\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        let size = this.Slider.node.getComponent(UITransform).contentSize;\r\n        this.progress.getComponent(UITransform).setContentSize(this.Slider.progress * size.width, 28);\r\n    }\r\n\r\n    private onAdd(e?: any) {\r\n        if (this.curSelectCount >= this.maxItemcount) return;\r\n        this.curSelectCount++;\r\n        //超出拥有数量\r\n        if (this.curSelectCount > this.maxItemcount) {\r\n            this.curSelectCount = this.maxItemcount\r\n        }\r\n        this.updateProgress();\r\n    }\r\n\r\n    private onDel(e?: any) {\r\n        if (this.curSelectCount < 1) return;\r\n        this.curSelectCount--;\r\n        if (this.curSelectCount < 1) {\r\n            this.curSelectCount = 1;\r\n        }\r\n        this.updateProgress();\r\n    }\r\n\r\n    private onSlide(e?: Slider) {\r\n        this.curSelectCount = Math.max(Math.ceil(this.maxItemcount * this.Slider.progress), 1);\r\n        this.updateProgress();\r\n    }\r\n\r\n\r\n    private onBtnRight() {\r\n        this.curPageNum++;\r\n        if (this.curPageNum >= this.maxPageNum) {\r\n            this.curPageNum = this.maxPageNum - 1;\r\n            return;\r\n        }\r\n        this.setItemData();\r\n    }\r\n\r\n    private onBtnLeft() {\r\n        this.curPageNum--;\r\n        if (this.curPageNum < 0) {\r\n            this.curPageNum = 0;\r\n            return;\r\n        }\r\n        this.setItemData();\r\n    }\r\n\r\n    private setItemData() {\r\n        this.PageView.setCurrentPageIndex(this.curPageNum);\r\n        let cur = this.PageView.getCurrentPageIndex();\r\n        let item = this.PageView.getPages()[cur].getComponent(OpenBoxPage)\r\n        item.SetData(this.datas[cur], this.curSelectCount, this.BoxData.RewardNum, this.BoxData.Boxtype == BoxType.select, this.getSelect.bind(this))\r\n    }\r\n\r\n    private getSelect(data: number[]) {\r\n        this.selectItem = data\r\n        this.lbl_tips.string = \"选择获得以下道具\" + data.length + \"/\" + this.BoxData.RewardNum;\r\n        let isClick = data.length == this.BoxData.RewardNum;\r\n        this.okBtn.enabled = isClick\r\n        this.okBtn.node.getComponent(Sprite).grayscale = !isClick;\r\n    }\r\n\r\n    protected onOk() {\r\n        if (this.BoxData.Boxtype == BoxType.select && (!this.selectItem || this.selectItem.length < this.BoxData.RewardNum)) {\r\n            Tips.Show(\"请选择道具\")\r\n            return;\r\n        }\r\n        if(this.curSelectCount >= 2 && this.BoxData.Text && this.BoxData.Text != \"\"){\r\n            let id = this.BoxData.Items[this.selectItem[0]]\r\n            let lbl = CfgMgr.GetRewardRoleById(id).RoleName\r\n            let str = CfgMgr.GetText(this.BoxData.Text, {name: lbl})\r\n            Tips.Show(str, this.callBack.bind(this))\r\n        }else{\r\n            this.callBack();\r\n        }\r\n    }\r\n\r\n    private callBack(){\r\n        if (this.BoxData.Boxtype == BoxType.random) {\r\n            let data = {\r\n                type: MsgTypeSend.OpenBoxRequest,\r\n                data: {\r\n                    item_id: this.BoxData.ItemID,\r\n                    count: this.curSelectCount,\r\n                    selected_items: [],\r\n                }\r\n            }\r\n            Session.Send(data)\r\n        } else if(this.BoxData.Boxtype == BoxType.select) {\r\n            let data = {\r\n                type: MsgTypeSend.OpenBoxRequest,\r\n                data: {\r\n                    item_id: this.BoxData.ItemID,\r\n                    count: this.curSelectCount,\r\n                    selected_items: this.selectItem,\r\n                }\r\n            }\r\n            Session.Send(data)\r\n        }else{\r\n            let data = {\r\n                type: MsgTypeSend.OpenBoxRequest,\r\n                data: {\r\n                    item_id: this.BoxData.ItemID,\r\n                    count: this.curSelectCount,\r\n                }\r\n            }\r\n            Session.Send(data)\r\n        }\r\n        this.okBtn.enabled = false;\r\n    }\r\n\r\n\r\n\r\n\r\n}"]}