{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/bag/OpenBoxPanel1.ts"],"names":["OpenBoxPanel1","Input","Label","Sprite","UITransform","Slider","path","Button","PageView","instantiate","folder_icon","folder_item","Session","OpenBoxPage","EventMgr","Evt_GetReward","Evt_Item_Change","Evt_OpenBoxGetRewardPanel","Panel","BoxType","CardQuality","CfgMgr","ThingName","PlayerData","ItemUtil","Tips","Req","Route","prefab","iocnBg","icon","itemName","item_num","lbl_tips","consumeNum","hasNum","progress","btn_right","btn_left","okBtn","openBoxItem","page1","itemData","BoxData","curSelectCount","maxItemcount","selectItem","curPageNum","datas","maxPageNum","onLoad","CloseBy","find","on","EventType","TOUCH_END","Hide","node","onOk","onAdd","onDel","onBtnRight","onBtnLeft","onSlide","onShow","ItemChange","resetData","updateBtnState","flush","args","string","ItemName","count","GetItemCount","Items","active","GetBoxData","Limit","icon_url","join","Icon","icon_bg_url","Quality","is_select","Boxtype","select","enabled","getComponent","grayscale","str","RewardNum","rewardDataType","Types","rewardData","rewardDataNum","ItemsNum","rewardCount","length","page_num","Math","floor","index","pageData","i","type","id","num","battlecard","card","GetBattleCardDeliver","push","awardList","CreateThing","SthingType","removeAllPages","k","item","itemNode","addComponent","SetData","getSelect","bind","addPage","updateProgress","setCurrentPageIndex","getPages","setSelectNum","onHide","off","update","dt","size","contentSize","setContentSize","width","e","max","ceil","setItemData","cur","getCurrentPageIndex","data","isClick","Show","Text","callBack","list","open_box","boxId","ItemID","selectedItems","server","Send"],"mappings":"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","sourcesContent":["import { Input, Label, Node, Sprite, SpriteFrame, UITransform, Slider, path, Button, tween, v3, PageView, instantiate, Layout, Toggle } from \"cc\";\r\nimport { ResMgr, folder_icon, folder_item } from \"../../manager/ResMgr\";\r\n\r\nimport { Session } from \"../../net/Session\";\r\nimport { OpenBoxPage } from \"./OpenBoxPage\";\r\nimport { EventMgr, Evt_GetReward, Evt_Item_Change, Evt_OpenBoxGetRewardPanel } from \"../../manager/EventMgr\";\r\nimport { Panel } from \"../../manager/GameRoot\";\r\nimport { BoxType, CardQuality, CfgMgr, RewardBox, StdItem, ThingName, ThingType } from \"../../manager/CfgMgr\";\r\nimport { PlayerData } from \"../player/PlayerData\";\r\nimport { ItemUtil } from \"../../utils/ItemUtils\";\r\nimport { Tips } from \"../common/Tips\";\r\nimport { Req, Route } from \"../../net/Protocol\";\r\n\r\nexport class OpenBoxPanel1 extends Panel {\r\n    protected prefab: string = \"prefabs/bag/OpenBoxPanel1\";\r\n    private iocnBg: Sprite;\r\n    private icon: Sprite;\r\n    private itemName: Label;\r\n    private item_num: Label;\r\n    private lbl_tips: Label;\r\n    private consumeNum: Label;\r\n    private hasNum: Label;\r\n    private Slider: Slider;\r\n    private progress: Node;\r\n    private btn_right: Button;\r\n    private btn_left: Button;\r\n    private okBtn: Button;\r\n    private PageView: PageView;\r\n    private openBoxItem: Node;\r\n    private page1: Node;\r\n\r\n    private itemData: StdItem;\r\n    private BoxData: RewardBox;\r\n\r\n    private curSelectCount = 1;\r\n    private maxItemcount: number;\r\n    private selectItem: number[];\r\n    private curPageNum: number = 0;\r\n    private datas = []\r\n    private maxPageNum: number = 0;\r\n\r\n    protected onLoad(): void {\r\n        this.CloseBy(\"mask\");\r\n        this.find(\"panel/closeBtn\").on(Input.EventType.TOUCH_END, this.Hide, this);\r\n        this.okBtn = this.find(\"panel/okBtn\", Button);\r\n        this.okBtn.node.on(\"click\", this.onOk, this);\r\n        this.iocnBg = this.find(\"panel/iocnBg\", Sprite);\r\n        this.icon = this.find(\"panel/iocnBg/icon\", Sprite);\r\n        this.itemName = this.find(\"panel/itemName\", Label);\r\n        this.item_num = this.find(\"panel/item_num\", Label);\r\n        this.lbl_tips = this.find(\"panel/lbl_tips\", Label);\r\n        this.page1 = this.find(\"panel/page1\");\r\n        this.consumeNum = this.find(\"panel/page1/consumeNum\", Label);\r\n        this.hasNum = this.find(\"panel/page1/hasNum\", Label);\r\n        this.Slider = this.find(\"panel/page1/Slider\", Slider);\r\n        this.progress = this.find(\"panel/page1/Slider/progress\");\r\n        this.btn_right = this.find(\"panel/btn_right\", Button);\r\n        this.btn_left = this.find(\"panel/btn_left\", Button);\r\n       \r\n       \r\n    \r\n        this.PageView = this.find(\"panel/PageView\", PageView)\r\n        this.openBoxItem = this.find(\"panel/PageView/view/content/OpenBoxItem\")\r\n        this.find(\"panel/page1/right\").on(Input.EventType.TOUCH_END, this.onAdd, this);\r\n        this.find(\"panel/page1/left\").on(Input.EventType.TOUCH_END, this.onDel, this);\r\n        this.btn_right.node.on(\"click\", this.onBtnRight, this)\r\n        this.btn_left.node.on(\"click\", this.onBtnLeft, this)\r\n        this.Slider.node.on('slide', this.onSlide, this);\r\n    }\r\n\r\n    protected onShow(): void {\r\n        EventMgr.on(Evt_Item_Change, this.ItemChange, this);\r\n        EventMgr.on(Evt_GetReward, this.resetData, this);\r\n        EventMgr.on(Evt_OpenBoxGetRewardPanel, this.updateBtnState, this);\r\n    }\r\n\r\n     flush(...args: any[]) {\r\n        this.itemData = args[0];\r\n        // this.itemData = CfgMgr.Getitem(1202)\r\n        if (!this.itemData) return;\r\n        this.itemName.string = this.itemData.ItemName;\r\n        let count = PlayerData.GetItemCount(this.itemData.Items);\r\n        this.page1.active = true;\r\n        if (count <= 1) {\r\n            this.page1.active = false;\r\n        }\r\n        this.item_num.string = \"\" + count;\r\n        this.BoxData = CfgMgr.GetBoxData(this.itemData.Items);\r\n\r\n        this.maxItemcount = count > this.BoxData.Limit ? this.BoxData.Limit : count;\r\n        this.hasNum.string = \"/\" + this.maxItemcount;\r\n        let icon_url = path.join(folder_item, this.itemData.Icon, \"spriteFrame\");\r\n        // this.icon.spriteFrame = await ResMgr.LoadResAbSub(icon_url, SpriteFrame);\r\n        let icon_bg_url = path.join(folder_icon, \"quality\", CardQuality[this.itemData.Quality] + \"_bag_bg\", \"spriteFrame\");\r\n        // this.iocnBg.spriteFrame = await ResMgr.LoadResAbSub(icon_bg_url, SpriteFrame);\r\n\r\n        \r\n        // this.BoxData = CfgMgr.GetBoxData(1200);\r\n        let is_select = this.BoxData.Boxtype == BoxType.select\r\n        this.okBtn.enabled = !is_select;\r\n        this.okBtn.node.getComponent(Sprite).grayscale = is_select;\r\n        let str = [\"可随机获得以下道具\" , \"选择获得以下道具0/\", \"可获得以下道具\"]\r\n        this.lbl_tips.string = is_select ? str[this.BoxData.Boxtype - 1] + this.BoxData.RewardNum : str[this.BoxData.Boxtype - 1];\r\n        let rewardDataType = this.BoxData.Types;\r\n        let rewardData = this.BoxData.Items;\r\n        let rewardDataNum = this.BoxData.ItemsNum;\r\n        let rewardCount = this.BoxData.Items.length < 8 ? this.BoxData.Items.length : 8;\r\n\r\n        let page_num = Math.floor(rewardData.length / 8) + (rewardData.length % 8 == 0 ? 0 : 1);\r\n\r\n        this.maxPageNum = page_num;\r\n        this.datas = [];\r\n        for (let index = 0; index < page_num; index++) {\r\n            let pageData = [];\r\n            for (let i = 0; i < rewardCount; i++) {\r\n                let type = rewardDataType[i + (index * rewardCount)]\r\n                let id = rewardData[i + (index * rewardCount)];\r\n                let num = rewardDataNum[i + (index * rewardCount)] ? rewardDataNum[i + (index * rewardCount)] : 1\r\n                if (!id) {\r\n                    break;\r\n                }\r\n                if(type == ThingName.battlecard){\r\n                    let card = CfgMgr.GetBattleCardDeliver(id);\r\n                    pageData.push(card)\r\n                }else{\r\n                    let awardList = ItemUtil.CreateThing(ItemUtil.SthingType[type], id, num);\r\n                    pageData.push(awardList)\r\n                }\r\n            }\r\n            this.datas.push(pageData);\r\n        }\r\n\r\n        this.selectItem = [];\r\n        this.PageView.removeAllPages();\r\n        for (let k = 0; k < page_num; k++) {\r\n            let item = instantiate(this.openBoxItem)\r\n            let itemNode = item.getComponent(OpenBoxPage);\r\n            if (!itemNode) itemNode = item.addComponent(OpenBoxPage);\r\n            itemNode.SetData(this.datas[k], this.curSelectCount, this.BoxData.RewardNum, is_select, this.getSelect.bind(this), this.BoxData.Types[0] != 3, this.curPageNum, this.selectItem)\r\n            this.PageView.addPage(item)\r\n        }\r\n        this.updateProgress();\r\n    }\r\n\r\n    private ItemChange() {\r\n        let count = PlayerData.GetItemCount(this.itemData.Items);\r\n        this.item_num.string = \"\" + count;\r\n        this.maxItemcount = count > this.BoxData.Limit ? this.BoxData.Limit : count;;\r\n        this.hasNum.string = \"/\" + this.maxItemcount;\r\n    }\r\n\r\n    private resetData() {\r\n        if (this.maxItemcount <= 0) {\r\n            this.Hide();\r\n            return;\r\n        }\r\n        if (this.maxItemcount <= 1) {\r\n            this.page1.active = false;\r\n        }\r\n        this.curSelectCount = 1;\r\n        this.curPageNum = 0;\r\n        this.selectItem = [];\r\n        if (this.BoxData.Boxtype == BoxType.select) {\r\n            this.lbl_tips.string = \"选择获得以下道具\" + this.selectItem.length + \"/\" + this.BoxData.RewardNum;\r\n            this.PageView.setCurrentPageIndex(this.curPageNum);\r\n            let item = this.PageView.getPages()[this.curPageNum].getComponent(OpenBoxPage)\r\n            item.SetData(this.datas[this.curPageNum], this.curSelectCount, this.BoxData.RewardNum, this.BoxData.Boxtype == BoxType.select, this.getSelect.bind(this), this.BoxData.Types[0] != 3, this.curPageNum, this.selectItem)\r\n            this.okBtn.enabled = false;\r\n            this.okBtn.node.getComponent(Sprite).grayscale = true;\r\n        }\r\n        this.updateProgress();\r\n    }\r\n\r\n    private updateProgress() {\r\n        this.Slider.progress = this.curSelectCount / this.maxItemcount;\r\n        this.consumeNum.string = this.curSelectCount + \"\";\r\n        let item = this.PageView.getPages()[this.curPageNum].getComponent(OpenBoxPage)\r\n        item.setSelectNum(this.curSelectCount, this.BoxData.Boxtype == BoxType.select)\r\n    }\r\n\r\n    private updateBtnState(){\r\n        this.okBtn.enabled = true;\r\n    }\r\n\r\n    protected onHide(...args: any[]): void {\r\n        this.curSelectCount = 1;\r\n        this.curPageNum = 0;\r\n        this.selectItem = [];\r\n        this.PageView.removeAllPages();\r\n        EventMgr.off(Evt_Item_Change, this.ItemChange, this);\r\n        EventMgr.off(Evt_GetReward, this.resetData, this);\r\n        EventMgr.off(Evt_OpenBoxGetRewardPanel, this.updateBtnState, this);\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        let size = this.Slider.node.getComponent(UITransform).contentSize;\r\n        this.progress.getComponent(UITransform).setContentSize(this.Slider.progress * size.width, 28);\r\n    }\r\n\r\n    private onAdd(e?: any) {\r\n        if (this.curSelectCount >= this.maxItemcount) return;\r\n        this.curSelectCount++;\r\n        //超出拥有数量\r\n        if (this.curSelectCount > this.maxItemcount) {\r\n            this.curSelectCount = this.maxItemcount\r\n        }\r\n        this.updateProgress();\r\n    }\r\n\r\n    private onDel(e?: any) {\r\n        if (this.curSelectCount < 1) return;\r\n        this.curSelectCount--;\r\n        if (this.curSelectCount < 1) {\r\n            this.curSelectCount = 1;\r\n        }\r\n        this.updateProgress();\r\n    }\r\n\r\n    private onSlide(e?: Slider) {\r\n        this.curSelectCount = Math.max(Math.ceil(this.maxItemcount * this.Slider.progress), 1);\r\n        this.updateProgress();\r\n    }\r\n\r\n\r\n    private onBtnRight() {\r\n        this.curPageNum++;\r\n        if (this.curPageNum >= this.maxPageNum) {\r\n            this.curPageNum = this.maxPageNum - 1;\r\n            return;\r\n        }\r\n        this.setItemData();\r\n    }\r\n\r\n    private onBtnLeft() {\r\n        this.curPageNum--;\r\n        if (this.curPageNum < 0) {\r\n            this.curPageNum = 0;\r\n            return;\r\n        }\r\n        this.setItemData();\r\n    }\r\n\r\n    private setItemData() {\r\n        this.PageView.setCurrentPageIndex(this.curPageNum);\r\n        let cur = this.PageView.getCurrentPageIndex();\r\n        let item = this.PageView.getPages()[cur].getComponent(OpenBoxPage)\r\n        item.SetData(this.datas[cur], this.curSelectCount, this.BoxData.RewardNum, this.BoxData.Boxtype == BoxType.select, this.getSelect.bind(this), this.BoxData.Types[0] != 3, this.curPageNum, this.selectItem)\r\n    }\r\n\r\n    private getSelect(data: number[]) {\r\n        this.selectItem.push(...data)\r\n        this.lbl_tips.string = \"选择获得以下道具\" + this.selectItem.length + \"/\" + this.BoxData.RewardNum;\r\n        let isClick = this.selectItem.length == this.BoxData.RewardNum;\r\n        this.okBtn.enabled = isClick\r\n        this.okBtn.node.getComponent(Sprite).grayscale = !isClick;\r\n    }\r\n\r\n    protected onOk() {\r\n        if (this.BoxData.Boxtype == BoxType.select && (!this.selectItem || this.selectItem.length < this.BoxData.RewardNum)) {\r\n            Tips.Show(\"请选择道具\")\r\n            return;\r\n        }\r\n        if(this.curSelectCount >= 2 && this.BoxData.Text && this.BoxData.Text != \"\"){\r\n            let id = this.BoxData.Items[this.selectItem[0]]\r\n            // let lbl = CfgMgr.GetRewardRoleById(id).RoleName\r\n            // let str = CfgMgr.GetText(this.BoxData.Text, {name: lbl})\r\n            // Tips.Show(str, this.callBack.bind(this))\r\n        }else{\r\n            this.callBack();\r\n        }\r\n    }\r\n\r\n    private callBack(){\r\n        let list = this.selectItem\r\n        if(this.BoxData.Boxtype != BoxType.select){\r\n            list = null;\r\n        }\r\n        let open_box = new Req[\"player.protocol.openbox\"]();\r\n        open_box.boxId = this.BoxData.ItemID;\r\n        open_box.count = this.curSelectCount;\r\n        open_box.selectedItems = list\r\n        open_box.server = PlayerData.server\r\n        Session.Send(Route[\"player.protocol.openbox\"],open_box);\r\n        // this.okBtn.enabled = false;\r\n    }\r\n\r\n\r\n\r\n\r\n}"]}