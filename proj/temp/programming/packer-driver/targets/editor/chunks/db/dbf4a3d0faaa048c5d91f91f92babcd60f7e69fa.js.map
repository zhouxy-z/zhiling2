{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/trade/TradeCreateOrderPanel.ts"],"names":["TradeCreateOrderPanel","Button","Input","Label","Slider","Sprite","SpriteFrame","Toggle","Tween","UITransform","path","tween","Panel","AutoScroller","BagItem","SOrderType","CfgMgr","ItemType","ThingTypeName","Second","Utils","PlayerData","ResMgr","folder_item","Tips2","Tips","Session","EventMgr","Evt_Item_Change","Req","Route","Card","DateUtils","TopUI","prefab","page","page1","scroller1","page2","scroller2","navBtns","scroller","itemName","cost_slider","cost_progress","cost_consumeNum","cost_hasNum","num_slider","num_consumeNum","num_hasNum","num_progress","description","buyNum","sellNum","cost_num","btnCreate","buyNode","sellNode","num_slider_node","num_left_btn","num_right_btn","orderNode","noneListCont","arry_num","btnLabel","cdTime","sortBtn","sortNode","sortNav","bg","iconNode","Data","selectData","tradeData","cost_count","num_count","type","max_num_count","touchIndex","touchTime","select_index","sort_type","data_list","onLoad","CloseBy","find","getChildByName","getComponent","SetHandle","UpdateBagItem","bind","node","on","SelectItem","UpdateCardItem","children","concat","icon_1","icon_3","icon_4","push","EventType","TOUCH_END","onAddCost","onDelCost","TOUCH_CANCEL","TOUCH_START","onTouchStart","onSlideCost","onSlideNum","onCreate","btn","off","onPage","onShowSortNode","onCloseSortNode","forEach","index","isChecked","setCardSort","onItemChange","SetPage","$hasLoad","initSub","undefined","onShow","args","Hide","flush","active","SELL","BUY","string","parent","t","arg","indexOf","cur_page","datas","GetTradeAllData","GetResBySubType","setContentSize","data","GetTradeData","role_data","Item","item","count","card_data","BattleCard","card","JSON","parse","stringify","length","UpdateDatas","SelectFirst","i","element","setSelect","updateOrderInfo","stopAllByTarget","SetNodeGray","std","Getitem","id","ItemName","Remark","GetCard","cardId","CardName","SkillDesc","tradeCd","ServerTime","FormatTime","repeatForever","delay","call","start","LoadResAbSub","join","Currencies","toString","res","spriteFrame","setIsCanCreate","Show","GroupSize","GrouplimitMax","GrouplimitMin","_max_num_count","Math","floor","getLowestPrice","_highestPrice","getHighestPrice","enabled","onDelNum","onAddNum","progress","updateCostProgress","updateNumProgress","currency","GetItemCount","cfg","rate","Itemtpye","money","need_cost","callBack","orderData","orderType","itemId","itemGroup","price","totalPrice","Send","_tradeData","cardUnionId","CardID","quality","CardQuality","event","_lowestPrice","e","ceil","ToFixed","updateCount","progress_num","total_sell","server_cost","Fees","AddFees","bagItem","addComponent","setThing","cardItem","setCardEffectState","SetData","setCardTradeCd","update","dt","size","contentSize","width","SellGroupPriceMax","BuyGroupPriceMax","SellGroupPriceMin","BuyGroupPriceMin","onHide","iterator","car_cfg","ProfessionType","sort","a","b","a_car_cfg","b_car_cfg","CardRarity","ID"],"mappings":"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","sourcesContent":["import { Button, Input, Label, Node, Slider, Sprite, SpriteFrame, Toggle, Tween, UITransform, Widget, instantiate, path, size, sp, tween } from \"cc\";\r\nimport { Panel } from \"../../manager/GameRoot\";\r\nimport { AutoScroller } from \"../../component/AutoScroller\";\r\nimport { BagItem } from \"../bag/BagItem\";\r\nimport { SOrderType } from \"../player/PlayerStruct\";\r\nimport { CfgMgr, ItemType, StdMarketCard, StdMarketItem, ThingTypeName } from \"../../manager/CfgMgr\";\r\nimport { Second, Utils } from \"../../utils/Utils\";\r\nimport { PlayerData } from \"../player/PlayerData\";\r\nimport { ResMgr, folder_item } from \"../../manager/ResMgr\";\r\nimport { Tips2 } from \"../common/Tips2\";\r\nimport { Tips } from \"../common/Tips\";\r\nimport { Session } from \"../../net/Session\";\r\nimport { EventMgr, Evt_Item_Change } from \"../../manager/EventMgr\";\r\nimport proto, { Req, Route } from \"../../net/Protocol\";\r\nimport { Card } from \"../cards/Card\";\r\nimport { DateUtils } from \"../../utils/DateUtils\";\r\nimport { TopUI } from \"../main/TopUI\";\r\n\r\n\r\nexport class TradeCreateOrderPanel extends Panel {\r\n    protected prefab: string = \"prefabs/Trade/TradeCreateOrderPanel\";\r\n\r\n    private page: number;\r\n    private page1: Node;\r\n    private scroller1: AutoScroller;\r\n    private page2: Node;\r\n    private scroller2: AutoScroller;\r\n\r\n    private navBtns: Node[];\r\n    private scroller: AutoScroller;\r\n    private itemName: Label;\r\n    private cost_slider: Slider;\r\n    private cost_progress: Node;\r\n    private cost_consumeNum: Label;\r\n    private cost_hasNum: Label;\r\n\r\n    private num_slider: Slider;\r\n    private num_consumeNum: Label;\r\n    private num_hasNum: Label;\r\n    private num_progress: Node;\r\n\r\n    private description: Label;\r\n\r\n    private buyNum: Label;\r\n    private sellNum: Label;\r\n    private cost_num: Label;\r\n    private btnCreate: Button;\r\n    private buyNode: Node;\r\n    private sellNode: Node;\r\n    private num_slider_node: Node;\r\n    private num_left_btn: Node;\r\n    private num_right_btn: Node;\r\n    private orderNode: Node;\r\n    private noneListCont: Node;\r\n    private arry_num: Label;\r\n    private btnLabel: Label;\r\n    private cdTime: Label\r\n\r\n    private sortBtn: Node;\r\n    private sortNode: Node;\r\n    private sortNav: Node[];\r\n    private bg: Node;\r\n\r\n\r\n    private iconNode: Node[] = []\r\n\r\n    private Data: proto.base.IThing[];\r\n    private selectData: proto.base.IThing;\r\n\r\n    private tradeData: StdMarketItem | StdMarketCard;//交易商品配置\r\n    private cost_count = 0;\r\n    private num_count = 0;\r\n    private type: SOrderType;\r\n    private max_num_count: number;//最大交易数量；\r\n    private touchIndex = 0;\r\n    private touchTime = 0;\r\n\r\n    private select_index: number;\r\n    private sort_type = 0\r\n    private data_list: proto.base.IThing[] = [];\r\n\r\n    protected onLoad() {\r\n        this.CloseBy(\"mask\");\r\n        this.CloseBy(\"layout/closeBtn\");\r\n        this.bg = this.find(\"layout/orderNode/bg\");\r\n        this.page1 = this.find(\"layout/page1\");\r\n        this.scroller1 = this.page1.getChildByName(\"ScrollView\").getComponent(AutoScroller);\r\n        this.scroller1.SetHandle(this.UpdateBagItem.bind(this));\r\n        this.scroller1.node.on('select', this.SelectItem, this);\r\n\r\n        this.page2 = this.find(\"layout/page2\");\r\n        this.scroller2 = this.page2.getChildByName(\"ScrollView\").getComponent(AutoScroller);\r\n        this.scroller2.SetHandle(this.UpdateCardItem.bind(this));\r\n        this.scroller2.node.on('select', this.SelectItem, this);\r\n\r\n        this.orderNode = this.find(\"layout/orderNode\");\r\n        this.noneListCont = this.find(\"layout/noneListCont\");\r\n        this.itemName = this.find(\"layout/orderNode/name\", Label);\r\n        this.sellNum = this.find(\"layout/orderNode/sellNode/sellNum\", Label);\r\n        this.cost_num = this.find(\"layout/orderNode/sellNode/cost_num\", Label);\r\n        this.buyNum = this.find(\"layout/orderNode/buyNode/buyNum\", Label);\r\n        this.cost_slider = this.find(\"layout/orderNode/layout/page1/Slider\", Slider);\r\n        this.cost_progress = this.find(\"layout/orderNode/layout/page1/Slider/progress\");\r\n        this.cost_consumeNum = this.find(\"layout/orderNode/layout/page1/consumeNum\", Label);\r\n        this.cost_hasNum = this.find(\"layout/orderNode/layout/page1/hasNum\", Label);\r\n        this.num_slider_node = this.find(\"layout/orderNode/layout/page2\");\r\n        this.num_slider = this.find(\"layout/orderNode/layout/page2/Slider\", Slider);\r\n        this.num_progress = this.find(\"layout/orderNode/layout/page2/Slider/progress\");\r\n        this.num_consumeNum = this.find(\"layout/orderNode/layout/page2/consumeNum\", Label);\r\n        this.num_hasNum = this.find(\"layout/orderNode/layout/page2/hasNum\", Label);\r\n        this.btnCreate = this.find(\"layout/orderNode/btnCreate\", Button);\r\n        this.buyNode = this.find(\"layout/orderNode/buyNode\");\r\n        this.sellNode = this.find(\"layout/orderNode/sellNode\");\r\n        this.arry_num = this.find(\"layout/orderNode/arryNode/arry_num\", Label);\r\n        this.btnLabel = this.find(\"layout/orderNode/btnCreate/Label\", Label);\r\n        this.description = this.find(\"layout/orderNode/description\", Label);\r\n        this.cdTime = this.find(\"layout/orderNode/time\", Label)\r\n        this.sortBtn = this.find(\"layout/page2/sortBtn\")\r\n        this.sortNode = this.find(\"layout/sortNode\")\r\n        this.sortNav = this.find(\"layout/sortNode/bg/nav\").children.concat();\r\n        let icon_1 = this.find(\"layout/orderNode/sellNode/neddItem\");\r\n\r\n        let icon_3 = this.find(\"layout/orderNode/sellNode/neddItem2\");\r\n        let icon_4 = this.find(\"layout/orderNode/buyNode/neddItem\");\r\n        this.iconNode.push(icon_1);\r\n        this.iconNode.push(icon_3);\r\n        this.iconNode.push(icon_4);\r\n\r\n\r\n        this.num_left_btn = this.find(\"layout/orderNode/layout/page2/left\");\r\n        this.num_right_btn = this.find(\"layout/orderNode/layout/page2/right\");\r\n        this.find(\"layout/orderNode/layout/page1/right\").on(Input.EventType.TOUCH_END, this.onAddCost, this);\r\n        this.find(\"layout/orderNode/layout/page1/left\").on(Input.EventType.TOUCH_END, this.onDelCost, this);\r\n        this.find(\"layout/orderNode/layout/page1/right\").on(Input.EventType.TOUCH_CANCEL, this.onAddCost, this);\r\n        this.find(\"layout/orderNode/layout/page1/left\").on(Input.EventType.TOUCH_CANCEL, this.onDelCost, this);\r\n        this.find(\"layout/orderNode/layout/page1/right\").on(Input.EventType.TOUCH_START, () => { this.onTouchStart(1) }, this);\r\n        this.find(\"layout/orderNode/layout/page1/left\").on(Input.EventType.TOUCH_START, () => { this.onTouchStart(2) }, this);\r\n        this.cost_slider.node.on('slide', this.onSlideCost, this);\r\n        this.num_slider.node.on('slide', this.onSlideNum, this);\r\n        this.btnCreate.node.on(\"click\", this.onCreate, this)\r\n        this.navBtns = this.find(\"layout/nav\").children.concat();\r\n        for (let btn of this.navBtns) {\r\n            btn.off('toggle', this.onPage, this);\r\n            btn.on('toggle', this.onPage, this);\r\n        }\r\n        this.sortBtn.on(Input.EventType.TOUCH_END, this.onShowSortNode, this);\r\n        this.sortNode.on(Input.EventType.TOUCH_END, this.onCloseSortNode, this);\r\n        this.sortNav.forEach((node, index) => {\r\n            node.on(Input.EventType.TOUCH_END, () => {\r\n                node.getComponent(Toggle).isChecked = true;\r\n                this.sort_type = index;\r\n                this.setCardSort();\r\n            }, this)\r\n        })\r\n        EventMgr.on(Evt_Item_Change, this.onItemChange, this);\r\n    }\r\n    async SetPage(page: number) {\r\n        if (!this.$hasLoad) await this.initSub;\r\n        if (!this.navBtns[page]) return;\r\n        this.page = undefined;\r\n        this.navBtns[page].getComponent(Toggle).isChecked = true;\r\n        this.onPage(this.navBtns[page].getComponent(Toggle));\r\n    }\r\n    protected onShow(...args: any[]): void {\r\n        TopUI.Hide();\r\n        this.SetPage(0);\r\n        this.SelectItem(0, null);\r\n    }\r\n    public flush(...args: any[]): void {\r\n        this.type = args[0];\r\n        this.sellNode.active = this.type == SOrderType.SELL;\r\n        this.buyNode.active = this.type == SOrderType.BUY;\r\n        this.btnLabel.string = this.type == SOrderType.SELL ? \"上架\" : \"发布求购\"\r\n        this.sortNode.active = false;\r\n    }\r\n\r\n\r\n    protected onItemChange() {\r\n        if (!this.node.parent) return;\r\n        this.SetPage(this.page);\r\n    }\r\n\r\n\r\n\r\n    protected async onPage(t: Toggle, ...arg: any[]) {\r\n        if (!t.isChecked) return;\r\n        await Second(0)\r\n        let page = this.navBtns.indexOf(t.node);\r\n        if (page < 0 || page == this.page) return;\r\n        this.page = page;\r\n        this.page1.active = false;\r\n        this.page2.active = false;\r\n        this.num_slider_node.active = true;\r\n        let cur_page\r\n        let datas = []\r\n        this.num_left_btn.parent.active = true;\r\n        if (this.type == SOrderType.BUY) {\r\n            this.Data = CfgMgr.GetTradeAllData(this.page);\r\n        } else {\r\n            this.Data = PlayerData.GetResBySubType(page);\r\n        }\r\n        switch (page) {\r\n            case 0: // 道具\r\n            this.bg.getComponent(UITransform).setContentSize(496,234)\r\n                this.Data.forEach((data) => {\r\n                    if (this.type == SOrderType.BUY) {\r\n                        if (CfgMgr.GetTradeData(data)) {\r\n                            let role_data: proto.base.IThing = {\r\n                                type: ThingTypeName.Item,\r\n                                item: data.item,\r\n                            }\r\n                            datas.push(role_data)\r\n                        }\r\n                    } else {\r\n                        if (data.item.count > 0 && CfgMgr.GetTradeData(data)) {\r\n                            let role_data: proto.base.IThing = {\r\n                                type: ThingTypeName.Item,\r\n                                item: data.item,\r\n                            }\r\n                            datas.push(role_data)\r\n                        }\r\n                    }\r\n                });\r\n                this.Data = datas;\r\n                cur_page = this.page1\r\n                this.scroller = this.scroller1;\r\n                break;\r\n            case 1:\r\n                this.bg.getComponent(UITransform).setContentSize(496,186)\r\n                this.num_left_btn.parent.active = false;\r\n                this.Data.forEach((data) => {\r\n                    if (this.type == SOrderType.BUY) {\r\n                        if (CfgMgr.GetTradeData(data)) {\r\n                            let card_data: proto.base.IThing = {\r\n                                type: ThingTypeName.BattleCard,\r\n                                card: data.card,\r\n                            }\r\n                            datas.push(card_data)\r\n                        }\r\n                    } else {\r\n                        if (data.card && CfgMgr.GetTradeData(data)) {\r\n                            let card_data: proto.base.IThing = {\r\n                                type: ThingTypeName.BattleCard,\r\n                                card: data.card,\r\n                            }\r\n                            datas.push(card_data)\r\n                        }\r\n                    }\r\n                });\r\n                this.Data = datas;\r\n                this.data_list = JSON.parse(JSON.stringify(this.Data));//structuredClone(this.Data);\r\n                cur_page = this.page2\r\n                this.scroller = this.scroller2;\r\n                break;\r\n            default:\r\n                this.Data.length = 0;\r\n        }\r\n\r\n\r\n\r\n        if (!this.Data || this.Data.length == 0) {\r\n            this.orderNode.active = false;\r\n            cur_page.active = false;\r\n            this.noneListCont.active = true;\r\n            return;\r\n        } else {\r\n            this.orderNode.active = true;\r\n            cur_page.active = true;\r\n            this.noneListCont.active = false;\r\n        }\r\n        if (this.scroller && this.Data) {\r\n            this.scroller.UpdateDatas(this.Data);\r\n            if (this.Data.length) {\r\n                this.scroller.SelectFirst();\r\n            } else {\r\n                this.SelectItem(0, null);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 选中道具\r\n     * @param index \r\n     */\r\n    protected async SelectItem(index: number, item: Node) {\r\n        if (!this.$hasLoad) await this.initSub;\r\n        if (!this.Data || !this.Data[index]) return;\r\n        let type = this.Data[index].item ? 1 : 2\r\n        for (let i = 0; i < this.scroller.children.length; i++) {\r\n            const element = this.scroller.children[i];\r\n            if (type == 1) {\r\n                if (index == element[\"$$index\"]) {\r\n                    element.getChildByName(\"select\").active = true;\r\n                    this.select_index = element[\"$$index\"];\r\n                } else {\r\n                    element.getChildByName(\"select\").active = false;\r\n                }\r\n            } else if (type == 2) {\r\n                if (index == element[\"$$index\"]) {\r\n                    element.getComponent(Card).setSelect(true);\r\n                    this.select_index = element[\"$$index\"];\r\n                } else {\r\n                    element.getComponent(Card).setSelect(false);\r\n                }\r\n            }\r\n        }\r\n        let data = this.Data[index];\r\n        this.selectData = data;\r\n        this.max_num_count = 1;\r\n        if (data.item) {\r\n            this.max_num_count = data.item.count;\r\n        }\r\n        this.updateOrderInfo(data)\r\n    }\r\n\r\n    private updateOrderInfo(data: proto.base.IThing) {\r\n        Tween.stopAllByTarget(this.cdTime);\r\n        this.cdTime.node.active = false;\r\n        Utils.SetNodeGray(this.btnCreate.node, false)\r\n        if (data.item) {\r\n            let std = CfgMgr.Getitem(data.item.id);\r\n            this.itemName.string = std.ItemName;\r\n            this.description.string = std.Remark\r\n        } else if (data.card) {\r\n            let card = CfgMgr.GetCard(data.card.cardId);\r\n            this.itemName.string = card.CardName;\r\n            this.description.string = card.SkillDesc;\r\n            if (data.card.tradeCd - DateUtils.ServerTime > 0) {\r\n                Utils.SetNodeGray(this.btnCreate.node, true)\r\n                this.cdTime.string = `${DateUtils.FormatTime(data.card.tradeCd - DateUtils.ServerTime)}后可上架`;\r\n                this.cdTime.node.active = true;\r\n                tween(this.cdTime).repeatForever(tween().delay(1).call(() => {\r\n                    if (data.card.tradeCd - DateUtils.ServerTime > 0) {\r\n                        this.cdTime.string = `${DateUtils.FormatTime(data.card.tradeCd - DateUtils.ServerTime)}后可上架`;\r\n                    } else {\r\n                        this.cdTime.node.active = false;\r\n                        Utils.SetNodeGray(this.btnCreate.node, false)\r\n                        Tween.stopAllByTarget(this.cdTime);\r\n                    }\r\n                })).start();\r\n            }\r\n        }\r\n\r\n        this.tradeData = CfgMgr.GetTradeData(data);\r\n\r\n        for (let index = 0; index < this.iconNode.length; index++) {\r\n            const element = this.iconNode[index];\r\n            ResMgr.LoadResAbSub(path.join(folder_item,  this.tradeData.Currencies[0].toString(), \"spriteFrame\"), SpriteFrame, res=>{\r\n                element.getComponent(Sprite).spriteFrame = res\r\n            });\r\n        }\r\n        this.setIsCanCreate()\r\n    }\r\n\r\n    private setIsCanCreate() {\r\n        if (!this.tradeData) {\r\n            Tips2.Show(\"缺少配置\");\r\n            return;\r\n        }\r\n        let GroupSize = this.tradeData.GroupSize ? this.tradeData.GroupSize : 1\r\n        let GrouplimitMax = this.tradeData.GrouplimitMax ? this.tradeData.GrouplimitMax : 1\r\n        let GrouplimitMin = this.tradeData.GrouplimitMin ? this.tradeData.GrouplimitMin : 1\r\n\r\n        let _max_num_count = Math.floor(this.max_num_count / GroupSize)\r\n        this.max_num_count = _max_num_count > GrouplimitMax ? GrouplimitMax : _max_num_count;\r\n        if (this.type == SOrderType.BUY) {\r\n            this.max_num_count = GrouplimitMax;\r\n        }\r\n        this.arry_num.string = GroupSize + \"个\";\r\n        this.num_hasNum.string = \"/\" + this.max_num_count;\r\n        this.cost_count = this.getLowestPrice();\r\n        let _highestPrice = this.getHighestPrice();\r\n        this.cost_hasNum.string = \"/\" + _highestPrice / 10000;\r\n        this.num_count = GrouplimitMin > this.max_num_count ? 0 : GrouplimitMin;\r\n        if (this.max_num_count == 0) {\r\n            Utils.SetNodeGray(this.btnCreate.node, true)\r\n            this.btnCreate.enabled = false\r\n            this.num_slider.enabled = false;\r\n            this.num_left_btn.off(Input.EventType.TOUCH_END, this.onDelNum, this);\r\n            this.num_left_btn.off(Input.EventType.TOUCH_CANCEL, this.onDelNum, this);\r\n            this.num_left_btn.off(Input.EventType.TOUCH_START);\r\n            this.num_right_btn.off(Input.EventType.TOUCH_END, this.onAddNum, this);\r\n            this.num_right_btn.off(Input.EventType.TOUCH_CANCEL, this.onAddNum, this);\r\n            this.num_right_btn.off(Input.EventType.TOUCH_START);\r\n            this.num_slider.progress = 0;\r\n            this.sellNum.string = 0 + \"\";\r\n            this.cost_num.string = 0 + \"\";\r\n            return;\r\n        } else {\r\n            Utils.SetNodeGray(this.btnCreate.node, false)\r\n            this.btnCreate.enabled = true\r\n            this.num_slider.enabled = true;\r\n            this.num_left_btn.on(Input.EventType.TOUCH_END, this.onDelNum, this);\r\n            this.num_left_btn.on(Input.EventType.TOUCH_CANCEL, this.onDelNum, this);\r\n            this.num_left_btn.on(Input.EventType.TOUCH_START, () => { this.onTouchStart(4) }, this);\r\n            this.num_right_btn.on(Input.EventType.TOUCH_END, this.onAddNum, this);\r\n            this.num_right_btn.on(Input.EventType.TOUCH_CANCEL, this.onAddNum, this);\r\n            this.num_right_btn.on(Input.EventType.TOUCH_START, () => { this.onTouchStart(3) }, this);\r\n        }\r\n        this.updateCostProgress();\r\n        this.updateNumProgress();\r\n\r\n    }\r\n\r\n    private onCreate() {\r\n        if (this.type == SOrderType.BUY) {\r\n            let id = this.tradeData.Currencies[0]\r\n            let currency = PlayerData.GetItemCount(id);\r\n\r\n            let cfg = CfgMgr.Getitem(id)\r\n            let rate = 1\r\n            if (cfg.Itemtpye == ItemType.money) {\r\n                rate = 10000\r\n            }\r\n            let need_cost = this.cost_count / rate * this.num_count;\r\n            if (currency < need_cost) {\r\n                Tips.Show(\"货币不足\")\r\n                return;\r\n            }\r\n        } else {\r\n\r\n            if (this.tradeData.GrouplimitMin && this.num_count < this.tradeData.GrouplimitMin) {\r\n                Tips.Show(\"数量不可低于\" + this.tradeData.GrouplimitMin)\r\n                return;\r\n            }\r\n\r\n            if (this.num_count > this.max_num_count) {\r\n                Tips.Show(\"数量不足\")\r\n                return;\r\n            }\r\n        }\r\n        this.callBack();\r\n    }\r\n    private callBack() {\r\n        if (this.page == 0) {\r\n            if (this.type == SOrderType.SELL) {\r\n                let orderData = new Req[\"market.protocol.makeitemorder\"]();\r\n                orderData.orderType = \"sell\";\r\n                orderData.itemId = this.selectData.item.id;\r\n                orderData.itemGroup = this.num_count;\r\n                orderData.currency = this.tradeData.Currencies[0];\r\n                orderData.price = this.cost_count;\r\n                orderData.totalPrice = null;\r\n                Session.Send(Route[\"market.protocol.makeitemorder\"], orderData);\r\n\r\n            } else {\r\n                let orderData = new Req[\"market.protocol.makeitemorder\"]();\r\n                orderData.orderType = \"buy\";\r\n                orderData.itemId = this.selectData.item.id;\r\n                orderData.itemGroup = this.num_count;\r\n                orderData.currency = this.tradeData.Currencies[0];;\r\n                orderData.price = this.cost_count;\r\n                orderData.totalPrice = null;\r\n                Session.Send(Route[\"market.protocol.makeitemorder\"], orderData)\r\n            }\r\n        } else if (this.page == 1) {\r\n            let _tradeData = this.tradeData as StdMarketCard\r\n            if (this.type == SOrderType.SELL) {\r\n                let orderData = new Req[\"market.protocol.makecardsellorder\"]();\r\n                orderData.cardUnionId = this.selectData.card.id;\r\n                orderData.currency = this.tradeData.Currencies[0];\r\n                orderData.price = this.cost_count;\r\n                Session.Send(Route[\"market.protocol.makecardsellorder\"], orderData);\r\n\r\n            } else {\r\n                let orderData = new Req[\"market.protocol.makecardbuyorder\"]();\r\n                orderData.cardId = _tradeData.CardID\r\n                orderData.currency = _tradeData.Currencies[0];;\r\n                orderData.price = this.cost_count;\r\n                orderData.quality = _tradeData.CardQuality\r\n                Session.Send(Route[\"market.protocol.makecardbuyorder\"], orderData)\r\n            }\r\n        }\r\n\r\n    }\r\n    private onTouchStart(index: number) {\r\n        this.touchIndex = index;\r\n    }\r\n    private onAddCost(event?) {\r\n        if (!this.tradeData) return;\r\n        this.cost_count += 100;\r\n        let _highestPrice = this.getHighestPrice();\r\n        if (this.cost_count > _highestPrice) {\r\n            this.cost_count = _highestPrice;\r\n        }\r\n        this.updateCostProgress();\r\n        if (event) {\r\n            this.touchIndex = 0;\r\n            this.touchTime = 0;\r\n        }\r\n    }\r\n    private onDelCost(event?) {\r\n        if (!this.tradeData) return;\r\n        this.cost_count -= 100;\r\n        let _lowestPrice = this.getLowestPrice();\r\n        if (this.cost_count < _lowestPrice) {\r\n            this.cost_count = _lowestPrice;\r\n        }\r\n        this.updateCostProgress();\r\n        if (event) {\r\n            this.touchIndex = 0;\r\n            this.touchTime = 0;\r\n        }\r\n    }\r\n    private onSlideCost(e?: Slider) {\r\n        if (!this.tradeData) return;\r\n        let _highestPrice = this.getHighestPrice();\r\n        this.cost_count = Math.ceil(_highestPrice * (Math.ceil((this.cost_slider.progress * 100)) / 100));\r\n\r\n        let _lowestPrice = this.getLowestPrice();\r\n        if (this.cost_count <= _lowestPrice) {\r\n            this.cost_count = _lowestPrice;\r\n        }\r\n        this.touchIndex = 0;\r\n        this.touchTime = 0;\r\n        this.updateCostProgress();\r\n    }\r\n    private onAddNum(event?) {\r\n        if (!this.tradeData) return;\r\n        this.num_count++;\r\n        if (this.num_count > this.max_num_count) {\r\n            this.num_count = this.max_num_count\r\n        }\r\n        this.updateNumProgress();\r\n        if (event) {\r\n            this.touchIndex = 0;\r\n            this.touchTime = 0;\r\n        }\r\n    }\r\n    private onDelNum(event?) {\r\n        if (!this.tradeData) return;\r\n        this.num_count--;\r\n        if ((this.num_count < this.tradeData.GrouplimitMin) && (this.tradeData.GrouplimitMin <= this.max_num_count)) {\r\n            this.num_count = this.tradeData.GrouplimitMin;\r\n        }\r\n        if (this.max_num_count < this.tradeData.GrouplimitMin) {\r\n            this.num_count = 0;\r\n        }\r\n        this.updateNumProgress();\r\n        if (event) {\r\n            this.touchIndex = 0;\r\n            this.touchTime = 0;\r\n        }\r\n    }\r\n    private onSlideNum(e?: Slider) {\r\n        if (!this.tradeData) return;\r\n        this.num_count = Math.ceil(this.max_num_count * this.num_slider.progress);\r\n        if ((this.num_count < this.tradeData.GrouplimitMin) && (this.tradeData.GrouplimitMin <= this.max_num_count)) {\r\n            this.num_count = this.tradeData.GrouplimitMin;\r\n        }\r\n        if (this.max_num_count < this.tradeData.GrouplimitMin) {\r\n            this.num_count = 0;\r\n        }\r\n        this.touchIndex = 0;\r\n        this.touchTime = 0;\r\n        this.updateNumProgress();\r\n    }\r\n    private updateCostProgress() {\r\n        this.cost_consumeNum.string = Utils.ToFixed(this.cost_count / 10000, 2);\r\n        let _highestPrice = this.getHighestPrice();\r\n        this.cost_slider.progress = this.cost_count / _highestPrice;\r\n        this.updateCount();\r\n    }\r\n    private updateNumProgress() {\r\n        this.num_consumeNum.string = this.num_count + \"\";\r\n        let progress_num = this.tradeData.GrouplimitMin;\r\n        if (this.selectData) {\r\n            progress_num = this.num_count / this.max_num_count;\r\n        }\r\n        this.num_slider.progress = progress_num;\r\n        this.updateCount();\r\n    }\r\n    private updateCount() {\r\n        let total_sell = this.cost_count * this.num_count / 10000;\r\n        let server_cost = this.cost_count * this.num_count * this.tradeData.Fees / 10000 / 10000;\r\n        this.sellNum.string = Utils.ToFixed((total_sell - server_cost - this.tradeData.AddFees / 10000), 2);\r\n        this.cost_num.string = Utils.ToFixed(server_cost + this.tradeData.AddFees / 10000, 2);\r\n        this.buyNum.string = Utils.ToFixed(total_sell, 2);\r\n    }\r\n\r\n    private UpdateBagItem(item: Node, data: proto.base.IThing, index: number) {\r\n        item.getChildByName(\"select\").active = index == this.select_index;\r\n        let bagItem = item.getComponent(BagItem);\r\n        if (!bagItem) bagItem = item.addComponent(BagItem);\r\n        bagItem.setThing(data);\r\n    }\r\n\r\n    private UpdateCardItem(item: Node, data: proto.base.IThing, index: number) {\r\n        let cardItem = item.getComponent(Card);\r\n        if (!cardItem) cardItem = item.addComponent(Card);\r\n        cardItem.setSelect(index == this.select_index)\r\n        cardItem.setCardEffectState(false);\r\n        cardItem.SetData(data.card);\r\n        if (data.card.tradeCd - DateUtils.ServerTime > 0) {\r\n            cardItem.setCardTradeCd(true)\r\n        }\r\n        tween(item).repeatForever(tween().delay(1).call(() => {\r\n            if (data.card.tradeCd - DateUtils.ServerTime <= 0) {\r\n                cardItem.setCardTradeCd(false)\r\n                Tween.stopAllByTarget(item);\r\n            }\r\n        })).start();\r\n\r\n    }\r\n\r\n    private onShowSortNode() {\r\n        this.sortNode.active = true;\r\n    }\r\n\r\n    private onCloseSortNode() {\r\n        this.sortNode.active = false;\r\n    }\r\n\r\n    protected update(dt: number): void {\r\n        let size = this.cost_slider.node.getComponent(UITransform).contentSize;\r\n        this.cost_progress.getComponent(UITransform).setContentSize(this.cost_slider.progress * size.width, 12);\r\n        this.num_progress.getComponent(UITransform).setContentSize(this.num_slider.progress * size.width, 12);\r\n        if (this.touchIndex != 0) {\r\n            this.touchTime += dt;\r\n            if (this.touchTime >= 0.5) {\r\n                this.touchTime = 0.47;\r\n                switch (this.touchIndex) {\r\n                    case 1:\r\n                        this.onAddCost()\r\n                        break;\r\n                    case 2:\r\n                        this.onDelCost();\r\n                        break;\r\n                    case 3:\r\n                        this.onAddNum();\r\n                        break;\r\n                    case 4:\r\n                        this.onDelNum();\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**每组最高值 */\r\n    private getHighestPrice() {\r\n        let _highestPrice = 0\r\n        let _tradeData = this.tradeData\r\n        _highestPrice = this.type == 0 ? _tradeData.SellGroupPriceMax : _tradeData.BuyGroupPriceMax;\r\n        return _highestPrice;\r\n    }\r\n\r\n    /***每组最低值 */\r\n    private getLowestPrice() {\r\n        let _lowestPrice = 0\r\n        let _tradeData = this.tradeData\r\n        _lowestPrice = this.type == 0 ? _tradeData.SellGroupPriceMin : _tradeData.BuyGroupPriceMin;\r\n        return _lowestPrice;\r\n    }\r\n\r\n    protected onHide(...args: any[]) {\r\n        this.scroller = undefined;\r\n        this.Data = undefined;\r\n        TopUI.Show();\r\n    }\r\n\r\n\r\n    private setCardSort() {\r\n\r\n        if (this.sort_type != 0) {\r\n            this.Data = []\r\n            for (const iterator of this.data_list) {\r\n                let car_cfg = CfgMgr.GetCard(iterator.card.cardId)\r\n                if (car_cfg.ProfessionType == this.sort_type) {\r\n                    this.Data.push(iterator)\r\n                }\r\n            }\r\n            this.Data.sort((a: proto.base.IThing, b: proto.base.IThing) => {\r\n                let a_car_cfg = CfgMgr.GetCard(a.card.cardId)\r\n                let b_car_cfg = CfgMgr.GetCard(b.card.cardId)\r\n                if (a_car_cfg.CardRarity == b_car_cfg.CardRarity) {\r\n                    return a_car_cfg.ID - b_car_cfg.ID\r\n                }\r\n                return a_car_cfg.CardRarity - b_car_cfg.CardRarity\r\n            })\r\n        } else {\r\n            this.Data = this.data_list\r\n        }\r\n        this.scroller.UpdateDatas(this.Data);\r\n        if (this.Data.length) {\r\n            this.scroller.SelectFirst();\r\n        } else {\r\n            this.SelectItem(0, null);\r\n        }\r\n    }\r\n}\r\n"]}