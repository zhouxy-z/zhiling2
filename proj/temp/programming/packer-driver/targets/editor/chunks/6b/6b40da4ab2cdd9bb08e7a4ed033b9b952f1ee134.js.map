{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/utils/ObjectUtils.ts"],"names":["ObjectUtils","deepCopy","source","RegExp","result","Array","isArray","item","push","Map","forEach","val","key","set","isObjEqual","obj1","obj2","objType","data","Object","Error","keys","length","tempKeys","vala","valb"],"mappings":";;;iBAAaA,W;;;;;;;;;;;;;6BAAAA,W,GAAN,MAAMA,WAAN,CACP;AACI;AACJ;AACA;AACA;AAC0B,eAARC,QAAQ,CAAIC,MAAJ,EAAkB;AACpC,cAAI,OAAOA,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,KAAK,IAAzC,IAAiDA,MAAM,YAAYC,MAAvE,EAA+E;AAC3E,mBAAOD,MAAP;AACH;;AAED,cAAIE,MAAW,GAAG,IAAlB;;AACA,cAAIC,KAAK,CAACC,OAAN,CAAcJ,MAAd,CAAJ,EAA2B;AACvBE,YAAAA,MAAM,GAAG,EAAT;;AACA,iBAAK,IAAIG,IAAT,IAAiBL,MAAjB,EAAyB;AACrBE,cAAAA,MAAM,CAACI,IAAP,CAAY,KAAKP,QAAL,CAAcM,IAAd,CAAZ;AACH;AACJ,WALD,MAKO,IAAIL,MAAM,YAAYO,GAAtB,EAA2B;AAC9BL,YAAAA,MAAM,GAAG,IAAIK,GAAJ,EAAT;AACAP,YAAAA,MAAM,CAACQ,OAAP,CAAe,CAACC,GAAD,EAAMC,GAAN,KAAc;AACzBR,cAAAA,MAAM,CAACS,GAAP,CAAWD,GAAX,EAAgB,KAAKX,QAAL,CAAcU,GAAd,CAAhB;AACH,aAFD;AAGH,WALM,MAKA;AACHP,YAAAA,MAAM,GAAG,EAAT;;AACA,iBAAK,IAAIQ,GAAT,IAAgBV,MAAhB,EAAwB;AACpBE,cAAAA,MAAM,CAACQ,GAAD,CAAN,GAAc,KAAKX,QAAL,CAAcC,MAAM,CAACU,GAAD,CAApB,CAAd;AACH;AACJ;;AAED,iBAAOR,MAAP;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;;;AAC4B,eAAVU,UAAU,CAAIC,IAAJ,EAAYC,IAAZ,EAA4B;AAChD,gBAAMC,OAAO,GAAG,UAASC,IAAT,EAAc;AAC1B,gBAAGA,IAAI,YAAYC,MAAnB,EAA0B,OAAO,QAAP;AAC1B,gBAAGD,IAAI,YAAYb,KAAnB,EAA0B,OAAO,OAAP;AAC1B,mBAAO,IAAP;AACH,WAJD;;AAKA,cAAI,CAACY,OAAO,CAACF,IAAD,CAAR,IAAkB,CAACE,OAAO,CAACD,IAAD,CAA9B,EAAsC,MAAM,IAAII,KAAJ,CAAW,kBAAX,CAAN;AAEtC,cAAIH,OAAO,CAACF,IAAD,CAAP,KAAkBE,OAAO,CAACD,IAAD,CAA7B,EAAqC,MAAM,IAAII,KAAJ,CAAW,kBAAX,CAAN;AAErC,cAAID,MAAM,CAACE,IAAP,CAAYN,IAAZ,EAAkBO,MAAlB,KAA6BH,MAAM,CAACE,IAAP,CAAYL,IAAZ,EAAkBM,MAAnD,EAA2D,OAAO,KAAP;AAE3D,cAAIC,QAAQ,GAAGJ,MAAM,CAACE,IAAP,CAAY,EAAC,GAAGN,IAAJ;AAAU,eAAGC;AAAb,WAAZ,CAAf;;AAEA,eAAK,MAAMJ,GAAX,IAAkBW,QAAlB,EAA4B;AACxB,gBAAIN,OAAO,CAACF,IAAI,CAACH,GAAD,CAAL,CAAX,EAAwB;AACpB,qBAAO,KAAKE,UAAL,CAAgBC,IAAI,CAACH,GAAD,CAApB,EAA2BI,IAAI,CAACJ,GAAD,CAA/B,CAAP;AACH,aAFD,MAEO;AACH,kBAAIY,IAAI,GAAGT,IAAI,CAACH,GAAD,CAAf;AACA,kBAAIa,IAAI,GAAGT,IAAI,CAACJ,GAAD,CAAf;;AACA,kBAAGG,IAAI,CAACH,GAAD,CAAJ,KAAcI,IAAI,CAACJ,GAAD,CAArB,EAA2B;AACvB,uBAAO,KAAP;AACH;AACJ;AACJ;;AACD,iBAAO,IAAP;AACH;;AA/DL,O","sourcesContent":["export class ObjectUtils\r\n{\r\n    /**\r\n     * 深拷贝\r\n     * @param source 源数据\r\n     */\r\n    public static deepCopy<T>(source: T): T {\r\n        if (typeof source !== \"object\" || source === null || source instanceof RegExp) {\r\n            return source;\r\n        }\r\n\r\n        let result: any = null;\r\n        if (Array.isArray(source)) {\r\n            result = [];\r\n            for (let item of source) {\r\n                result.push(this.deepCopy(item));\r\n            }\r\n        } else if (source instanceof Map) {\r\n            result = new Map();\r\n            source.forEach((val, key) => {\r\n                result.set(key, this.deepCopy(val));\r\n            });\r\n        } else {\r\n            result = {};\r\n            for (let key in source) {\r\n                result[key] = this.deepCopy(source[key]);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 判断两个对象值是否全等\r\n     * @param obj1 \r\n     * @param obj2 \r\n     * @returns \r\n     */\r\n    public static isObjEqual<T>(obj1:T, obj2:T):boolean {\r\n        const objType = function(data){\r\n            if(data instanceof Object)return \"Object\";\r\n            if(data instanceof Array) return \"Array\";\r\n            return null;\r\n        }\r\n        if (!objType(obj1) || !objType(obj2)) throw new Error(`对比数据错误数据应该是对象或数组`);\r\n\r\n        if (objType(obj1) !== objType(obj2)) throw new Error(`对比数据错误数据类型不同不可对比`);\r\n\r\n        if (Object.keys(obj1).length !== Object.keys(obj2).length) return false;\r\n\r\n        let tempKeys = Object.keys({...obj1, ...obj2});\r\n\r\n        for (const key of tempKeys) {\r\n            if (objType(obj1[key])) {\r\n                return this.isObjEqual(obj1[key], obj2[key]);\r\n            } else {\r\n                let vala = obj1[key];\r\n                let valb = obj2[key];\r\n                if(obj1[key] !== obj2[key]){\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\n"]}