{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/friend/FriendIncomeListPanel.ts"],"names":["FriendIncomeListPanel","Input","Label","Panel","AutoScroller","prefab","incomeNum","ScrollView","pageLabel","left","right","noneListCont","maxPage","maxCount","curPage","pageSize","onLoad","CloseBy","find","getComponent","SetHandle","updateItem","bind","on","EventType","TOUCH_END","SendSessionView","onShow","flush","income","item","data","index","updateLayer","Math","ceil","total","string","active","income_records","length","UpdateDatas","onHide","args"],"mappings":";;;kHAOaA,qB;;;;;;;;;;;;;;;;;;;;;;;;;;;AAPgBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,K,OAAAA,K;;AAC3BC,MAAAA,K,iBAAAA,K;;AAGAC,MAAAA,Y,iBAAAA,Y;;;;;;;;;uCAGIJ,qB,GAAN,MAAMA,qBAAN;AAAA;AAAA,0BAA0C;AAAA;AAAA;AAAA,eACnCK,MADmC,GAClB,sCADkB;AAAA,eAGrCC,SAHqC;AAAA,eAIrCC,UAJqC;AAAA,eAKrCC,SALqC;AAAA,eAMrCC,IANqC;AAAA,eAOrCC,KAPqC;AAAA,eAQrCC,YARqC;AAAA,eASrCC,OATqC;AAAA,eAUrCC,QAVqC,GAUnB,CAVmB;AAAA,eAWrCC,OAXqC,GAWnB,CAXmB;AAAA,eAYrCC,QAZqC,GAYlB,CAZkB;AAAA;;AAanCC,QAAAA,MAAM,GAAS;AACrB,eAAKC,OAAL,CAAa,MAAb;AACA,eAAKA,OAAL,CAAa,gBAAb;AACA,eAAKN,YAAL,GAAoB,KAAKO,IAAL,CAAU,oBAAV,CAApB;AACA,eAAKZ,SAAL,GAAiB,KAAKY,IAAL,CAAU,4BAAV,EAAwChB,KAAxC,CAAjB;AACA,eAAKK,UAAL,GAAkB,KAAKW,IAAL,CAAU,kBAAV,EAA8BC,YAA9B;AAAA;AAAA,2CAAlB;AACA,eAAKZ,UAAL,CAAgBa,SAAhB,CAA0B,KAAKC,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAA1B;AACA,eAAKd,SAAL,GAAiB,KAAKU,IAAL,CAAW,oBAAX,EAAgChB,KAAhC,CAAjB;AACA,eAAKO,IAAL,GAAY,KAAKS,IAAL,CAAW,mBAAX,CAAZ;AACA,eAAKR,KAAL,GAAa,KAAKQ,IAAL,CAAW,oBAAX,CAAb,CATqB,CAUrB;;AACA,eAAKT,IAAL,CAAUc,EAAV,CAAatB,KAAK,CAACuB,SAAN,CAAgBC,SAA7B,EAAwC,MAAM;AAC1C,gBAAI,KAAKX,OAAL,GAAe,CAAnB,EAAsB;AAClB,mBAAKA,OAAL;AACA,mBAAKY,eAAL;AACH;AACJ,WALD;AAOA,eAAKhB,KAAL,CAAWa,EAAX,CAActB,KAAK,CAACuB,SAAN,CAAgBC,SAA9B,EAAyC,MAAM;AAC3C,iBAAKX,OAAL;;AACA,gBAAI,KAAKA,OAAL,IAAgB,KAAKF,OAAzB,EAAkC;AAC9B,mBAAKc,eAAL;AACH,aAFD,MAEO;AACH,mBAAKZ,OAAL;AACH;AACJ,WAPD;AAQH;;AAESa,QAAAA,MAAM,GAAS;AACrB,eAAKD,eAAL;AACH;;AAEU,cAALE,KAAK,CAACC,MAAc,GAAG,CAAlB,EAAsB,CAC7B;AACH;;AAEuB,cAAVR,UAAU,CAACS,IAAD,EAAaC,IAAb,EAAsCC,KAAtC,EAAqD,CACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAEON,QAAAA,eAAe,GAAG,CACtB;AACA;AACA;AACA;AACA;AACH;;AAEOO,QAAAA,WAAW,CAACF,IAAD,EAAuB;AACtC,eAAKlB,QAAL,GAAgBqB,IAAI,CAACC,IAAL,CAAUJ,IAAI,CAACK,KAAL,GAAa,KAAKrB,QAA5B,CAAhB;AACA,eAAKH,OAAL,GAAgB,KAAKC,QAAL,GAAgB,CAAhB,GAAqB,KAAKA,QAA1B,GAAqC,CAArD;AACA,eAAKL,SAAL,CAAe6B,MAAf,GAAwB,KAAKvB,OAAL,GAAe,GAAf,GAAqB,KAAKF,OAAlD;AACA,eAAKD,YAAL,CAAkB2B,MAAlB,GAA2B,KAA3B;;AACA,cAAG,CAACP,IAAI,CAACQ,cAAN,IAAwBR,IAAI,CAACQ,cAAL,CAAoBC,MAApB,IAA8B,CAAzD,EAA4D;AACxD,iBAAK7B,YAAL,CAAkB2B,MAAlB,GAA2B,IAA3B;AACH;;AACD,eAAK/B,UAAL,CAAgBkC,WAAhB,CAA4BV,IAAI,CAACQ,cAAjC;AACH;;AAESG,QAAAA,MAAM,CAAC,GAAGC,IAAJ,EAAuB;AACnC,eAAK7B,OAAL,GAAe,CAAf;AACH;;AAlG4C,O","sourcesContent":["import { Button, EventTouch, Input, Label, Node, Sprite, SpriteFrame, Toggle, UIOpacity, UITransform, instantiate, path, v3 } from \"cc\";\r\nimport { Panel } from \"../../manager/GameRoot\";\r\nimport { EventMgr } from \"../../manager/EventMgr\";\r\nimport { SIncomeRecordInfo, SIncomeRecords } from \"../player/PlayerStruct\";\r\nimport { AutoScroller } from \"../../component/AutoScroller\";\r\n\r\n\r\nexport class FriendIncomeListPanel extends Panel {\r\n    protected prefab: string = \"prefabs/friend/FriendIncomeListPanel\";\r\n\r\n    private incomeNum: Label\r\n    private ScrollView: AutoScroller\r\n    private pageLabel: Label;\r\n    private left: Node;\r\n    private right: Node;\r\n    private noneListCont:Node;\r\n    private maxPage: number;\r\n    private maxCount:number = 1;\r\n    private curPage: number = 1;\r\n    private pageSize: number = 5;\r\n    protected onLoad(): void {\r\n        this.CloseBy(\"mask\");\r\n        this.CloseBy(\"frame/closeBtn\");\r\n        this.noneListCont = this.find(\"frame/noneListCont\")\r\n        this.incomeNum = this.find(\"frame/incomeNode/incomeNum\", Label);\r\n        this.ScrollView = this.find(\"frame/ScrollView\").getComponent(AutoScroller);\r\n        this.ScrollView.SetHandle(this.updateItem.bind(this))\r\n        this.pageLabel = this.find(`frame/pageBg/Label`, Label);\r\n        this.left = this.find(`frame/pageBg/left`);\r\n        this.right = this.find(`frame/pageBg/right`);\r\n        // EventMgr.on(Evt_GetIncomeRecords, this.updateLayer, this);\r\n        this.left.on(Input.EventType.TOUCH_END, () => {\r\n            if (this.curPage > 1) {\r\n                this.curPage--;\r\n                this.SendSessionView();\r\n            }\r\n        })\r\n\r\n        this.right.on(Input.EventType.TOUCH_END, () => {\r\n            this.curPage++;\r\n            if (this.curPage <= this.maxPage) {\r\n                this.SendSessionView();\r\n            } else {\r\n                this.curPage--;\r\n            }\r\n        })\r\n    }\r\n\r\n    protected onShow(): void {\r\n        this.SendSessionView();\r\n    }\r\n\r\n    async flush(income: number = 0,) {\r\n        // this.incomeNum.string = ToFixed(income, 4) + \"\";\r\n    }\r\n\r\n    private async updateItem(item: Node, data: SIncomeRecordInfo, index: number) {\r\n        // let headItem:HeadItem = item.getChildByPath(\"frame/HeadItem\").addComponent(HeadItem);\r\n        // let income_bg = item.getChildByPath(\"frame/income_bg\")\r\n        // let player_name = item.getChildByPath(\"frame/player_name\").getComponent(Label);\r\n        // let friendNode = item.getChildByPath(\"frame/friendNode\")\r\n        // let incomeNum = item.getChildByPath(\"frame/incomeNode/lbl/incomeNum\").getComponent(Label);\r\n        // let year_time = item.getChildByPath(\"frame/incomeNode/timeNode/year_time\").getComponent(Label);\r\n        // let hours_time = item.getChildByPath(\"frame/incomeNode/timeNode/hours_time\").getComponent(Label);\r\n        // let incomeNode = item.getChildByPath(\"frame/incomeNode\")\r\n        // let viewInfo:SPlayerViewInfo = {player_id: data.player_id};\r\n        // headItem.SetData(viewInfo);\r\n\r\n        // income_bg.getComponent(UITransform).width = 430;\r\n        // friendNode.active = false;\r\n        // incomeNode.active = true;\r\n        // // icon.spriteFrame = await ResMgr.LoadResAbSub(path.join(folder_head_round, data.icon_url, \"spriteFrame\"), SpriteFrame);\r\n        // player_name.string = data.name\r\n        // incomeNum.string = ToFixed(data.amount, 4) + \"\";\r\n        // let datetime = DateUtils.TimestampToDate(data.timestamp * 1000)\r\n        // let m = parseInt(datetime[1]) < 10 ? `0${datetime[1]}` : `${datetime[1]}`;\r\n        // let d = parseInt(datetime[2]) < 10 ? `0${datetime[2]}` : `${datetime[2]}`;\r\n        // let h = parseInt(datetime[3]) < 10 ? `0${datetime[3]}` : `${datetime[3]}`;\r\n        // let min = parseInt(datetime[4]) < 10 ? `0${datetime[4]}` : `${datetime[4]}`;\r\n        // let s = parseInt(datetime[5]) < 10 ? `0${datetime[5]}` : `${datetime[5]}`;\r\n        // year_time.string = datetime[0] + \".\" + m + \".\" + d;\r\n        // hours_time.string = h + \":\" + min + \":\" + s;\r\n    }\r\n\r\n    private SendSessionView() {\r\n        // let data = {\r\n        //     type: MsgTypeSend.GetIncomeRecordsRequest,\r\n        //     data: { page: this.curPage, page_size: this.pageSize },\r\n        // }\r\n        // Session.Send(data);\r\n    }\r\n\r\n    private updateLayer(data: SIncomeRecords) {\r\n        this.maxCount = Math.ceil(data.total / this.pageSize);\r\n        this.maxPage =  this.maxCount > 0 ?  this.maxCount : 1;\r\n        this.pageLabel.string = this.curPage + \"/\" + this.maxPage;\r\n        this.noneListCont.active = false;\r\n        if(!data.income_records || data.income_records.length == 0 ){\r\n            this.noneListCont.active = true;\r\n        }\r\n        this.ScrollView.UpdateDatas(data.income_records);\r\n    }\r\n\r\n    protected onHide(...args: any[]): void {\r\n        this.curPage = 1;\r\n    }\r\n}"]}