{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/cards/CardTitleItem.ts"],"names":["CardTitleItem","Component","Label","Card","Utils","CfgMgr","titleLab","card","lock","isInit","data","titleStr","onLoad","node","getChildByPath","getComponent","addComponent","updateShow","SetData","id","active","SetNodeGray","string","stdCard","GetCard","cardId","CardName"],"mappings":";;;sHAMaA,a;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AANEC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,K,OAAAA,K;;AACjBC,MAAAA,I,iBAAAA,I;;AACAC,MAAAA,K,iBAAAA,K;;AAEAC,MAAAA,M,iBAAAA,M;;;;;;;;;+BAEIL,a,GAAN,MAAMA,aAAN,SAA4BC,SAA5B,CAAsC;AAAA;AAAA;AAAA,eACjCK,QADiC;AAAA,eAEjCC,IAFiC;AAAA,eAGjCC,IAHiC;AAAA,eAIjCC,MAJiC,GAIf,KAJe;AAAA,eAKjCC,IALiC;AAAA,eAMjCC,QANiC;AAAA;;AAO/BC,QAAAA,MAAM,GAAS;AACrB,eAAKN,QAAL,GAAgB,KAAKO,IAAL,CAAUC,cAAV,CAAyB,oBAAzB,EAA+CC,YAA/C,CAA4Db,KAA5D,CAAhB;AACA,eAAKK,IAAL,GAAY,KAAKM,IAAL,CAAUC,cAAV,CAAyB,OAAzB,EAAkCE,YAAlC;AAAA;AAAA,2BAAZ;AACA,eAAKR,IAAL,GAAY,KAAKK,IAAL,CAAUC,cAAV,CAAyB,MAAzB,CAAZ,CAHqB,CAIrB;;AACA,eAAKL,MAAL,GAAc,IAAd;AACA,eAAKQ,UAAL;AACH;;AAEDC,QAAAA,OAAO,CAACR,IAAD,EAAyBC,QAAzB,EAAkD;AACrD,eAAKD,IAAL,GAAYA,IAAZ;AACA,eAAKC,QAAL,GAAgBA,QAAhB;AACA,eAAKM,UAAL;AACH;;AAEOA,QAAAA,UAAU,GAAS;AACvB,cAAI,CAAC,KAAKR,MAAN,IAAgB,CAAC,KAAKC,IAA1B,EAAgC;;AAChC,cAAI,CAAC,KAAKA,IAAL,CAAUS,EAAf,EAAmB;AACf,iBAAKX,IAAL,CAAUY,MAAV,GAAmB,IAAnB;AACA;AAAA;AAAA,gCAAMC,WAAN,CAAkB,KAAKd,IAAL,CAAUM,IAA5B,EAAkC,IAAlC;AACH,WAHD,MAGO;AACH,iBAAKL,IAAL,CAAUY,MAAV,GAAmB,KAAnB;AACA;AAAA;AAAA,gCAAMC,WAAN,CAAkB,KAAKd,IAAL,CAAUM,IAA5B,EAAkC,KAAlC;AACH;;AACD,eAAKN,IAAL,CAAUW,OAAV,CAAkB,KAAKR,IAAvB;;AACA,cAAI,KAAKC,QAAT,EAAmB;AACf,iBAAKL,QAAL,CAAcgB,MAAd,GAAuB,KAAKX,QAA5B;AACH,WAFD,MAEO;AACH,gBAAIY,OAAgB,GAAG;AAAA;AAAA,kCAAOC,OAAP,CAAe,KAAKd,IAAL,CAAUe,MAAzB,CAAvB;AACA,iBAAKnB,QAAL,CAAcgB,MAAd,GAAuBC,OAAO,CAACG,QAA/B;AACH;AAEJ;;AAvCwC,O","sourcesContent":["import { Node, Component, Label } from \"cc\";\r\nimport { Card } from \"./Card\";\r\nimport { Utils } from \"../../utils/Utils\";\r\nimport { base } from \"../../net/proto/proto\";\r\nimport { CfgMgr, StdCard } from \"../../manager/CfgMgr\";\r\n\r\nexport class CardTitleItem extends Component {\r\n    private titleLab: Label;\r\n    private card: Card;\r\n    private lock: Node;\r\n    private isInit: boolean = false;\r\n    private data: base.IBattleCard;\r\n    private titleStr: string;\r\n    protected onLoad(): void {\r\n        this.titleLab = this.node.getChildByPath(\"titleCont/titleLab\").getComponent(Label);\r\n        this.card = this.node.getChildByPath(\"Cards\").addComponent(Card);\r\n        this.lock = this.node.getChildByPath(\"lock\");\r\n        //this.lockBtn = this.node.getChildByPath(\"lock\");\r\n        this.isInit = true;\r\n        this.updateShow();\r\n    }\r\n\r\n    SetData(data: base.IBattleCard, titleStr?: string): void {\r\n        this.data = data;\r\n        this.titleStr = titleStr;\r\n        this.updateShow();\r\n    }\r\n\r\n    private updateShow(): void {\r\n        if (!this.isInit || !this.data) return;\r\n        if (!this.data.id) {\r\n            this.lock.active = true;\r\n            Utils.SetNodeGray(this.card.node, true);\r\n        } else {\r\n            this.lock.active = false;\r\n            Utils.SetNodeGray(this.card.node, false);\r\n        }\r\n        this.card.SetData(this.data);\r\n        if (this.titleStr) {\r\n            this.titleLab.string = this.titleStr;\r\n        } else {\r\n            let stdCard: StdCard = CfgMgr.GetCard(this.data.cardId);\r\n            this.titleLab.string = stdCard.CardName;\r\n        }\r\n        \r\n    }\r\n\r\n   \r\n}"]}