{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/cards/CardGroupItem%20copy.ts"],"names":["CardGroupItem","Component","Label","path","Sprite","SpriteFrame","ResMgr","PlayerData","add","cardNode","bg","cardSpr","warning","nameLab","useLab","data","$loadSub","complete","hasLoad","onLoad","node","getChildByName","getChildByPath","getComponent","loadSub","thisObj","Promise","resolve","reject","SetData","active","string","name","size","url","join","LoadResAbSub","res","spriteFrame","id","battleCardGoupData","getData"],"mappings":"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","sourcesContent":["import { Button, Component, Input, Label, Node, path, sp, Sprite, SpriteFrame } from \"cc\";\r\nimport  base  from \"../../net/proto/BaseUtils\";\r\nimport { CfgMgr } from \"../../manager/CfgMgr\";\r\nimport { ResMgr } from \"../../manager/ResMgr\";\r\nimport { CardsPanel } from \"./CardsPanel\";\r\nimport { Second } from \"../../utils/Utils\";\r\nimport { PlayerData } from \"../player/PlayerData\";\r\n\r\nexport class CardGroupItem extends Component {\r\n    private add: Node;\r\n    private cardNode: Node;\r\n    private bg: Sprite;\r\n    private cardSpr: Sprite;\r\n    private warning: Node;\r\n    private nameLab: Label;\r\n    private useLab:Node;\r\n  \r\n\r\n    private data:any\r\n    protected $loadSub: Promise<any>;\r\n    protected complete: Function;\r\n    protected hasLoad = false;\r\n\r\n\r\n    protected onLoad(): void {\r\n        this.add = this.node.getChildByName(\"add\");\r\n        this.cardNode = this.node.getChildByName(\"cardNode\");\r\n        this.bg = this.node.getChildByPath(\"cardNode/bg\").getComponent(Sprite);\r\n        this.cardSpr = this.node.getChildByPath(\"cardNode/cardSpr\").getComponent(Sprite);\r\n        this.warning = this.node.getChildByPath(\"cardNode/warning\")\r\n        this.nameLab = this.node.getChildByPath(\"cardNode/nameLab\").getComponent(Label);\r\n        this.useLab = this.node.getChildByPath(\"cardNode/useLab\");\r\n  \r\n        this.hasLoad = true;\r\n        this.complete?.();\r\n    }\r\n\r\n    protected get loadSub() {\r\n        if (this.$loadSub) return this.$loadSub;\r\n        let thisObj = this;\r\n        this.$loadSub = new Promise((resolve, reject) => {\r\n            thisObj.complete = resolve;\r\n        });\r\n        return this.$loadSub;\r\n    }\r\n\r\n\r\n    /**\r\n     * 设置角色数据\r\n     * @param data \r\n     */\r\n    async SetData(data: base.IDeckAttrs) {\r\n        if (!this.hasLoad) await this.loadSub;\r\n        this.data = data;\r\n        this.add.active = false ;\r\n        this.cardNode.active = true;\r\n        if(typeof data == \"string\"){\r\n            this.add.active = true ;\r\n            this.cardNode.active = false;\r\n            return\r\n        }\r\n        this.nameLab.string = data.name;\r\n        this.warning.active = data.size < 12;\r\n        let url = data.size < 12 ? path.join(\"sheets/default/卡组红\", \"spriteFrame\") : path.join(\"sheets/default/卡组蓝\", \"spriteFrame\")\r\n        ResMgr.LoadResAbSub(url, SpriteFrame, res => {\r\n            this.bg.spriteFrame = res;\r\n        });\r\n        this.useLab.active = data.id == PlayerData.battleCardGoupData.id;\r\n    }\r\n\r\n    getData(){\r\n        return this.data\r\n    }\r\n\r\n  \r\n}"]}