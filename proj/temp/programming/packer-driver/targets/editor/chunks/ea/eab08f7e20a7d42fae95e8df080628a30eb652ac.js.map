{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/component/VList.ts"],"names":["RollView","CellInfo","_decorator","Component","Enum","instantiate","js","Layout","Mask","math","Node","NodeEventType","NodePool","Prefab","Rect","ScrollView","Size","UITransform","Vec2","Vec3","Widget","ccclass","property","LayoutType","ScrollDirection","SelectType","PullStateType","RollViewDir","VList","type","tooltip","visible","layoutType","LIST","scrollDirection","HORIZONTAL","VERTICAL","GRID","isOpenPullHeader","isOpenPullFooter","_rollView","_contentTrans","_cellCount","_cellInfos","_cellTempSize","Map","_cellTypeMap","createMap","_cellPoolMap","_visibleCellMap","_visibleInfoMap","_curSelectIndexList","_tempRollIndex","_tempSelectIndexList","_cellDefName","_cellDefSize","_isFirstUpdate","_frameNum","_isUpdateVisible","_isRecycleInvisible","_isRecountSize","_vec3Out","_curVisibleRect","_tempCellRect","_isInitVisible","_lastRollTime","_lastContPos","initVisible","updateCell","clickCell","selectCell","selectCondCheck","getCellName","getCellSize","updatePullHeader","updatePullFooter","onLoad","layout","node","getComponent","enabled","temps","cont","getChildByPath","contWidget","prefab","tempCells","push","length","destroyAllChildren","children","tempCell","index","parent","removeFromParent","name","contentSize","console","error","initRollView","onEnable","addEventListener","onDisable","removeEventListener","update","dt","updateRecountSize","updateVisible","updateInvisible","onDestroy","clear","view","getChildByName","viewTrans","addComponent","setAnchorPoint","initView","widget","isAlignTop","isAlignBottom","isAlignLeft","isAlignRight","top","paddingTop","bottom","paddingBottom","left","paddingLeft","right","paddingRight","layer","mask","Type","GRAPHICS_RECT","content","setPosition","ZERO","horizontal","vertical","on","EventType","SIZE_CHANGED","onViewSizeChange","SCROLL_BEGAN","onScrollBegan","SCROLLING","onScrolling","TOUCH_UP","onScrollTouchUp","SCROLL_ENDED","onScrollEnded","off","onCellClick","event","cell","target","cellInfo","getVisibleInfo","onSelect","emit","recycleInterval","isOutOfBoundary","currentPos","getScrollOffset","time","Date","now","deltaTime","rollDir","None","deltaX","x","deltaY","y","velocityX","velocityY","Math","abs","Right","Left","Up","Down","set","recycleInvisible","onCellSizeChange","log","isClick","result","lastCell","lastCallInfo","selectType","ToggleGroup","lastSelectIndex","isSelect","indexOf","splice","frameInterval","refreshVisible","refreshSize","stopAutoScroll","offset","updateLayou","notLineIsAlignCenter","width","setContentPosition","scrollToOffset","frame","origin","scrollToTop","scrollToTopLeft","maxOffset","getMaxScrollOffset","min","setUpdateVisibleFlag","force","updateListLayou","updateGridLayou","contentHeight","contentWidth","cellName","cellSize","get","height","spacingY","yMax","spacingX","xMax","maxRow","maxCol","floor","ceil","max","row","col","visibleCellInfos","getVisibleCellInfos","isAdd","intersects","pool","TOUCH_END","insertChild","position","isForce","resetVisibleRect","contSize","boundingBox","key","getBoundingBox","size","put","checkIndex","yMin","xMin","startIndex","endIndex","idx","info","sort","a","b","callPullHeader","isAction","progress","state","pullIndo","callPullFooter","isHeader","getVisibleCell","cellCount","count","resetPullState","rollView","scrollToIndex","timeInSecond","attenuated","selectIndex","getSelectIndex","visibleCellList","visibleCellMap","visibleCellInfoList","selectMultIndex","indexList","Toggle","getSelectMultIndex","vList","SCROLL_THRESHOLd","AUTO_Page_THRESHOLd","EPSILON","_tempVec2","_touchBeganPos","_touchEndPos","_isPullMoveHeader","_isPullMoveFooter","_isPullLockHeader","_isPullLockFooter","_pullHeaderProgress","_pullFooterProgress","_onTouchBegan","captureListeners","nodes","concat","isPageView","touch","getUILocation","_onTouchEnded","_onTouchCancelled","_onTouchMoved","rollTarget","getRollTarget","outOfBoundary","_getHowMuchOutOfBoundary","pullOffset","pullMultiple","LET_GO","GO_ON","CANCEL","cancelPullState","_hasNestedViewGroup","_stopPropagationIfTargetIsMe","_touchMoved","propagationStopped","_handleReleaseLogic","autoScrollToPage","_scrolling","_autoScrolling","_dispatchEvent","_startAutoScroll","deltaMove","flag","_topBoundary","_leftBoundary","LOCK","_bottomBoundary","_rightBoundary","_updateScrollBar","_autoScrollBraking","_isOutOfBoundary","cache","getLocation","subtract","getStartLocation","distance","bounceBackStarted","_startBounceBackIfNeeded","pageIndex","bounceBackAmount","_clampDelta","moveOffset","nextIndex","getDragPageNum","isScrollable","touchMoveVelocity","_calculateTouchMoveVelocity","isQuicklyScrollable","constructor","_name","_index","_isSelect","_frame","value"],"mappings":"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","sourcesContent":["import {_decorator, Component, Enum, Event, EventTouch, instantiate, js, Layout, Mask, math, Node, NodeEventType, NodePool, Prefab, Rect, ScrollView, Size, Touch, UITransform, Vec2, Vec3, Widget } from \"cc\";\r\nconst { ccclass, property} = _decorator;\r\n/**\r\n * 布局类型  \r\n */\r\nenum LayoutType {\r\n    /**\r\n     * 列表类型\r\n     */\r\n    LIST,\r\n    /**\r\n     * 网格类型\r\n     */\r\n    GRID\r\n}\r\n\r\n/**\r\n * 滚动方向  \r\n */\r\nenum ScrollDirection {\r\n    /**\r\n     * 垂直滚动\r\n     */\r\n    VERTICAL,\r\n    /**\r\n     * 水平滚动\r\n     */\r\n    HORIZONTAL\r\n}\r\n\r\n/**\r\n * 选择类型\r\n */\r\nenum SelectType {\r\n    /**\r\n     * 单选\r\n     */\r\n    ToggleGroup,\r\n    /**\r\n     * 多选\r\n     */\r\n    Toggle, \r\n}\r\n\r\n/**\r\n * 拉到尽头状态定义\r\n */\r\nexport enum PullStateType{\r\n    CANCEL,//取消\r\n    GO_ON,//继续\r\n    LET_GO,//松开\r\n    LOCK,//锁定中\r\n}\r\n\r\n/**\r\n * 拉到尽头回调信息\r\n*/\r\nexport interface PullMoreInfo{\r\n    isAction: boolean,//是否可获取\r\n    progress: number,//拉动比例\r\n    state: PullStateType,//拉动尽头状态\r\n}\r\n\r\n/**\r\n * 当前滚动方向\r\n */\r\nexport enum RollViewDir {\r\n    None,//无\r\n    Left,//往左滚动\r\n    Right,//往右滚动\r\n    Up,//往上滚动\r\n    Down,//往下滚动\r\n}\r\n\r\n@ccclass('VList')\r\nexport class VList extends Component {\r\n    @property({ \r\n        type: Enum(LayoutType), \r\n        tooltip: `布局类型：\\nLIST：列表布局（支持多Cell模板动态改变Size） \\nGRID：网格布局（支持多Cell模板，但必须要相同尺寸,不支持动态改变节点尺寸变化）` \r\n    }) \r\n    layoutType: LayoutType = LayoutType.LIST;\r\n\r\n    @property({ \r\n        type: Enum(ScrollDirection), \r\n        tooltip: `滚动方向：\\nVERTICAL：垂直滚动 \\nHORIZONTAL：水平滚动` \r\n    }) \r\n    scrollDirection: ScrollDirection = ScrollDirection.VERTICAL;\r\n\r\n    @property({ \r\n        tooltip: `不足一行时是否居中对齐`,\r\n        visible: function () {\r\n            return (this.layoutType == LayoutType.LIST && this.scrollDirection == ScrollDirection.HORIZONTAL);\r\n        }\r\n    }) \r\n    notLineIsAlignCenter: boolean = false;\r\n\r\n    @property({ \r\n        type: [Prefab], \r\n        tooltip: `Cell模板列表（不挂预制体则以节点方式挂cell在根部或者挂根节点view/content下）`,\r\n    }) \r\n    tempCells: Prefab[] = [];\r\n    \r\n    @property({\r\n        tooltip: `上边距`,\r\n    })\r\n    paddingTop: number = 0;\r\n\r\n    @property({\r\n        tooltip: `下边距`,\r\n    })\r\n    paddingBottom: number = 0;\r\n\r\n    @property({\r\n        tooltip: `左边距`,\r\n    })\r\n    paddingLeft: number = 0;\r\n\r\n    @property({\r\n        tooltip: `右边距`,\r\n    })\r\n    paddingRight: number = 0;\r\n\r\n    @property({\r\n        tooltip: `相邻节点之前的垂直距离`,\r\n        visible: function () {\r\n            return (this.layoutType == LayoutType.LIST && this.scrollDirection == ScrollDirection.VERTICAL) || (this.layoutType == LayoutType.GRID);\r\n        }\r\n    })\r\n    spacingY: number = 0;\r\n\r\n    @property({\r\n        tooltip: `相邻节点之前的水平距离`,\r\n        visible: function () {\r\n            return (this.layoutType == LayoutType.LIST && this.scrollDirection == ScrollDirection.HORIZONTAL) || (this.layoutType == LayoutType.GRID);\r\n        }\r\n    })\r\n    spacingX: number = 0;\r\n\r\n    @property({\r\n        type: Enum(SelectType), \r\n        tooltip: `节点选择类型\\nToggleGroup：单选\\nToggle：复选`,\r\n    })\r\n    selectType: SelectType = SelectType.ToggleGroup;\r\n\r\n    @property({ \r\n        tooltip: `多少帧刷新一次可见区域（有数据数据变更或者有尺寸变更时生效）` \r\n    })\r\n    frameInterval: number = 1;\r\n\r\n    @property({ \r\n        tooltip: `多少帧回收一次不可见区域（有数据数据变更或者有尺寸变更时生效）` \r\n    })\r\n    recycleInterval: number = 1;\r\n\r\n    @property({ \r\n        tooltip: \"是否开启翻页模式, 布局类型是List才生效，如果是网格类型翻页就用List嵌套Grid\", \r\n        visible: function () {\r\n            return this.layoutType == LayoutType.LIST\r\n        }\r\n    }) \r\n    isPageView: boolean = false;\r\n\r\n    @property({ tooltip: \"是否开启拉到头部尽头获取更多\" })\r\n    isOpenPullHeader: boolean = false;\r\n\r\n    @property({ tooltip: \"是否开启拉到尾部尽头获取更多\" })\r\n    isOpenPullFooter: boolean = false;\r\n\r\n    @property({ tooltip: \"拉到尽头时超过此偏移量会触发回调\",\r\n        visible: function() { return this.isOpenPullHeader || this.isOpenPullFooter; }\r\n    })\r\n    pullOffset: number = 200;\r\n\r\n    @property({ tooltip: \"拉到尽头时满足触发列表进度的倍数\",\r\n        visible: function () { return this.isOpenPullHeader || this.isOpenPullFooter; }\r\n    }) \r\n    pullMultiple: number = 2;\r\n\r\n    private _rollView: RollView;\r\n    private _contentTrans: UITransform;\r\n    private _cellCount: number = 0; //cell数量\r\n    private _cellInfos: CellInfo[] = null;\r\n    private _cellTempSize: Map<string, Size> = new Map(); //临时保存cell变化后的尺寸\r\n    private _cellTypeMap: {[key: string]: Node} = js.createMap(); //保存cell类型模板\r\n    private _cellPoolMap:  {[key: string]: NodePool} = js.createMap(); //保存cell类型池子\r\n    private _visibleCellMap: {[key: number]: Node} = js.createMap(); //可见节点信息\r\n    private _visibleInfoMap: {[key: number]: CellInfo} = js.createMap(); //可见节点信息\r\n    private _curSelectIndexList: number[]; //当前选中节点\r\n    private _tempRollIndex: number = -1; //临时记录列表未初始化滚动的下标\r\n    private _tempSelectIndexList: number[] = []; //临时记录列表未初始化选中列表\r\n    private _cellDefName: string; //默认cell名称\r\n    private _cellDefSize: Size; //默认cell尺寸\r\n    private _isFirstUpdate: boolean = true; //是否首次初始化列表\r\n    private _frameNum: number = 0; // 帧计数\r\n    private _isUpdateVisible: boolean = false; //当前帧是否需要更新可见节点  \r\n    private _isRecycleInvisible = false; // 当前帧是否需要回收不可见节点  \r\n    private _isRecountSize: boolean = false; //当前帧是否需要重新计算content尺寸  \r\n    private _vec3Out: Vec3 = new Vec3(); //用于输出cell矩形转换实际坐标\r\n    private _curVisibleRect: Rect = new Rect(); //用于获取当前显示区域矩形\r\n    private _tempCellRect: Rect = new math.Rect(); //用于获取cell矩形数据\r\n    private _isInitVisible: boolean = false;\r\n    private _lastRollTime: number = 0;//记录上次滚动时间\r\n    private _lastContPos: Vec2 = new Vec2(0, 0);//记录上次容器坐标\r\n    /**\r\n     * 初始化回调\r\n     */\r\n    public initVisible: () => void;\r\n    /**\r\n     * 渲染Cell回调\r\n     * @param cell 渲染节点\r\n     * @param cellInfo 节点数据\r\n     */\r\n    public updateCell: (cell: Node, cellInfo: CellInfo) => void;\r\n\r\n    /**\r\n     * 点击Cell回调\r\n     * @param cell 渲染节点\r\n     * @param cellInfo 节点数据\r\n     */\r\n    public clickCell: (cell: Node, cellInfo: CellInfo) => void;\r\n\r\n    /**\r\n     * 选中Cell回调\r\n     * @param cell 渲染节点\r\n     * @param cellInfo 节点数据\r\n     * @param lastCell 上次被选中的节点\r\n     * @param lastCell 上次被选中的节点数据\r\n     */\r\n    public selectCell: (cell: Node, cellInfo: CellInfo, lastCell?: Node, lastInfo?: CellInfo) => void;\r\n\r\n    /**\r\n     * 选中Cell条件检测回调\r\n     * @param cell 渲染节点\r\n     * @param cellInfo 节点数据\r\n     */\r\n    public selectCondCheck: (cell: Node, cellInfo: CellInfo) => boolean;\r\n\r\n    /**\r\n     * 获取Cell类型名字回调\r\n     * @param index cell下标\r\n     * @returns 渲染的节点名称\r\n     */\r\n    public getCellName:(index: number) => string = null;\r\n\r\n    /**\r\n     * 获取Cell尺寸\r\n     * @param index cell下标\r\n     * @returns 渲染的节点尺寸\r\n     */\r\n    public getCellSize:(cell: Node, index: number) => Size = null;\r\n\r\n    /**\r\n     * 拉到头部尽头回调\r\n     * @param pullInfo 尽头回调数据\r\n     */\r\n    public updatePullHeader: (pullInfo: PullMoreInfo) => void;\r\n\r\n    /**\r\n     * 拉到尾部部尽头回调\r\n     * @param pullInfo 尽头回调数据\r\n     */\r\n    public updatePullFooter: (pullInfo: PullMoreInfo) => void;\r\n\r\n    protected onLoad(): void {\r\n        let layout: Layout = this.node.getComponent(Layout);\r\n        if (layout) layout.enabled = false;\r\n        let temps: Node[] = [];\r\n        let cont: Node = this.node.getChildByPath(`view/content`) || this.node;\r\n        let contWidget: Widget = cont.getComponent(Widget);\r\n        if (contWidget) contWidget.enabled = false;\r\n        for (let prefab of this.tempCells) {\r\n            temps.push(instantiate(prefab));\r\n        }\r\n        if (temps.length > 0) {\r\n            cont.destroyAllChildren();\r\n        }else{\r\n            temps = cont.children;\r\n        }\r\n        let tempCell: Node;\r\n        for (let index = temps.length - 1; index >= 0; index--) {\r\n            //console.log(\"------>TempIndex\" + index)\r\n            tempCell = temps[index];\r\n            if(tempCell.parent) tempCell.removeFromParent();\r\n            if (!this._cellTypeMap[tempCell.name]) {\r\n                this._cellTypeMap[tempCell.name] = tempCell;\r\n                this._cellPoolMap[tempCell.name] = new NodePool();\r\n                this._cellDefName = this._cellDefName ?? tempCell.name;\r\n                this._cellDefSize = this._cellDefSize ?? tempCell.getComponent(UITransform).contentSize;\r\n            }else{\r\n                console.error(\"cell模板名字重复\");\r\n                return;\r\n            }\r\n        }\r\n        \r\n        this.initRollView();\r\n    }\r\n    \r\n    onEnable(): void {\r\n        this.addEventListener();\r\n    }\r\n\r\n    onDisable(): void {\r\n        this.removeEventListener();\r\n    }\r\n\r\n    update(dt: number): void {\r\n        this._frameNum++;\r\n        this.updateRecountSize(dt);\r\n        this.updateVisible(dt);\r\n        this.updateInvisible(dt);\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        this.removeEventListener();\r\n        this._cellCount = null;\r\n        this._cellInfos = null;\r\n        this._tempRollIndex = -1;\r\n        this._tempSelectIndexList = null;\r\n        this._cellTempSize.clear();\r\n        this._cellTempSize = null;\r\n        this._cellTypeMap = null;\r\n        this._cellPoolMap = null;\r\n        this._visibleCellMap = null;\r\n        this._visibleInfoMap = null;\r\n        this._curSelectIndexList = null;\r\n        this.updateCell = null;\r\n        this.clickCell = null;\r\n        this.selectCell = null;\r\n        this.selectCondCheck = null;\r\n        this.getCellName = null;\r\n        this.getCellSize = null;\r\n        this.updatePullHeader = null;\r\n        this.updatePullFooter = null;\r\n    }\r\n\r\n    private initRollView(): void {\r\n        let view: Node = this.node.getChildByName(`view`) || new Node(`view`);\r\n        let viewTrans: UITransform = view.getComponent(UITransform) || view.addComponent(UITransform);\r\n        viewTrans.setAnchorPoint(new Vec2(0.5, 0.5));\r\n        viewTrans.contentSize = this.node.getComponent(UITransform).contentSize;\r\n\r\n        this._rollView = view.addComponent(RollView);\r\n        this._rollView.initView(this);\r\n        \r\n        let widget: Widget = view.getComponent(Widget) || view.addComponent(Widget);\r\n        widget.isAlignTop = true, widget.isAlignBottom = true, widget.isAlignLeft = true, widget.isAlignRight = true,\r\n        widget.top = this.paddingTop, widget.bottom = this.paddingBottom, widget.left = this.paddingLeft, widget.right = this.paddingRight,\r\n        view.parent = this.node;\r\n        view.layer = this.node.layer;\r\n\r\n        let mask: Mask = view.getComponent(Mask) || view.addComponent(Mask);\r\n        mask.type = Mask.Type.GRAPHICS_RECT;\r\n\r\n        let content: Node = view.getChildByName(`content`) || new Node(`content`);\r\n        content.setPosition(Vec3.ZERO);\r\n        this._contentTrans = content.getComponent(UITransform) || content.addComponent(UITransform);\r\n        this._contentTrans.setAnchorPoint(new Vec2(0.5, 0.5));\r\n        this._contentTrans.contentSize = viewTrans.contentSize;\r\n        content.parent = view;\r\n        content.layer = content.parent.layer;\r\n        let layout: Layout = content.getComponent(Layout);\r\n        if (layout) layout.enabled = false;\r\n\r\n        this._rollView.content = content;\r\n        if (this.scrollDirection == ScrollDirection.VERTICAL){\r\n            this._rollView.horizontal = false;\r\n            this._rollView.vertical = true;\r\n        } else {\r\n            this._rollView.horizontal = true;\r\n            this._rollView.vertical = false;\r\n        }\r\n        //console.log(\"初始化列表完毕\")\r\n    }\r\n\r\n    private addEventListener(): void {\r\n        this._rollView.view.node.on(Node.EventType.SIZE_CHANGED, this.onViewSizeChange, this);\r\n        this._rollView.view.node.on(ScrollView.EventType.SCROLL_BEGAN, this.onScrollBegan, this);\r\n        this._rollView.view.node.on(ScrollView.EventType.SCROLLING, this.onScrolling, this);\r\n        this._rollView.view.node.on(ScrollView.EventType.TOUCH_UP, this.onScrollTouchUp, this);\r\n        this._rollView.view.node.on(ScrollView.EventType.SCROLL_ENDED, this.onScrollEnded, this);\r\n    }\r\n\r\n    private removeEventListener(): void {\r\n        this._rollView.view.node.off(Node.EventType.SIZE_CHANGED, this.onViewSizeChange, this);\r\n        this._rollView.view.node.off(ScrollView.EventType.SCROLL_BEGAN, this.onScrollBegan, this);\r\n        this._rollView.view.node.off(ScrollView.EventType.SCROLLING, this.onScrolling, this);\r\n        this._rollView.view.node.off(ScrollView.EventType.TOUCH_UP, this.onScrollTouchUp, this);\r\n        this._rollView.view.node.off(ScrollView.EventType.SCROLL_ENDED, this.onScrollEnded, this);\r\n    }\r\n\r\n    private onCellClick(event: EventTouch): void {\r\n        let cell: Node = event.target as Node;\r\n        let cellInfo: CellInfo = this.getVisibleInfo(cell.name);\r\n        if (!cellInfo) return;\r\n        this.onSelect(cellInfo, cell, true);\r\n    }\r\n    /**\r\n     * view节点尺寸变化\r\n     */\r\n    private onViewSizeChange(): void {\r\n        this._isRecountSize = true;\r\n        //this._isUpdateVisible = true;\r\n        //if (this.recycleInterval > 0) this._isRecycleInvisible = true;\r\n    }\r\n\r\n    private onScrollBegan(): void {\r\n        this.node.emit(ScrollView.EventType.SCROLL_BEGAN);\r\n    }\r\n\r\n    private onScrolling(): void {\r\n        this._isUpdateVisible = true;\r\n        if (this.recycleInterval > 0 && !this._rollView.isOutOfBoundary) this._isRecycleInvisible = true;\r\n        let currentPos: Vec2 = this._rollView.getScrollOffset();\r\n        let time: number = Date.now();\r\n        let deltaTime: number = (time - this._lastRollTime) / 1000;\r\n        let rollDir: RollViewDir = RollViewDir.None;\r\n        if (deltaTime > 0) {\r\n            let deltaX: number = currentPos.x - this._lastContPos.x;\r\n            let deltaY: number = currentPos.y - this._lastContPos.y;\r\n            let velocityX: number = deltaX / deltaTime;\r\n            let velocityY: number = deltaY / deltaTime;\r\n            \r\n            // 判断主要滚动方向\r\n            if (Math.abs(velocityX) > Math.abs(velocityY)) {\r\n                if (velocityX > 0) {\r\n                    rollDir = RollViewDir.Right;\r\n                } else {\r\n                    rollDir = RollViewDir.Left;\r\n                }\r\n            } else {\r\n                if (velocityY > 0) {\r\n                    rollDir = RollViewDir.Up;\r\n                } else {\r\n                    rollDir = RollViewDir.Down;\r\n                }\r\n            }\r\n        }\r\n        this._lastContPos.set(currentPos);\r\n        this._lastRollTime = time;\r\n\r\n        \r\n        this.node.emit(ScrollView.EventType.SCROLLING, rollDir, this._rollView.isOutOfBoundary);\r\n    }\r\n\r\n    private onScrollTouchUp(): void {\r\n        this.recycleInvisible();\r\n        this.node.emit(ScrollView.EventType.SCROLL_ENDED);\r\n    }\r\n\r\n    private onScrollEnded(): void {\r\n        this.recycleInvisible();\r\n        this.node.emit(ScrollView.EventType.SCROLL_ENDED);\r\n    }\r\n\r\n    private onCellSizeChange(cell: Node): void {\r\n        this._cellTempSize.set(cell.name, cell.getComponent(UITransform).contentSize);\r\n        this._isRecountSize = true;\r\n        console.log(\"Size------>\" + cell.name);\r\n    }\r\n\r\n    private onSelect(cellInfo: CellInfo, cell?: Node, isClick: boolean = false): void {\r\n        isClick && this.clickCell?.(cell, cellInfo);\r\n\r\n        let result: boolean = true;\r\n        if (this.selectCondCheck != null){\r\n            result = this.selectCondCheck(cell, cellInfo);\r\n        }\r\n        if (!result) return;\r\n        let lastCell: Node;\r\n        let lastCallInfo: CellInfo;\r\n        if (this.selectType == SelectType.ToggleGroup) {\r\n            let lastSelectIndex: number = this._curSelectIndexList[0];\r\n            if (lastSelectIndex > -1 && lastSelectIndex != cellInfo.index && lastSelectIndex < this._cellInfos.length) {\r\n                this._curSelectIndexList = [];\r\n                lastCallInfo = this._cellInfos[lastSelectIndex];\r\n                lastCallInfo.isSelect = false;\r\n                lastCell = this._visibleCellMap[lastCallInfo.index];\r\n            } \r\n            cellInfo.isSelect = true;\r\n            this._curSelectIndexList[0] = cellInfo.index;\r\n        } else {\r\n            let index: number = this._curSelectIndexList.indexOf(cellInfo.index);\r\n            if (index > -1) {\r\n                cellInfo.isSelect = false;\r\n                this._curSelectIndexList.splice(index, 1);\r\n            } else {\r\n                cellInfo.isSelect = true;\r\n                this._curSelectIndexList.push(cellInfo.index);\r\n            }\r\n        }\r\n       \r\n        this.selectCell?.(cell, cellInfo, lastCell, lastCallInfo);\r\n    }\r\n\r\n    /**\r\n     * 更新可见区域\r\n     */\r\n    private updateVisible(dt: number): void {\r\n        if (!this._isUpdateVisible) return;\r\n        if ((this.frameInterval <= 1) || (this._frameNum % this.frameInterval == 0)) {\r\n            this.refreshVisible();\r\n            return;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新不可见区域\r\n     */\r\n    private updateInvisible(dt: number): void {\r\n        if (this._isRecycleInvisible == false) return ;\r\n        if ((this.recycleInterval >= 1) && (this._frameNum % this.recycleInterval == 0)) {\r\n            this.recycleInvisible();\r\n            return;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新重新计算尺寸\r\n     * @param dt \r\n     * @returns \r\n     */\r\n    private updateRecountSize(dt: number): void {\r\n        if (!this._isRecountSize) return;\r\n        this.refreshSize();\r\n    }\r\n    \r\n    /**\r\n     * 重置列表尺寸\r\n     */\r\n    private refreshSize(): void {\r\n        this._isRecountSize = false;\r\n        this._rollView.stopAutoScroll();\r\n        this.recycleInvisible(true);\r\n        //记录偏移\r\n        let offset: Vec2 = this._rollView.getScrollOffset();\r\n        offset.x = -offset.x;\r\n\r\n        this.updateLayou();\r\n        if(this.notLineIsAlignCenter && this._contentTrans.width < this._rollView.view.width) {\r\n            this._rollView.setContentPosition(new Vec3(0,0,0));//列表横向布局时不足一行居中\r\n        } else {\r\n            let cellInfo: CellInfo = this._tempRollIndex != -1 ? this._cellInfos[this._tempRollIndex] : null;\r\n            this._tempRollIndex = -1;\r\n            if (cellInfo) {\r\n                this._rollView.scrollToOffset(cellInfo.frame.origin);\r\n            } else {\r\n                if (this._isFirstUpdate) {\r\n                    //初始位置\r\n                    this.scrollDirection == ScrollDirection.VERTICAL ? this._rollView.scrollToTop() : this._rollView.scrollToTopLeft();\r\n                } else {\r\n                    //恢复偏移\r\n                    let maxOffset: Vec2 = this._rollView.getMaxScrollOffset();\r\n                    Vec2.min(offset, offset, maxOffset);\r\n                    this._rollView.scrollToOffset(offset);\r\n                }\r\n            }\r\n            \r\n        }\r\n        \r\n        this.setUpdateVisibleFlag(true);\r\n        this._isFirstUpdate = false;\r\n    }\r\n\r\n    /**\r\n     * 设置可见/不可见更新标记\r\n     * @param force 是否强制刷新  \r\n     */\r\n    private setUpdateVisibleFlag(force: boolean = false): void {\r\n        if (force) {\r\n            this.refreshVisible();\r\n            this.recycleInvisible();\r\n            return\r\n        }\r\n        this._isUpdateVisible = true;\r\n        this._isRecycleInvisible = true;\r\n    }\r\n\r\n    /**\r\n     *更新布局\r\n     */\r\n    private updateLayou(): void { \r\n        this._cellInfos = [];\r\n        if (this.layoutType == LayoutType.LIST) {\r\n            this.updateListLayou();\r\n        } else {\r\n            this.updateGridLayou();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新列表布局\r\n     */\r\n    private updateListLayou(): void {\r\n        let contentHeight: number = 0;\r\n        let contentWidth: number = 0;\r\n        let cellInfo: CellInfo;\r\n        let cellName: string;\r\n        let cell: Node;\r\n        let cellSize: Size;\r\n        for (let index = 0; index < this._cellCount; index++) {\r\n            cellName = this.getCellName?.(index) ?? this._cellDefName;\r\n            cell = this._cellTypeMap[cellName];\r\n            cellInfo = new CellInfo();\r\n            cellInfo.name = cellName;\r\n            cellInfo.index = index;\r\n            cellInfo.isSelect = this._tempSelectIndexList.indexOf(index) > -1 ? true : false;\r\n            cellSize = this._cellTempSize.get(cellInfo.cellName) ?? this.getCellSize?.(cell, index) ?? cell.getComponent(UITransform).contentSize;\r\n            cellInfo.frame.width = cellSize.width;\r\n            cellInfo.frame.height = cellSize.height;\r\n            if (this.scrollDirection == ScrollDirection.VERTICAL) {\r\n                cellInfo.frame.x = this._rollView.view.width * 0.5 - cellSize.width * 0.5;\r\n                cellInfo.frame.y = contentHeight + (cellInfo.index > 0 ? this.spacingY : 0);\r\n                contentHeight = cellInfo.frame.yMax;\r\n                contentWidth = this._rollView.view.width;\r\n            } else {\r\n                cellInfo.frame.x = contentWidth + (cellInfo.index > 0 ? this.spacingX : 0);\r\n                cellInfo.frame.y = this._rollView.view.height * 0.5 - cellSize.height * 0.5;\r\n                contentHeight = this._rollView.view.height;\r\n                contentWidth = cellInfo.frame.xMax;\r\n            }\r\n            this._cellInfos[index] = cellInfo;\r\n        }\r\n        \r\n        this._contentTrans.contentSize = new Size(contentWidth, contentHeight);\r\n    }\r\n\r\n    /**\r\n     * 更新网格布局\r\n     */\r\n    private updateGridLayou(): void {\r\n        let contentHeight: number = 0;\r\n        let contentWidth: number = 0;\r\n        let maxRow: number = 0;\r\n        let maxCol: number = 0;\r\n        if (this.scrollDirection == ScrollDirection.VERTICAL) {\r\n            maxCol = Math.floor((this._rollView.view.width +  this.spacingX) / (this._cellDefSize.width + this.spacingX));\r\n            maxRow = Math.ceil(this._cellCount / maxCol);\r\n            contentWidth = this._rollView.view.width;\r\n            contentHeight = maxRow * (this._cellDefSize.height + this.spacingY) - this.spacingY;\r\n        }else{\r\n            maxRow = Math.floor((this._rollView.view.height + this.spacingY) / (this._cellDefSize.height + this.spacingY));\r\n            maxCol = Math.ceil(this._cellCount / maxRow);\r\n            contentWidth = maxCol * (this._cellDefSize.width + this.spacingX) - this.spacingX;\r\n            contentHeight = this._rollView.view.height;\r\n        }\r\n        \r\n        this._contentTrans.contentSize = new Size(Math.max(contentWidth, this._rollView.view.width), Math.max(contentHeight, this._rollView.view.height));\r\n        let row: number;\r\n        let col: number;\r\n        let cellInfo: CellInfo;\r\n        for (let index = 0; index < this._cellCount; index++) {\r\n            if (this.scrollDirection == ScrollDirection.VERTICAL) {\r\n                row = Math.floor(index / maxCol);\r\n                col = index % maxCol;\r\n            }else{\r\n                col = Math.floor(index / maxRow);\r\n                row = index % maxRow;\r\n            }\r\n            cellInfo = new CellInfo();\r\n            cellInfo.name = this._cellDefName;\r\n            cellInfo.index = index;\r\n            cellInfo.isSelect = this._tempSelectIndexList.indexOf(index) > -1 ? true : false;\r\n            cellInfo.frame.x = (this._cellDefSize.width + this.spacingX) * col;\r\n            cellInfo.frame.y = (this._cellDefSize.height + this.spacingY) * row;\r\n            cellInfo.frame.width = this._cellDefSize.width;\r\n            cellInfo.frame.height = this._cellDefSize.height;\r\n            this._cellInfos.push(cellInfo);\r\n        }\r\n        \r\n    }\r\n\r\n    /**\r\n     * 刷新可见节点\r\n     */\r\n    private refreshVisible(): void {\r\n        this._isUpdateVisible = false;\r\n        let visibleCellInfos: CellInfo[] = this.getVisibleCellInfos();\r\n        let cellInfo: CellInfo;\r\n        let cell: Node;\r\n        let isAdd: boolean;\r\n        for (let index = 0; index < visibleCellInfos.length; index++) {\r\n            cellInfo = visibleCellInfos[index];\r\n            if (!this._curVisibleRect.intersects(cellInfo.frame)) continue;\r\n            cell = this._visibleCellMap[cellInfo.index];\r\n            isAdd = false;\r\n            if(!cell){\r\n                isAdd = true;\r\n                let pool: NodePool = this._cellPoolMap[cellInfo.name];\r\n                cell = pool.get();\r\n                if (cell == null) {\r\n                    cell = instantiate(this._cellTypeMap[cellInfo.name]);\r\n                }\r\n                \r\n            }\r\n            cell.off(NodeEventType.TOUCH_END, this.onCellClick, this);\r\n            cell.on(NodeEventType.TOUCH_END, this.onCellClick, this);\r\n            //cell.off(NodeEventType.SIZE_CHANGED, this._onCellSizeChange , this);\r\n            cell.name = cellInfo.cellName;\r\n            cell.getComponent(UITransform).contentSize = new Size(cellInfo.frame.width, cellInfo.frame.height);\r\n            if (cell.parent != this._rollView.content) {\r\n                this._rollView.content.insertChild(cell, index);\r\n                cell.layer = cell.parent.layer;\r\n                this._vec3Out.x = - (this._contentTrans.contentSize.width - cellInfo.frame.width) * 0.5 + cellInfo.frame.x;\r\n                this._vec3Out.y = + (this._contentTrans.contentSize.height - cellInfo.frame.height) * 0.5 - cellInfo.frame.y;\r\n                cell.position = this._vec3Out;\r\n                //console.log(\"显示----->\" + cell.name + \"------->\" + cell.position.x);\r\n            }\r\n           \r\n            if (isAdd) {\r\n                this._visibleCellMap[cellInfo.index] = cell;\r\n                this._visibleInfoMap[cellInfo.index] = cellInfo;\r\n                this.updateCell?.(cell, cellInfo);\r\n                \r\n            };\r\n            \r\n        }\r\n\r\n        if (this._tempSelectIndexList.length) {\r\n            let cellInfo: CellInfo;\r\n            let cell: Node;\r\n            for (let index of this._tempSelectIndexList) {\r\n                cellInfo = this._cellInfos[index];\r\n                if (!cellInfo) continue;\r\n                cell = this._visibleCellMap[cellInfo.index];\r\n                this.onSelect(cellInfo, cell);\r\n            }\r\n            this._tempSelectIndexList.length = 0;\r\n        }\r\n        if (this._isInitVisible) {\r\n            this._isInitVisible = false;\r\n            this.initVisible?.();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 回收不可见节点\r\n     * @param isForce 是否强制回收\r\n     */\r\n    private recycleInvisible(isForce: boolean = false): void {\r\n        this._isRecycleInvisible = false;\r\n        this.resetVisibleRect();\r\n        let contSize: Size = this._contentTrans.contentSize;\r\n        let boundingBox: Rect;\r\n        let pool: NodePool;\r\n        let cellInfo: CellInfo;\r\n        let cell: Node;\r\n        for (let key in this._visibleCellMap) {\r\n            cell = this._visibleCellMap[key];\r\n            boundingBox = cell.getComponent(UITransform).getBoundingBox();\r\n            this._tempCellRect.size = boundingBox.size;\r\n            this._tempCellRect.x = (contSize.width - this._tempCellRect.width) * 0.5 + cell.position.x;\r\n            this._tempCellRect.y = (contSize.height - this._tempCellRect.height) * 0.5 - cell.position.y;\r\n            if (isForce || !this._curVisibleRect.intersects(this._tempCellRect)) {\r\n                //console.log(\"回收----->\" + value.name);\r\n                cell.off(NodeEventType.TOUCH_END, this.onCellClick, this);\r\n                cellInfo = this._visibleInfoMap[key];\r\n                pool = this._cellPoolMap[cellInfo.name];\r\n                pool.put(cell);\r\n                delete this._visibleCellMap[key];\r\n                delete this._visibleInfoMap[key];\r\n            }\r\n        }\r\n        \r\n        \r\n    }\r\n    \r\n    /**\r\n     * 根据可视范围获取可见cellInfo列表\r\n     * @returns \r\n     */\r\n    private getVisibleCellInfos(): CellInfo[] {\r\n        this.resetVisibleRect();\r\n        let result: CellInfo[] = [];\r\n        let checkIndex: number = -1;\r\n        let left: number = 0;\r\n        let right: number = this._cellInfos.length - 1;\r\n        let index: number;\r\n        let cellInfo: CellInfo;\r\n        //根据当前容器位置，用二分叉查找法找出中位数\r\n        while (left <= right && right >= 0) {\r\n            index = left + (right - left) / 2;\r\n            index = Math.floor(index);\r\n            cellInfo = this._cellInfos[index];\r\n            if (this._curVisibleRect.intersects(cellInfo.frame)) {\r\n                checkIndex = index;\r\n                break;\r\n            }\r\n            if (this._curVisibleRect.yMax < cellInfo.frame.yMin || this._curVisibleRect.xMax < cellInfo.frame.xMin) {\r\n                right = index - 1;\r\n            } else {\r\n                left = index + 1;\r\n            }\r\n        }\r\n        //查找失败\r\n        if (checkIndex < 0) return this._cellInfos;\r\n\r\n        result.push(this._cellInfos[checkIndex]);\r\n\r\n        let startIndex: number = checkIndex;\r\n        let endIndex: number = checkIndex;\r\n        let idx: number;\r\n        let info:CellInfo;\r\n        //中位数往左查\r\n        while (startIndex > 0) {\r\n            idx = startIndex - 1;\r\n            info = this._cellInfos[idx];\r\n            if (!this._curVisibleRect.intersects(info.frame)) break;\r\n            result.push(info);\r\n            startIndex = idx;\r\n        }\r\n        //中位数往左右查\r\n        while (endIndex < this._cellInfos.length - 1) {\r\n            idx = endIndex + 1;\r\n            info = this._cellInfos[idx];\r\n            if (!this._curVisibleRect.intersects(info.frame)) break;\r\n            result.push(info);\r\n            endIndex = idx;\r\n        }\r\n\r\n        return result.sort((a: CellInfo, b: CellInfo) => {return a.index - b.index});\r\n            \r\n    }\r\n\r\n    /**\r\n     * 重置当前的可见范围  \r\n     */\r\n    private resetVisibleRect(): void {\r\n        this._curVisibleRect.origin = this._rollView.getScrollOffset();\r\n        this._curVisibleRect.x = - this._curVisibleRect.x;\r\n        this._curVisibleRect.size = this._rollView.view.contentSize;\r\n    }\r\n\r\n    /**\r\n     * 通知拉到头部尽头回调（内置ScrollView组件调用外部请勿调用此接口）\r\n     * @param isAction 是否可获取\r\n     * @param progress 当前拉取的进度\r\n     * @param state 拉取状态\r\n     */\r\n    public callPullHeader(isAction: boolean, progress: number, state: PullStateType): void {\r\n        let pullIndo:PullMoreInfo = {isAction: isAction, progress: progress, state: state};\r\n        if (this.isOpenPullHeader) this.updatePullHeader?.(pullIndo);\r\n    }\r\n\r\n    /**\r\n     * 通知拉到尾部尽头回调（内置ScrollView组件调用外部请勿调用此接口）\r\n     * @param isHeader \r\n     * @param progress \r\n     * @param state \r\n     */\r\n    public callPullFooter(isHeader: boolean, progress: number, state: PullStateType): void {\r\n        let pullIndo:PullMoreInfo = {isAction: isHeader, progress: progress, state: state};\r\n        if (this.isOpenPullFooter) this.updatePullFooter?.(pullIndo);\r\n    }\r\n\r\n    private getVisibleCell(name: string): Node {\r\n        for (let node of this._rollView.content.children) {\r\n            if (node.name === name) {\r\n                return node;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private getVisibleInfo(name: string): CellInfo {\r\n        let cellInfo: CellInfo;\r\n        for (let key in this._visibleInfoMap) {\r\n            cellInfo = this._visibleInfoMap[key];\r\n            if (cellInfo.cellName === name) {\r\n                return cellInfo;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 设置Cell总数\r\n     */\r\n    public set cellCount(count: number) {\r\n        this._cellCount = count;\r\n        this._cellInfos = null;\r\n        this._tempRollIndex = -1;\r\n        this._curSelectIndexList = [];\r\n        if (this._rollView) this._rollView.resetPullState();\r\n        this._isRecountSize = true;\r\n        this._isInitVisible = true;\r\n    }\r\n\r\n    /**\r\n     * 获取cell总数\r\n     */\r\n    public get cellCount(): number {\r\n        return this._cellCount;\r\n    }\r\n\r\n    public get rollView(): RollView {\r\n        return this._rollView;\r\n    }\r\n\r\n    /**\r\n     * 滚动到指定cell下标\r\n     * @param index cell下标\r\n     * @param timeInSecond 滚动时间\r\n     * @param attenuated 滚动加速是否衰减\r\n     */\r\n    public scrollToIndex(index: number, timeInSecond: number = 0, attenuated: boolean = true): void {\r\n        if (!this._cellInfos) {\r\n            this._tempRollIndex = index;\r\n            return;\r\n        }\r\n        let cellInfo: CellInfo = this._cellInfos[index];\r\n        if(cellInfo){\r\n            this._rollView.stopAutoScroll();\r\n            this._rollView.scrollToOffset(cellInfo.frame.origin, timeInSecond, attenuated);\r\n            this.setUpdateVisibleFlag();\r\n            //console.log(\"------>\" + index)\r\n        } else {\r\n            console.error(`无效滚动下标----->${index}`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 选中Cell下标\r\n     * @param index \r\n     */\r\n    public selectIndex(index: number, timeInSecond: number = 0, attenuated: boolean = true): void {\r\n        if (this.selectType != SelectType.ToggleGroup) {\r\n            console.error(\"当前非单选模式\");\r\n            return;\r\n        }\r\n        this._tempSelectIndexList.length = 0;\r\n        this._tempSelectIndexList[0] = index;\r\n        this.scrollToIndex(index, timeInSecond, attenuated);\r\n        \r\n    }\r\n\r\n    /**\r\n     * 获取当前Cell选中下标\r\n     * @returns \r\n     */\r\n    public getSelectIndex(): number {\r\n       return this._curSelectIndexList.length > 0 ? this._curSelectIndexList[0] : -1;\r\n    }\r\n\r\n    /**\r\n     * 获取当前显示节点实例列表\r\n     */\r\n    public get visibleCellList(): Node[] {\r\n        let result: Node[] = [];\r\n        for (let key in this._visibleCellMap) {\r\n            result.push(this._visibleCellMap[key]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 获取当前显示节点实例列表\r\n     */\r\n    public get visibleCellMap(): {[key: number]: Node} {\r\n        return this._visibleCellMap;\r\n    }\r\n\r\n    /**\r\n     * 获取当前显示节点实例Map\r\n     */\r\n    public get visibleCellInfoList(): CellInfo[] {\r\n        let result: CellInfo[] = [];\r\n        for (let key in this._visibleInfoMap) {\r\n            result.push(this._visibleInfoMap[key]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 设置选中多个Cell下标\r\n     * @param indexList \r\n     * @returns \r\n     */\r\n    public selectMultIndex(indexList: number[]): void {\r\n        if (this.selectType != SelectType.Toggle) {\r\n            console.error(\"当前非复选模式\");\r\n            return;\r\n        }\r\n        if (!this._cellInfos) {\r\n            this._tempSelectIndexList = indexList;\r\n            this._tempRollIndex = indexList[0];\r\n            return;\r\n        }\r\n        let cellInfo: CellInfo;\r\n        let cell: Node;\r\n        for (let index of indexList) {\r\n            cellInfo = this._cellInfos[index];\r\n            if (!cellInfo) return;\r\n            cell = this._visibleCellMap[cellInfo.index];\r\n            this.onSelect(cellInfo, cell);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取选中Cell下标列表\r\n     * @returns \r\n     */\r\n    public getSelectMultIndex(): number[] {\r\n        return this._curSelectIndexList;\r\n    }\r\n}\r\nexport class RollView extends ScrollView {\r\n    private vList:VList;\r\n    private readonly SCROLL_THRESHOLd = 0.5;//滚动临界值，默认单位百分比，当拖拽超出该数值时，松开会自动滚动下一页，小于时则还原\r\n    private readonly AUTO_Page_THRESHOLd: number = 100;//快速滑动翻页临界值。当用户快速滑动时，会根据滑动开始和结束的距离与时间计算出一个速度值,该值与此临界值相比较，如果大于临界值，则进行自动翻页\r\n    private readonly EPSILON: number = 1e-4;\r\n    private _tempVec2 = new Vec2();\r\n    private _touchBeganPos = new Vec2();//记录触摸开始坐标\r\n    private _touchEndPos = new Vec2();//记录触摸结束坐标\r\n\r\n    private _isPullMoveHeader: boolean = false;//是否已经拉取到头部可触发区域\r\n    private _isPullMoveFooter: boolean = false;//是否已经拉取到底部可触发区域\r\n    private _isPullLockHeader: boolean = false;//是否拉取到头部锁定状态\r\n    private _isPullLockFooter: boolean = false;//是否拉取到尾部锁定状态\r\n    private _pullHeaderProgress: number = 0;//拉取到头部进度\r\n    private _pullFooterProgress: number = 0;//拉取到尾部进度\r\n    public initView(vList:VList): void{\r\n        this.vList = vList;\r\n    }\r\n    /**重写内置函数 */\r\n    protected _onTouchBegan(event: EventTouch, captureListeners?: Node[]): void {\r\n        let nodes: Node[] = [event.target];\r\n        if (captureListeners) nodes = nodes.concat(captureListeners);\r\n        for (let node of nodes) {\r\n            // 清空滚动节点标记\r\n            node[`__RollTarget`] = null;\r\n        }\r\n        if (this.vList.isPageView) {\r\n            event.touch!.getUILocation(this._tempVec2);\r\n            Vec2.set(this._touchBeganPos, this._tempVec2.x, this._tempVec2.y);\r\n        }\r\n        super._onTouchBegan(event, captureListeners);\r\n    }\r\n\r\n    /** 重写ScrollView内置函数 */\r\n    protected _onTouchEnded(event: EventTouch, captureListeners?: Node[]): void {\r\n        if (this.vList.isPageView) {\r\n            event.touch!.getUILocation(this._tempVec2);\r\n            Vec2.set(this._touchEndPos, this._tempVec2.x, this._tempVec2.y);\r\n        }\r\n        super._onTouchEnded(event, captureListeners);\r\n    }\r\n\r\n    /** 重写ScrollView内置函数 */\r\n    protected _onTouchCancelled(event: EventTouch, captureListeners?: Node[]): void {\r\n        if (this.vList.isPageView) {\r\n            event.touch!.getUILocation(this._tempVec2);\r\n            Vec2.set(this._touchEndPos, this._tempVec2.x, this._tempVec2.y);\r\n        }\r\n        super._onTouchCancelled(event, captureListeners);\r\n    }\r\n\r\n    /**重写内置函数 */\r\n    protected _onTouchMoved(event: EventTouch, captureListeners?: Node[]): void {\r\n        let rollTarget: Node = this.getRollTarget(event, captureListeners);\r\n        if (this.node === rollTarget) {\r\n            super._onTouchMoved(event, captureListeners);\r\n\r\n            if (this.vList.isOpenPullHeader || this.vList.isOpenPullFooter) {\r\n                let outOfBoundary: Vec3 = this._getHowMuchOutOfBoundary();\r\n                let offset: number = this.vertical ? outOfBoundary.y : -outOfBoundary.x;\r\n                //console.log(\"---------->offset\")\r\n                if (offset > 0 && !this._isPullLockHeader && !this._isPullLockFooter) {\r\n                    this._pullHeaderProgress = offset < this.EPSILON ? 0 : offset / this.vList.pullOffset;\r\n                    this._isPullMoveHeader = this.vList.isOpenPullHeader && this._pullHeaderProgress >= this.vList.pullMultiple;\r\n                    this.vList.callPullHeader(false, this._pullHeaderProgress, this._isPullMoveHeader ? PullStateType.LET_GO : PullStateType.GO_ON);\r\n                    this.vList.callPullFooter(false, 0, PullStateType.CANCEL);\r\n                } else if (offset < 0 && !this._isPullLockHeader && !this._isPullLockFooter) {\r\n                    this._pullFooterProgress = -offset < this.EPSILON ? 0 : -offset / this.vList.pullOffset;\r\n                    this._isPullMoveFooter = this.vList.isOpenPullFooter && this._pullFooterProgress >= this.vList.pullMultiple;\r\n                    //console.log(\"是否移动到尾部\" + this._isPullMoveFooter)\r\n                    this.vList.callPullFooter(false, this._pullFooterProgress, this._isPullMoveFooter ? PullStateType.LET_GO : PullStateType.GO_ON);\r\n                    this.vList.callPullHeader(false, 0, PullStateType.CANCEL);\r\n                } else if (offset == 0 && !this._isPullLockHeader && !this._isPullLockFooter) {\r\n                    this.cancelPullState();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**重写内置函数 */\r\n    protected _hasNestedViewGroup(event: Event, captureListeners?: Node[]): boolean {\r\n        return false;//默认给无嵌套列表，具体滚动目标由_onTouchMoved去判断\r\n    }\r\n\r\n    /**重写内置函数 */\r\n    protected _stopPropagationIfTargetIsMe(event: Event): void {\r\n        if (this._touchMoved) {\r\n            event.propagationStopped = true;\r\n            return;\r\n        }\r\n        super._stopPropagationIfTargetIsMe(event);\r\n    }\r\n\r\n    /** 重写ScrollView内置函数 */\r\n    protected _handleReleaseLogic(touch: Touch): void {\r\n        if (this.vList.isPageView) {\r\n            this.autoScrollToPage();\r\n            if (this._scrolling) {\r\n                this._scrolling = false;\r\n                if (!this._autoScrolling) {\r\n                    this._dispatchEvent(ScrollView.EventType.SCROLL_ENDED);\r\n                }\r\n            }\r\n        } else {\r\n            super._handleReleaseLogic(touch);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 重写ScrollView 内置函数\r\n    */\r\n    protected _startAutoScroll(deltaMove: Vec3, timeInSecond: number, attenuated?: boolean, flag?: boolean): void {\r\n        if (this.vList.isOpenPullHeader || this.vList.isOpenPullFooter) {  // 如果没有刷新/加载的监听者 则不计算 \r\n            if (this._isPullMoveHeader && !this._isPullLockHeader) {\r\n                if (this.vertical) {\r\n                    this._topBoundary -= this.vList.pullOffset;\r\n                    deltaMove.y -= this.vList.pullOffset;\r\n                } else {\r\n                    this._leftBoundary += this.vList.pullOffset;\r\n                    deltaMove.x += this.vList.pullOffset;\r\n                }\r\n                this._isPullLockHeader = true;\r\n                this.vList.callPullHeader(true, this._pullHeaderProgress, PullStateType.LOCK);\r\n            } else if (this._isPullMoveFooter && !this._isPullLockFooter) {\r\n                if (this.vertical) {\r\n                    this._bottomBoundary += this.vList.pullOffset;\r\n                    deltaMove.y += this.vList.pullOffset;\r\n                } else {\r\n                    this._rightBoundary -= this.vList.pullOffset;\r\n                    deltaMove.x -= this.vList.pullOffset;\r\n                }\r\n                this._isPullLockFooter = true;\r\n                this.vList.callPullFooter(true, this._pullFooterProgress, PullStateType.LOCK);\r\n            }\r\n        }\r\n        super._startAutoScroll(deltaMove, timeInSecond, attenuated);\r\n    }\r\n    \r\n    /** \r\n     * 重写ScrollView 内置函数\r\n    */\r\n    protected _updateScrollBar(outOfBoundary: Vec2 | Readonly<Vec2>): void {\r\n        super._updateScrollBar(new Vec2(outOfBoundary.x, outOfBoundary.y));\r\n        if (this._autoScrollBraking) return; // 自动回弹时不计算 （非手动）\r\n        //console.log(\"是否惯性滚动\" + this._autoScrolling)\r\n        if (!this._autoScrolling) return; // 非自动滚动时不计算 \r\n        if (!this.vList.isOpenPullHeader && !this.vList.isOpenPullFooter) return;\r\n        let offset: number = this.vertical ? outOfBoundary.y : -outOfBoundary.x;\r\n        let progress: number;\r\n        if (offset > 0) { // 下滑\r\n            progress = offset < this.EPSILON ? 0 : offset / this.vList.pullOffset; //根据参数 headerOutOffset 计算当前下滑的办百分比\r\n            if (this._isPullLockHeader) {\r\n                this._pullHeaderProgress = this._pullHeaderProgress == 1 ? this._pullHeaderProgress : Math.max(progress, 1);\r\n                this.vList.callPullHeader(false, this._pullHeaderProgress, PullStateType.LOCK);\r\n            } else {\r\n                this._pullHeaderProgress = progress < this._pullHeaderProgress ? progress : this._pullHeaderProgress;\r\n                this.vList.callPullHeader(false, this._pullHeaderProgress, PullStateType.CANCEL);\r\n            }\r\n        } else if (offset < 0) {\r\n            progress = -offset < this.EPSILON ? 0 : -offset / this.vList.pullOffset;  //根据参数 pullOffset 计算当前下滑的办百分比\r\n            if (this._isPullLockFooter) {\r\n                this._pullFooterProgress = this._pullFooterProgress == 1 ? this._pullFooterProgress : Math.max(progress, 1);\r\n                this.vList.callPullFooter(false, this._pullFooterProgress, PullStateType.LOCK);\r\n            } else {\r\n                this._pullFooterProgress = progress < this._pullFooterProgress ? progress : this._pullFooterProgress;\r\n                this.vList.callPullFooter(false, this._pullFooterProgress, PullStateType.CANCEL);\r\n            }\r\n        } else if (offset == 0) {\r\n            // 正常滑动时 如果没有锁定头和尾时 释放所有进度\r\n            if (!this._isPullLockHeader && !this._isPullLockFooter) {\r\n                this.cancelPullState();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 是否已到达边界\r\n     * @returns \r\n     */\r\n    public get isOutOfBoundary(): boolean {\r\n        return this._isOutOfBoundary();\r\n    }\r\n\r\n    /**\r\n     * 获取本次滑动目标列表\r\n     */\r\n    private getRollTarget(event: EventTouch, captureListeners?: Node[]): Node {\r\n        let cache: Node = event.target[`__RollTarget`];\r\n        if (cache) return cache;\r\n\r\n        let nodes: Node[] = [event.target];\r\n        if (captureListeners) nodes = nodes.concat(captureListeners);\r\n        if (nodes.length == 1) return nodes[0];\r\n\r\n        let touch: Touch = event.touch;\r\n        let deltaMove: Vec2 = touch.getLocation().subtract(touch.getStartLocation());\r\n        let x: number = Math.abs(deltaMove.x);\r\n        let y: number = Math.abs(deltaMove.y);\r\n        let distance: number = Math.abs(x - y);\r\n        if (distance < 5) return null;\r\n\r\n        let result: Node = null;\r\n        for (let node of nodes) {\r\n            let rollView = node.getComponent(RollView);\r\n            if (rollView) {\r\n                if (result == null) result = node; // 取第一个滚动组件作为默认响应者\r\n                if ((rollView.horizontal && x > y) || (rollView.vertical && y > x)) {\r\n                    result = node;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        \r\n        if (result) {\r\n            for (let node of nodes) {\r\n                node[`__RollTarget`] = result;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /** \r\n     * 自动滚到页 \r\n     */\r\n    private autoScrollToPage(): void {\r\n        let bounceBackStarted: boolean = this._startBounceBackIfNeeded();\r\n        let pageIndex: number = this.vList.getSelectIndex();\r\n        if (bounceBackStarted) {\r\n            const bounceBackAmount: Vec3 = this._getHowMuchOutOfBoundary();\r\n            this._clampDelta(bounceBackAmount);\r\n            if (this.horizontal) {\r\n                if (bounceBackAmount.x < 0) {\r\n                    pageIndex = 0;\r\n                } else if(bounceBackAmount.x > 0) {\r\n                    pageIndex = this.vList.cellCount > 0 ? this.vList.cellCount - 1 : 0;\r\n                }\r\n            } else {\r\n                if (bounceBackAmount.y > 0) {\r\n                    pageIndex = 0;\r\n                } else if(bounceBackAmount.y < 0) {\r\n                    pageIndex = this.vList.cellCount > 0 ? this.vList.cellCount - 1 : 0;\r\n                }\r\n            }\r\n        } else {\r\n            let moveOffset: Vec2 = new Vec2();\r\n            Vec2.subtract(moveOffset, this._touchBeganPos, this._touchEndPos);\r\n            let index: number = pageIndex;\r\n            let nextIndex: number = index + this.getDragPageNum(moveOffset);\r\n            let timeInSecond: number = 0.3 * Math.abs(index - nextIndex);\r\n            if (nextIndex < this.vList.cellCount) {\r\n                if (this.isScrollable(moveOffset, index, nextIndex)) {\r\n                    this.vList.selectIndex(nextIndex, timeInSecond);\r\n                    return;\r\n                } else {\r\n                    let touchMoveVelocity = this._calculateTouchMoveVelocity();\r\n                    if (this.isQuicklyScrollable(touchMoveVelocity)) {\r\n                        this.vList.selectIndex(nextIndex, timeInSecond);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            this.vList.selectIndex(index, timeInSecond);\r\n        }\r\n    }\r\n\r\n    /** 是否超过自动滚动临界值 */\r\n    private isScrollable(offset: Vec2, index: number, nextIndex: number): boolean {\r\n        if (this.horizontal) {\r\n            return Math.abs(offset.x) >= this.view.width * this.SCROLL_THRESHOLd;\r\n        } else {\r\n            return Math.abs(offset.y) >= this.view.height * this.SCROLL_THRESHOLd;\r\n        }\r\n    }\r\n\r\n    /** 判断是否快速滑动 */\r\n    private isQuicklyScrollable(touchMoveVelocity: Vec3): boolean {\r\n        if (this.horizontal) {\r\n            if (Math.abs(touchMoveVelocity.x) > this.AUTO_Page_THRESHOLd) {\r\n                return true;\r\n            }\r\n        } else {\r\n            if (Math.abs(touchMoveVelocity.y) > this.AUTO_Page_THRESHOLd) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /** \r\n     * 获取拖拽页数 \r\n     */\r\n    private getDragPageNum(moveOffset: Vec2): number {\r\n        if (this.horizontal) {\r\n            if (moveOffset.x === 0) return 0;\r\n            return moveOffset.x > 0 ? 1 : -1;\r\n        } else {\r\n            if (moveOffset.y === 0) return 0;\r\n            return moveOffset.y < 0 ? 1 : -1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 取消拉取更多状态\r\n     */\r\n    cancelPullState(): void {\r\n        this.vList.callPullHeader(false, 0, PullStateType.CANCEL);\r\n        this.vList.callPullFooter(false, 0, PullStateType.CANCEL);\r\n    }\r\n\r\n    /** \r\n     * 重置拉取更多各种状态 \r\n    */\r\n    resetPullState(): void {\r\n        this._isPullMoveHeader = false;\r\n        this._isPullMoveFooter = false;\r\n        if (this._isPullLockHeader || this._isPullLockFooter) {\r\n            this.cancelPullState();\r\n            this._isPullLockHeader = false;\r\n            this._isPullLockFooter = false;\r\n        }\r\n    }\r\n}\r\nexport class CellInfo {\r\n    private _name: string;\r\n    private _index: number;\r\n    private _isSelect: boolean = false;\r\n    private _frame: math.Rect = new math.Rect();\r\n    constructor(){\r\n        \r\n    }\r\n    set name(value: string) {\r\n        this._name = value;\r\n    }\r\n\r\n    get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    set index(value: number) {\r\n        this._index = value;\r\n    }\r\n\r\n    get index(): number {\r\n        return this._index;\r\n    }\r\n\r\n    set isSelect(value: boolean) {\r\n        this._isSelect = value;\r\n    }\r\n\r\n    get isSelect(): boolean {\r\n        return this._isSelect;\r\n    }\r\n\r\n    get frame(): math.Rect { \r\n        return this._frame; \r\n    }\r\n    \r\n    get cellName(): string {\r\n        return `${this.name}_${this._index}`;\r\n    }\r\n}"]}