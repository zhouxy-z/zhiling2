{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/resources/prefabs/bag/BagModule.ts"],"names":["BagModule","MsgTypeRet","CfgMgr","EventMgr","Evt_Compose","Evt_GetReward","Evt_Item_Change","Session","ItemUtil","RewardTips","ShowHeroPanel","HomeUI","PlayerData","constructor","itemChangeOff","on","ItemChangePush","onItemChange","SynthesizeRoleRet","onMergeItem","OpenBoxRet","getOpenBoxReward","UseItemRet","useItemRet","data","i","items","length","item","id","old","count","splice","emit","Flush","push","isNew","Show","role","AddRole","reward_data","maps","reward_thing_count","index","awardList","type","reward_thing_type","reward_thing_id","MergeThings","cfg","GetRewardRoleById","passive_skills","cfg_role_type","GetRole","RoleType","PassiveGife","passive_skill_data1","skill_id","level","PassiveJob","passive_skill_data2","cfg_reward_role","PassiveId","num","element","passive_skill_data3","CreateThing","RoleLevel","experience","soldier_num","active_skills","is_in_building","building_id","battle_power","quality","RoleQuality","skills","is_assisting","is_in_attack_lineup","is_in_defense_lineup","trade_cd","spinetype","item_id","Getitem","SpecialDisplay","console","log","Items","LootPlayerData","shield_end_time","GetServerTime","ItemEffect1"],"mappings":"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","sourcesContent":["import { MsgTypeRet } from \"../../MsgType\";\r\nimport { PassiveSkill } from \"../../battle/BattleLogic/logic/component/PassiveSkills\";\r\nimport { Item } from \"../../editor/Item\";\r\nimport { CfgMgr } from \"../../manager/CfgMgr\";\r\nimport { EventMgr, Evt_Compose, Evt_GetReward, Evt_Item_Change } from \"../../manager/EventMgr\";\r\nimport { Session } from \"../../net/Session\";\r\nimport { ItemUtil } from \"../../utils/ItemUtils\";\r\nimport { RewardTips } from \"../common/RewardTips\";\r\nimport { ShowHeroPanel } from \"../common/ShowHeroPanel\";\r\nimport { CardType } from \"../home/panel/Card\";\r\nimport { HomeUI } from \"../home/panel/HomeUI\";\r\nimport PlayerData, {} from \"../roleModule/PlayerData\"\n import {SPlayerDataRole,SPlayerDataSkill,SThing} from \"../roleModule/PlayerStruct\";\r\n\r\nexport class BagModule {\r\n    constructor() {\r\n        Session.on(MsgTypeRet.ItemChangePush, this.onItemChange, this);\r\n        Session.on(MsgTypeRet.SynthesizeRoleRet, this.onMergeItem, this);\r\n        Session.on(MsgTypeRet.OpenBoxRet, this.getOpenBoxReward, this);\r\n        Session.on(MsgTypeRet.UseItemRet, this.useItemRet, this);\r\n    }\r\n\r\n    protected itemChangeOff = false;\r\n    onItemChange(data: { change_count: number, count: number, id: number }) {\r\n        for (let i = 0; i < PlayerData.items.length; i++) {\r\n            let item = PlayerData.items[i];\r\n            if (item.id == data.id) {\r\n                let old = item.count;\r\n                if (data.count <= 0) {\r\n                    PlayerData.items.splice(i, 1);\r\n                } else {\r\n                    item.count = data.count;\r\n                }\r\n                EventMgr.emit(Evt_Item_Change);\r\n                return;\r\n            }\r\n        }\r\n        HomeUI.Flush();\r\n        PlayerData.items.push({ id: data.id, count: data.count, isNew: true });\r\n        EventMgr.emit(Evt_Item_Change);\r\n    }\r\n\r\n    onMergeItem(data: { role: SPlayerDataRole }) {\r\n        ShowHeroPanel.Show(data.role)\r\n        PlayerData.AddRole(data.role);\r\n        EventMgr.emit(Evt_Compose, data);\r\n    }\r\n\r\n    getOpenBoxReward(data: { reward_thing_type: number[], reward_thing_id: number[], reward_thing_count: number[], item_id: number }) {\r\n        if (data) {\r\n            let reward_data: SThing[] = [];\r\n            let maps = {};\r\n            let count = data.reward_thing_count.length\r\n            for (let index = 0; index < count; index++) {\r\n                let awardList: SThing;\r\n                let type = data.reward_thing_type[index];\r\n                let id = data.reward_thing_id[index];\r\n                if (maps[type + \"_\" + id]) {\r\n                    ItemUtil.MergeThings(maps[type + \"_\" + id], data.reward_thing_count[index] || 0);\r\n                    continue;\r\n                } else if (type == 5) {\r\n                    let cfg = CfgMgr.GetRewardRoleById(id);\r\n\r\n                    //添加被动技能\r\n                    let passive_skills:SPlayerDataSkill[] = [];\r\n                    let cfg_role_type = CfgMgr.GetRole()[cfg.RoleType]\r\n                    if(cfg_role_type && cfg_role_type.PassiveGife){\r\n                        let passive_skill_data1:SPlayerDataSkill = {skill_id: cfg_role_type.PassiveGife, level:1}\r\n                        passive_skills.push(passive_skill_data1);\r\n                    }\r\n                    if(cfg_role_type && cfg_role_type.PassiveJob){\r\n                        let passive_skill_data2:SPlayerDataSkill = {skill_id: cfg_role_type.PassiveJob, level:1}\r\n                        passive_skills.push(passive_skill_data2);\r\n                    }\r\n\r\n                    let cfg_reward_role = CfgMgr.GetRewardRoleById(cfg.RoleType)\r\n                    if(cfg_reward_role && cfg_reward_role.PassiveId){\r\n                        let num = cfg_reward_role.PassiveId.length\r\n                        for (let index = 0; index < num; index++) {\r\n                            const element = cfg_reward_role.PassiveId[index];                            \r\n                            let passive_skill_data3:SPlayerDataSkill = {skill_id: element, level:1}\r\n                            passive_skills.push(passive_skill_data3);\r\n                        }\r\n                    }\r\n                    \r\n                    awardList = ItemUtil.CreateThing(type, cfg.RoleType, data.reward_thing_count[index]);\r\n                    awardList.role = {\r\n                        id: \"\",\r\n                        type: cfg.RoleType,\r\n                        level: cfg.RoleLevel,\r\n                        experience: 0,\r\n                        soldier_num: 0,\r\n                        active_skills: [],\r\n                        passive_skills: passive_skills,\r\n                        is_in_building: false,\r\n                        building_id: 0,\r\n                        battle_power: 0,\r\n                        quality: cfg.RoleQuality,\r\n                        skills: [],\r\n                        is_assisting: true,\r\n                        is_in_attack_lineup: false,\r\n                        is_in_defense_lineup: false,\r\n                        trade_cd: 0,\r\n                    }\r\n                } else {\r\n                    awardList = ItemUtil.CreateThing(type, id, data.reward_thing_count[index]);\r\n                }\r\n                maps[type + \"_\" + id] = awardList;\r\n                reward_data.push(awardList)\r\n            }\r\n            //获取宝箱特效\r\n            let spinetype: number = 1;\r\n            if (data.item_id) {\r\n                spinetype = CfgMgr.Getitem(data.item_id).SpecialDisplay;\r\n            }\r\n            RewardTips.Show(reward_data, true, null, spinetype)\r\n            EventMgr.emit(Evt_GetReward, data);\r\n        }\r\n    }\r\n\r\n    useItemRet(data) {\r\n        console.log(\"useItemRet\", data);\r\n        let cfg = CfgMgr.Getitem(data.item_id)\r\n        if(cfg.Items == 37 || cfg.Items == 38 || cfg.Items == 39 || cfg.Items == 40){\r\n            if(PlayerData.LootPlayerData.shield_end_time < PlayerData.GetServerTime() + cfg.ItemEffect1){\r\n                PlayerData.LootPlayerData.shield_end_time = PlayerData.GetServerTime() + cfg.ItemEffect1;\r\n            }\r\n        }\r\n    }\r\n}"]}