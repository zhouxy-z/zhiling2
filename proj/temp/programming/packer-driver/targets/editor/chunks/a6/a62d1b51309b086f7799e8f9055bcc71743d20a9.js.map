{"version":3,"sources":["file:///D:/plants_client/trunk/proj/assets/scripts/module/season/SectionAwardPanel.ts"],"names":["SectionAwardPanel","Panel","VList","SectionAwardItem","CfgMgr","PlayerData","EventMgr","Evt_SectionAwardInit","Evt_SectionAwardUpdate","RewardTips","prefab","awardList","stdPvpLevelList","curStdPVPSnatch","seasonData","onLoad","find","updateCell","updateSeasonAwarCell","bind","CloseBy","flush","updateShow","onShow","on","onAwardDataInit","onGetAward","onHide","off","data","things","length","Show","CurSeasonData","GetStdPVPSnatch","currentSeasonId","GetStdPvpLvCfgList","RankGroupID","curStdPvpLv","GetStdPvpLvByPoint","currentRankInfo","rankPoints","defIndex","index","std","LevelID","cellCount","scrollToIndex","cell","cellInfo","cellCom","getComponent","addComponent","SetData"],"mappings":"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","sourcesContent":["import { Panel } from \"../../manager/GameRoot\";\r\nimport { CellInfo, VList } from \"../../component/VList\";\r\nimport { SectionAwardItem } from \"./SectionAwardItem\";\r\nimport { Node} from \"cc\";\r\nimport { CfgMgr, StdPvpLevel, StdPVPSnatch } from \"../../manager/CfgMgr\";\r\nimport proto from \"../../net/Protocol\";\r\nimport { PlayerData } from \"../player/PlayerData\";\r\nimport { EventMgr, Evt_SectionAwardInit, Evt_SectionAwardUpdate } from \"../../manager/EventMgr\";\r\nimport { RewardTips } from \"../common/RewardTips\";\r\nexport class SectionAwardPanel extends Panel {\r\n    protected prefab: string = \"prefabs/season/SectionAwardPanel\";\r\n    private awardList: VList;\r\n    private stdPvpLevelList: StdPvpLevel[];\r\n    private curStdPVPSnatch: StdPVPSnatch;\r\n    private seasonData: proto.pb.PlayerPvpInfoPush;\r\n    protected onLoad() {\r\n        \r\n        this.awardList = this.find(\"cont/awardList\", VList);\r\n        this.awardList.updateCell = this.updateSeasonAwarCell.bind(this);\r\n        this.CloseBy(\"cont/closeBtn\");\r\n        this.CloseBy(\"mask\");\r\n        \r\n    }\r\n\r\n    public flush(): void {\r\n        this.updateShow();\r\n    }\r\n\r\n    protected onShow(): void {\r\n        EventMgr.on(Evt_SectionAwardInit, this.onAwardDataInit, this);\r\n        EventMgr.on(Evt_SectionAwardUpdate, this.onGetAward, this);\r\n    }\r\n\r\n    protected onHide(): void {\r\n        EventMgr.off(Evt_SectionAwardInit, this.onAwardDataInit, this);\r\n        EventMgr.off(Evt_SectionAwardUpdate, this.onGetAward, this);\r\n    }\r\n\r\n\r\n    private onAwardDataInit(): void {\r\n        this.updateShow();\r\n    }\r\n\r\n    private onGetAward(data: proto.base.IPlayerRankLevelReward): void {\r\n        if (data && data.things && data.things.length) {\r\n            RewardTips.Show(data.things);\r\n        }\r\n    }\r\n\r\n    private updateShow(): void {\r\n        this.seasonData = PlayerData.CurSeasonData;\r\n        this.curStdPVPSnatch = CfgMgr.GetStdPVPSnatch(this.seasonData.currentSeasonId);\r\n        this.stdPvpLevelList = CfgMgr.GetStdPvpLvCfgList(this.curStdPVPSnatch.RankGroupID);\r\n        let curStdPvpLv = CfgMgr.GetStdPvpLvByPoint(this.curStdPVPSnatch.RankGroupID, this.seasonData.currentRankInfo.rankPoints);\r\n        let defIndex: number = 0;\r\n        for (let index = 0; index < this.stdPvpLevelList.length; index++) {\r\n            let std: StdPvpLevel = this.stdPvpLevelList[index];\r\n            if (std.LevelID == curStdPvpLv.LevelID) {\r\n                defIndex = index;\r\n                break;\r\n            }\r\n        }\r\n        this.awardList.cellCount = this.stdPvpLevelList.length;\r\n        this.awardList.scrollToIndex(defIndex);\r\n    }\r\n\r\n    private updateSeasonAwarCell(cell: Node, cellInfo: CellInfo): void {\r\n        let cellCom: SectionAwardItem = cell.getComponent(SectionAwardItem) || cell.addComponent(SectionAwardItem);\r\n        cellCom.SetData(this.stdPvpLevelList[cellInfo.index]);\r\n    }\r\n}"]}