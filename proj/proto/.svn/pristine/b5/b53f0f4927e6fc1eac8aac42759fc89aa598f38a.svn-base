syntax = "proto3";
option go_package = "plants_server/proto/base";
package base;
import "base/model.player.proto";

message DoubleMap {
  map<string, double> values = 1;
}

// 字典的主键是卡牌ID，
message BattleRoomAttrValue {
  int32 final_value = 1; // final_value = ((base *  (1 + base_add_mul)) + add_0) *  (1 + add_mul_0))
  map<string, DoubleMap> base = 2;
  map<string, DoubleMap> base_add_mul = 3;
  map<string, DoubleMap> add0 = 4;
  map<string, DoubleMap> add_mul0 = 5;
}

message BattleRoomPlayerContext {
  string player_id = 1;
  string name = 2;
  uint32 level = 3;
  repeated BattleCard cards = 4;
}

message BattleRoomContext {
  string room_id = 1;
  uint32 level_id = 2;
  repeated BattleRoomPlayerContext players = 3;
}

// 房间数据摘要
message BattleRoomSummary {
  string room_id = 1;
  string server_id = 2;
  uint64 create_time = 3;
  repeated string player_ids = 4;
}

// 游戏状态
message BattleRoomGamePlayData {
  map<string, BattleRoomPlayerData> players = 1;
  repeated BattleRoomTerrainData terrains = 2;
  uint32 alloc_id = 3;
  uint32 current_round = 4; // 当前回合
  BattleRoomLevelData level_data = 5; // 关卡相关配置数据
}

message BattleRoomLevelData {
  uint32 level_id = 1; // 关卡表id
  uint32 round_max = 2; // 回合数
  uint32 hand_card_max = 3; // 最大手牌数
  uint32 terrain_card_max = 4; // 最大地形手牌数量
  uint32 terrain_max = 5; // 最大地形数量
}

enum BattleRoomCardLocation {
  Deck = 0; // 卡组
  Hand = 2; // 手牌
  Drop = 3; // 丢弃
  Del = 4; // 删除
  Terrain = 5; // 地形
}

enum BattleRoomCardTerrainState {
  Hide = 0;
  Show = 1;
}

// 卡片实例状态
message BattleRoomCardData {
  int32 config_id = 1; // 卡片系统实例ID
  string inst_id = 2; // 战斗内部实例ID
  int32 card_type = 3;
  int32 quality = 4;

  BattleRoomCardLocation location = 5;
  BattleRoomCardTerrainState terrain_state = 6;
  int32 area = 7; // 所在区域

  BattleRoomAttrValue power = 8; // 卡牌战力
  BattleRoomAttrValue cost = 9; // 卡牌消耗

  repeated BattleRoomSkillData skills = 10; // 技能列表
}

message BattleRoomSkillData {
  uint32 skill_id = 1; // 读表
}

// 玩家实例状态
message BattleRoomPlayerData {
  string player_id = 1;
  string name = 2;
  uint32 level = 3;
  bool is_ai = 4; // AI 托管

  repeated BattleRoomCardData deck_cards = 5; // 卡组卡牌
  repeated BattleRoomCardData hand_cards = 6; // 手牌
  repeated BattleRoomCardData drop_cards = 7; // 丢弃卡牌
  repeated BattleRoomCardData del_cards = 8; // 删除卡牌
  repeated BattleRoomAttrValue round_energy = 9; // 每回合能量
  repeated BattleRoomTerrainPlayerData terrain = 10;
}

message BattleRoomTerrainPlayerData {
  repeated BattleRoomCardData cards = 1; // 已放置再地形上的卡片
  BattleRoomAttrValue power = 2; // 玩家在每个地形上的战力
}

enum BattleRoomTerrainState {
  Brand = 0; // 盖牌
  Reveal = 1; // 展示
  Destroy = 2; // 销毁
}

// 环境
message BattleRoomTerrainData {
  int32 config_id = 1;//地形配置id
  string inst_id = 2;//实例id
  BattleRoomTerrainState state = 3;
  repeated BattleRoomSkillData skills = 5;
  int32 area = 6; // 所在区域
}